{"version":3,"file":"8.acoSpNx3.js","sources":["../../../../../../src/lib/setting.ts","../../../../../../src/routes/(app)/config/settings/ConfirmChallenge.svelte","../../../../../../src/routes/(app)/config/settings/confirm-challenge.ts","../../../../../../src/routes/(app)/config/settings/ResetPopup.svelte","../../../../../../src/routes/(app)/config/settings/+page.svelte"],"sourcesContent":["import type { Action } from \"svelte/action\";\nimport { changes, ChangeType, settings } from \"$lib/undo-redo\";\n\nexport const setting: Action<\n  HTMLInputElement | HTMLSelectElement,\n  { id: number; inverse?: number; scale?: number }\n> = function (\n  node: HTMLInputElement | HTMLSelectElement,\n  { id, inverse, scale },\n) {\n  node.setAttribute(\"disabled\", \"\");\n  const type = node.getAttribute(\"type\") as \"number\" | \"checkbox\" | \"range\";\n  const isNumeric =\n    type === \"number\" || type === \"range\" || node instanceof HTMLSelectElement;\n  const min = node.hasAttribute(\"min\")\n    ? Number(node.getAttribute(\"min\"))\n    : undefined;\n  const max = node.hasAttribute(\"max\")\n    ? Number(node.getAttribute(\"max\"))\n    : undefined;\n\n  const unsubscribe = settings.subscribe(async (settings) => {\n    if (id in settings) {\n      const { value, isApplied } = settings[id]!;\n      if (isNumeric) {\n        node.value = (\n          inverse !== undefined\n            ? inverse / value\n            : scale !== undefined\n              ? scale * value\n              : value\n        ).toString();\n      } else {\n        node.checked = value !== 0;\n      }\n      if (isApplied) {\n        node.classList.remove(\"pending-changes\");\n      } else {\n        node.classList.add(\"pending-changes\");\n      }\n      node.removeAttribute(\"disabled\");\n    } else {\n      node.setAttribute(\"disabled\", \"\");\n    }\n  });\n\n  async function listener() {\n    let value: number;\n    if (isNumeric) {\n      value = Number(node.value);\n      if (Number.isNaN(value)) return;\n      value = Math.floor(\n        inverse !== undefined\n          ? inverse / value\n          : scale !== undefined\n            ? value / scale\n            : value,\n      );\n      if (min !== undefined) value = Math.max(min, value);\n      if (max !== undefined) value = Math.min(max, value);\n    } else {\n      value = node.checked ? 1 : 0;\n    }\n\n    changes.update((changes) => {\n      changes.push({\n        type: ChangeType.Setting,\n        id: id,\n        setting: value,\n      });\n      return changes;\n    });\n  }\n\n  node.addEventListener(\"change\", listener);\n\n  return {\n    destroy() {\n      node.removeEventListener(\"change\", listener);\n      unsubscribe();\n    },\n  };\n};\n","<script lang=\"ts\">\n  import { serialPort } from \"$lib/serial/connection\";\n  import { createEventDispatcher } from \"svelte\";\n\n  export let challenge: string;\n\n  let challengeInput = \"\";\n  $: challengeString = `${challenge} ${$serialPort!.device}`;\n  $: isValid = challengeInput === challengeString;\n\n  const dispatch = createEventDispatcher();\n</script>\n\n<h3>Type the following to confirm the action</h3>\n\n<p>{challengeString}</p>\n<!-- svelte-ignore a11y-autofocus -->\n<input\n  autofocus\n  type=\"text\"\n  bind:value={challengeInput}\n  placeholder={challengeString}\n/>\n\n<button disabled={!isValid} on:click={() => dispatch(\"confirm\")}\n  >Confirm {challenge}</button\n>\n\n<style lang=\"scss\">\n  input[type=\"text\"] {\n    color: inherit;\n    font-family: inherit;\n    background: none;\n    border: none;\n    border-bottom: 1px solid currentcolor;\n    width: 100%;\n\n    &:focus {\n      outline: none;\n      border-color: var(--md-sys-color-secondary);\n    }\n  }\n\n  button {\n    color: var(--md-sys-color-error);\n  }\n</style>\n","import type { Action } from \"svelte/action\";\nimport ConfirmChallenge from \"./ConfirmChallenge.svelte\";\nimport tippy from \"tippy.js\";\n\nexport const confirmChallenge: Action<\n  HTMLElement,\n  { onConfirm: () => void; challenge: string }\n> = (node, { onConfirm, challenge }) => {\n  let component: ConfirmChallenge | undefined;\n  let target: HTMLElement | undefined;\n  const edit = tippy(node, {\n    interactive: true,\n    trigger: \"click\",\n    onShow(instance) {\n      target = instance.popper.querySelector(\".tippy-content\") as HTMLElement;\n      target.classList.add(\"active\");\n      if (component === undefined) {\n        component = new ConfirmChallenge({ target, props: { challenge } });\n        component.$on(\"confirm\", () => {\n          edit.hide();\n          onConfirm();\n        });\n      }\n    },\n    onHidden() {\n      component?.$destroy();\n      target?.classList.remove(\"active\");\n      component = undefined;\n    },\n  });\n\n  return {\n    destroy() {\n      edit.destroy();\n    },\n  };\n};\n","<script lang=\"ts\">\n  import { confirmChallenge } from \"./confirm-challenge\";\n  import { serialPort } from \"$lib/serial/connection\";\n\n  const options = [\n    [[\"FACTORY\", \"Factory Reset\"]],\n    [\n      [\"PARAMS\", \"Reset Settings\"],\n      [\"KEYMAPS\", \"Reset Layout\"],\n      [\"CLEARCML\", \"Clear Chords\"],\n    ],\n    [\n      [\"STARTER\", \"Add starter chords\"],\n      [\"FUNC\", \"Add functional chords\"],\n    ],\n  ] as const;\n</script>\n\n<h3>Reset Device</h3>\n{#each options as category, i}\n  {#if i > 0}\n    <hr />\n  {/if}\n  {#each category as [command, description]}\n    <button\n      class=\"error\"\n      use:confirmChallenge={{\n        onConfirm() {\n          $serialPort?.reset(command);\n          $serialPort = undefined;\n        },\n        challenge: description,\n      }}>{description}...</button\n    >\n  {/each}\n{/each}\n\n<style lang=\"scss\">\n  hr {\n    opacity: 0.25;\n  }\n</style>\n","<script>\n  import Action from \"$lib/components/Action.svelte\";\n  import { popup } from \"$lib/popup\";\n  import { serialPort } from \"$lib/serial/connection\";\n  import { setting } from \"$lib/setting\";\n  import ResetPopup from \"./ResetPopup.svelte\";\n</script>\n\n<svelte:head>\n  <title>Device Settings - CharaChorder Device Manager</title>\n  <meta name=\"description\" content=\"Change your device's settings\" />\n</svelte:head>\n\n{#if $serialPort}\n  <section>\n    <fieldset>\n      <legend\n        ><label\n          ><input type=\"checkbox\" use:setting={{ id: 0x41 }} />Spurring</label\n        ></legend\n      >\n      <p>\n        \"Chording only\" mode which tells your device to output chords on a press\n        rather than a press & release. It also enables you to jump from one\n        chord to another without releasing everything and can be activated in\n        GTM or by chording both mirror keys. It can provide significant speed\n        gains with chording, but also takes away the flexibility of character\n        entry.\n      </p>\n      <p>\n        Spurring also helps new users learn how to chord by eliminating the need\n        to focus on timing.\n      </p>\n      <p>\n        Spurring is toggled by chording <Action display=\"keys\" action={540} /> and\n        <Action display=\"keys\" action={542} /> together.\n      </p>\n      <label\n        >Character Counter Timeout<span class=\"unit\"\n          ><input\n            type=\"number\"\n            step=\"0.001\"\n            min=\"0\"\n            max=\"240\"\n            use:setting={{ id: 0x43, scale: 0.001 }}\n          />s</span\n        ></label\n      >\n    </fieldset>\n\n    <fieldset>\n      <legend\n        ><label\n          ><input\n            type=\"checkbox\"\n            use:setting={{ id: 0x51 }}\n          />Arpeggiates</label\n        ></legend\n      >\n      <p>\n        A quick, single key press and release used to indicate a suffix, prefix,\n        or modifier to be associated with a chord.\n      </p>\n      <p>\n        The following keys have special behavior when arpeggiates are enabled:\n      </p>\n      <ul>\n        <li>\n          <Action display=\"keys\" action={44} />, <Action\n            display=\"keys\"\n            action={59}\n          /> and <Action display=\"keys\" action={58} /> will be placed before the\n          auto-inserted space\n        </li>\n        <li>\n          <Action display=\"keys\" action={46} />, <Action\n            display=\"keys\"\n            action={63}\n          /> and <Action display=\"keys\" action={33} /> will be placed before the\n          auto-inserted space and capitalize the next word\n        </li>\n        <li>\n          <Action display=\"keys\" action={45} /> and <Action\n            display=\"keys\"\n            action={47}\n          /> will replace the auto-inserted space\n        </li>\n      </ul>\n      <label\n        >Timeout After Chord<span class=\"unit\"\n          ><input type=\"number\" step=\"1\" use:setting={{ id: 0x54 }} />ms</span\n        ></label\n      >\n    </fieldset>\n\n    <fieldset>\n      <legend>Chord Modifiers</legend>\n      <p>\n        Chord modifiers change a chord when held with the chord or when pressed\n        after (arpeggiated), <b>provided that arpeggiates are enabled.</b>\n      </p>\n      <ul>\n        <li>\n          <Action display=\"keys\" action={513} /> Capitalizes the first letter of\n          a chord\n        </li>\n        <li>\n          <Action display=\"keys\" action={540} /> Present Tense (supported words only)\n        </li>\n        <li>\n          <Action display=\"keys\" action={542} /> Plural (supported words only)\n        </li>\n        <li>\n          <Action display=\"keys\" action={550} /> Past Tense (supported words only)\n        </li>\n        <li>\n          <Action display=\"keys\" action={551} /> Comparative (supported words only)\n        </li>\n      </ul>\n    </fieldset>\n\n    <fieldset>\n      <legend>Character Entry</legend>\n      {#if $serialPort.device === \"LITE\"}\n        <label\n          >Swap Keymap 0 and 1<input\n            type=\"checkbox\"\n            use:setting={{ id: 0x13 }}\n          /></label\n        >\n      {/if}\n      <label>\n        Character Entry (chentry)\n        <input type=\"checkbox\" use:setting={{ id: 0x12 }} />\n      </label>\n      <label>\n        Key Scan Rate\n        <span class=\"unit\"\n          ><input\n            type=\"number\"\n            use:setting={{ id: 0x14, inverse: 1000 }}\n          />Hz</span\n        ></label\n      >\n      <label>\n        Key Debounce Press<span class=\"unit\"\n          ><input type=\"number\" use:setting={{ id: 0x15 }} />ms</span\n        ></label\n      >\n      <label\n        >Key Debounce Release<span class=\"unit\"\n          ><input type=\"number\" use:setting={{ id: 0x16 }} />ms</span\n        ></label\n      >\n      <label\n        >Output Character Delay<span class=\"unit\"\n          ><input type=\"number\" use:setting={{ id: 0x17 }} />µs</span\n        ></label\n      >\n    </fieldset>\n\n    <fieldset>\n      <legend\n        ><label><input type=\"checkbox\" use:setting={{ id: 0x21 }} />Mouse</label\n        ></legend\n      >\n      <label\n        >Mouse Speed<input type=\"number\" use:setting={{ id: 0x22 }} /><input\n          type=\"number\"\n          use:setting={{ id: 0x23 }}\n        /></label\n      >\n      <label\n        >Scroll Speed<input type=\"number\" use:setting={{ id: 0x25 }} /></label\n      >\n      <label>\n        <span>\n          Active Mouse\n          <p>Bounces mouse by 1px every 60s if enabled</p></span\n        >\n        <input type=\"checkbox\" use:setting={{ id: 0x24 }} /></label\n      >\n      <label\n        >Poll Rate<span class=\"unit\"\n          ><input\n            type=\"number\"\n            use:setting={{ id: 0x26, inverse: 1000 }}\n          />Hz</span\n        ></label\n      >\n    </fieldset>\n\n    <fieldset>\n      <legend\n        ><label\n          ><input type=\"checkbox\" use:setting={{ id: 0x31 }} />Chording</label\n        ></legend\n      >\n      <label\n        >Auto-delete Timeout <span class=\"unit\"\n          ><input\n            type=\"number\"\n            min=\"0\"\n            max=\"25500\"\n            step=\"10\"\n            use:setting={{ id: 0x33 }}\n          />ms</span\n        ></label\n      >\n      <label\n        >Press Tolerance<span class=\"unit\"\n          ><input\n            type=\"number\"\n            min=\"1\"\n            max=\"150\"\n            step=\"1\"\n            use:setting={{ id: 0x34 }}\n          />ms</span\n        ></label\n      >\n      <label\n        >Release Tolerance<span class=\"unit\"\n          ><input\n            type=\"number\"\n            min=\"1\"\n            max=\"150\"\n            step=\"1\"\n            use:setting={{ id: 0x35 }}\n          />ms</span\n        ></label\n      >\n      <label\n        >Compound Chording<input\n          type=\"checkbox\"\n          use:setting={{ id: 0x61 }}\n        /></label\n      >\n    </fieldset>\n\n    <fieldset>\n      <legend>Device</legend>\n      <label\n        >Boot message<input type=\"checkbox\" use:setting={{ id: 0x93 }} /></label\n      >\n      <label\n        >GTM Realtime Feedback<input\n          type=\"checkbox\"\n          use:setting={{ id: 0x92 }}\n        /></label\n      >\n      <button class=\"outline\" use:popup={ResetPopup}>Reset...</button>\n    </fieldset>\n\n    {#if $serialPort.device === \"LITE\"}\n      <fieldset>\n        <legend\n          ><label><input type=\"checkbox\" use:setting={{ id: 0x84 }} />RGB</label\n          ></legend\n        >\n        <label\n          >Brightness<input\n            use:setting={{ id: 0x81 }}\n            type=\"number\"\n            min=\"0\"\n            max=\"50\"\n            step=\"1\"\n          /></label\n        >\n        <select use:setting={{ id: 0x82 }}>\n          <option value=\"0\">White</option>\n          <option value=\"1\">Red</option>\n          <option value=\"2\">Orange</option>\n          <option value=\"3\">Yellow</option>\n          <option value=\"4\">Lime</option>\n          <option value=\"5\">Green</option>\n          <option value=\"7\">Cyan</option>\n          <option value=\"9\">Blue</option>\n          <option value=\"10\">Violet</option>\n          <option value=\"11\">Pink</option>\n          <option value=\"13\">Multicolor</option>\n        </select>\n      </fieldset>\n    {/if}\n  </section>\n{/if}\n\n<style lang=\"scss\">\n  section {\n    overflow-y: auto;\n    display: flex;\n    flex-flow: row wrap;\n    gap: 16px;\n    justify-content: center;\n\n    margin-block: auto;\n    padding-block-end: 48px;\n  }\n\n  button.outline {\n    border: 1px solid currentcolor;\n    border-radius: 8px;\n    height: 2em;\n    margin-block: 2em;\n    margin-inline: auto;\n  }\n\n  legend,\n  legend > label {\n    font-size: 24px;\n    font-weight: bold;\n    position: relative;\n    padding: 0 16px;\n  }\n\n  legend:has(label) {\n    padding: 0;\n  }\n\n  legend:not(:has(label)) {\n    opacity: 0.8;\n  }\n\n  input[type=\"checkbox\"] {\n    font-size: 12px;\n  }\n\n  fieldset {\n    max-width: 400px;\n    border: 1px solid var(--md-sys-color-outline);\n    border-radius: 24px;\n\n    &:has(> legend input:not(:checked)) > :not(legend) {\n      pointer-events: none;\n      opacity: 0.7;\n    }\n\n    > label {\n      position: relative;\n      display: flex;\n      gap: 16px;\n      align-items: center;\n      justify-content: space-between;\n\n      margin-block: 4px;\n\n      font-size: 14px;\n\n      > input[type=\"number\"] {\n        border-radius: 16px 4px 4px 16px;\n        height: 24px;\n        text-align: center;\n\n        &:last-child:not(:only-child) {\n          border-radius: 4px 16px 16px 4px;\n        }\n\n        &:only-child {\n          border-radius: 16px;\n        }\n      }\n\n      &:has(input[type=\"number\"]) {\n        cursor: text;\n\n        &:hover {\n          filter: none;\n        }\n      }\n    }\n\n    .unit {\n      overflow: hidden;\n      display: flex;\n      gap: 4px;\n      align-items: center;\n      justify-content: flex-start;\n\n      width: 67px;\n      padding-inline-end: auto;\n\n      font-size: 12px;\n      font-weight: bold;\n\n      background: var(--md-sys-color-secondary-container);\n      border-radius: 16px;\n    }\n\n    input[type=\"number\"] {\n      display: flex;\n\n      width: 5ch;\n      height: 100%;\n      padding-block: 4px;\n\n      font-family: \"Noto Sans Mono\", monospace;\n      color: var(--md-sys-color-on-secondary);\n      text-align: end;\n\n      background: var(--md-sys-color-secondary);\n      border: none;\n\n      &::-webkit-inner-spin-button {\n        display: none;\n      }\n\n      &::after {\n        content: \"bleh\";\n      }\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    ul,\n    p {\n      font-size: 10px;\n\n      :global(kbd) {\n        font-size: 12px;\n        height: 18px;\n      }\n    }\n  }\n\n  // stylelint-disable-next-line\n  label:global(:has(.pending-changes)) {\n    color: var(--md-sys-color-primary);\n\n    &::before {\n      position: absolute;\n      font-size: 16px;\n      top: 0.5em;\n      right: 0.25em;\n      content: \"•\";\n    }\n  }\n</style>\n"],"names":["setting","node","id","inverse","scale","type","isNumeric","min","max","unsubscribe","settings","value","isApplied","listener","changes","ChangeType","ctx","insert_hydration","target","h3","anchor","p","input","button","challenge","$$props","challengeInput","dispatch","createEventDispatcher","click_handler","challengeString","$serialPort","$$invalidate","isValid","confirmChallenge","onConfirm","component","edit","tippy","instance","ConfirmChallenge","hr","confirmChallenge_function","if_block","create_if_block","i","command","set_store_value","serialPort","create_if_block_2","create_if_block_1","section","append_hydration","fieldset0","legend0","label0","input0","p0","p1","p2","label1","span0","input1","fieldset1","legend1","label2","input2","p3","p4","ul0","li0","li1","li2","label3","span1","input3","fieldset2","legend2","p5","ul1","li3","li4","li5","li6","li7","fieldset3","legend3","label4","input4","label5","span2","input5","label6","span3","input6","label7","span4","input7","label8","span5","input8","fieldset4","legend4","label9","input9","label10","input10","input11","label11","input12","label12","span6","input13","label13","span7","input14","fieldset5","legend5","label14","input15","label15","span8","input16","label16","span9","input17","label17","span10","input18","label18","input19","fieldset6","legend6","label19","input20","label20","input21","action_destroyer","ResetPopup","label","dispose","fieldset","legend","select","option0","option1","option2","option3","option4","option5","option6","option7","option8","option9","option10","meta"],"mappings":"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"}