{"version":3,"mappings":"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AAa,+BACb,WAAY,kBACd,EACA,SAAU,CACR,MAAO,iBACP,YACE,0FACF,QAAS,gBACT,MAAO,cACT,EACA,WAAY,eACZ,WAAY,yBACd,EACA,OAAQ,CACN,MAAO,QACT,EACA,SAAU,CACR,MAAO,eACT,CACF,EACA,OAAQ,CACN,OAAQ,CACN,IAAK,WACP,CACF,CACF,2GC3IMC,GAAK,CACT,MAAO,8BACP,YACE,sEACF,YAAa,CACX,KAAM,gEACN,KAAM,OACN,KAAM,MACR,EACA,OAAQ,CACN,MAAO,oBACT,EACA,OAAQ,CACN,MAAO,eACP,WAAY,qBACZ,WACE,yFACF,SAAU,sBACV,QAAS,SACX,EACA,KAAM,CACJ,WAAY,yBACZ,YAAa,2BACb,OAAQ,QACV,EACA,MAAO,CACL,MAAO,OACT,EACA,aAAc,CACZ,YAAa,qBACb,eAAgB,iBAChB,YAAa,yBACb,OAAQ,SACR,OAAQ,CACN,IAAK,KACP,EACA,iBAAkB,0DAClB,cAAe,kDACf,iBAAkB,2CACpB,EACA,MAAO,CACL,MAAO,QACP,WAAY,uBACZ,eAAgB,kBAClB,EACA,MAAO,CACL,MAAO,OACT,EACA,QAAS,CACP,MAAO,UACP,SAAU,WACV,MAAO,CACL,MAAO,QACP,aAAc,eACd,UAAW,OACX,WAAY,OACd,CACF,EACA,cAAe,CACb,MAAO,SACP,aAAc,eACd,QAAS,UACT,WAAY,aACZ,SAAU,WACV,eAAgB,0BAChB,UAAW,sBACX,kBACE,uLACF,SAAU,CACR,MAAO,YACP,OAAQ,SACR,WAAY,aACZ,cACE,yEACJ,CACF,EACA,eAAgB,CACd,MAAO,UACP,mBACE,mFACF,kBAAmB,qBACnB,mBAAoB,IACpB,oBACE,uGACF,mBAAoB,mDACpB,oBAAqB,IACrB,aACE,iFACJ,EACA,QAAS,CACP,MAAO,iBACP,YAAa,cACb,OAAQ,CACN,MAAO,0BACP,MAAO,qDACT,EACA,SAAU,CACR,MAAO,0BACT,EACA,OAAQ,CACN,MAAO,aACP,WAAY,0BACZ,eAAgB,0BAChB,eAAgB,mCAClB,CACF,EACA,UAAW,CACT,OAAQ,CACN,MA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","names":["load","url","data","fetch","importFile","charaFileFromUriComponent","signum","num","lerp","start","stop","amount","clampInt","min","max","input","clampDouble","sanitizeDegreesDouble","degrees","rotationDirection","from","to","differenceDegrees","a","b","matrixMultiply","row","matrix","c","SRGB_TO_XYZ","XYZ_TO_SRGB","WHITE_POINT_D65","argbFromRgb","red","green","blue","argbFromLinrgb","linrgb","r","delinearized","g","redFromArgb","argb","greenFromArgb","blueFromArgb","argbFromXyz","x","y","z","linearR","linearG","linearB","xyzFromArgb","linearized","mathUtils.matrixMultiply","argbFromLstar","lstar","yFromLstar","component","lstarFromArgb","labF","labInvf","lstarFromY","rgbComponent","normalized","mathUtils.clampInt","whitePointD65","kappa","ft","ft3","ViewingConditions","whitePoint","utils.whitePointD65","adaptingLuminance","utils.yFromLstar","backgroundLstar","surround","discountingIlluminant","xyz","rW","gW","bW","f","math.lerp","d","nc","rgbD","k","k4","k4F","fl","n","nbb","ncb","rgbAFactors","rgbA","aw","fLRoot","Cam16","hue","chroma","j","q","m","jstar","astar","bstar","other","dJ","dA","dB","dEPrime","viewingConditions","redL","utils.linearized","greenL","blueL","rC","gC","bC","rD","gD","bD","rAF","gAF","bAF","rA","math.signum","gA","bA","u","p2","atanDegrees","hueRadians","ac","huePrime","eHue","t","alpha","s","mstar","h","hRad","p1","hSin","hCos","gamma","rCBase","gCBase","bCBase","rF","gF","bF","utils.argbFromXyz","J","Q","C","M","HctSolver","angle","af","mathUtils.signum","scaledDiscount","deltaAB","deltaAC","source","mid","target","coordinate","axis","kR","kG","kB","coordA","coordB","targetHue","left","right","leftHue","rightHue","initialized","uncut","midHue","segment","lPlane","rPlane","i","mPlane","midPlaneCoordinate","adapted","adaptedAbs","base","tInnerCoeff","iterationRound","jNormalized","rCScaled","gCScaled","bCScaled","fnj","colorUtils.argbFromLinrgb","hueDegrees","colorUtils.argbFromLstar","mathUtils.sanitizeDegreesDouble","colorUtils.yFromLstar","exactAnswer","Hct","tone","newHue","newChroma","newTone","cam","utils.lstarFromArgb","vc","viewedInVc","recastInVc","utils.lstarFromY","Blend","designColor","sourceColor","fromHct","toHct","mathUtils.differenceDegrees","rotationDegrees","outputHue","mathUtils.rotationDirection","ucs","ucsCam","fromCam","colorUtils.lstarFromArgb","toCam","fromJ","fromA","fromB","toJ","toA","toB","Contrast","toneA","toneB","math.clampDouble","y1","y2","lighter","darker","ratio","darkY","lightY","realContrast","delta","returnValue","lighterSafe","darkerSafe","DislikeAnalyzer","hct","huePasses","chromaPasses","tonePasses","DynamicColor","args","name","palette","isBackground","background","secondBackground","contrastCurve","toneDeltaPair","scheme","cachedAnswer","answer","decreasingContrast","roleA","roleB","polarity","stayTogether","bgTone","aIsNearer","nearer","farther","amNearer","expansionDir","nContrast","fContrast","nInitialTone","nTone","fInitialTone","fTone","desiredRatio","bg1","bg2","bgTone1","bgTone2","upper","lower","lightOption","darkOption","availables","lighterTone","darkerTone","lighterRatio","darkerRatio","negligibleDifference","TonalPalette","keyColor","KeyColor","requestedChroma","lowerTone","upperTone","midTone","isAscending","ContrastCurve","low","normal","medium","high","contrastLevel","ToneDeltaPair","Variant","isFidelity","isMonochrome","findDesiredChromaByTone","byDecreasingTone","closestToChroma","chromaPeak","potentialSolution","potentialDelta","currentDelta","MaterialDynamicColors","initialTone","proposedHct","CorePalette","colors","content","p","isContent","Scheme","core","props","hexFromArgb","colorUtils.redFromArgb","colorUtils.greenFromArgb","colorUtils.blueFromArgb","outParts","part","argbFromHex","hex","isThree","isSix","isEight","parseIntHex","value","themeFromSourceColor","customColors","customColor","color","tones","applyTheme","theme","options","setSchemeProperties","key","paletteKey","token","suffix","csvLayoutToJson","csv","device","layout","layer","layerId","action","isCsvLayout","SPECIAL_KEYS","csvChordsToJson","line","output","it","KEYMAP_IDS","isCsvChords","downloadFile","contents","downloadUrl","element","get","serialPort","downloadBackup","createChordBackup","createLayoutBackup","createSettingsBackup","chords","settings","restoreBackup","event","text","restoreFromFile","file","recent","backupDevice","currentDevice","changes","getChangesFromChordFile","getChangesFromLayoutFile","getChangesFromSettingsFile","existingChords","phrase","actions","ChangeType","id","setting","keys","ctx","t8_value","t12_value","t16_value","insert_hydration","section","anchor","append_hydration","h2","label0","input0","fieldset","legend","button0","span0","button1","span1","button2","span2","div","button3","span3","label1","input1","span4","set_data","t0","t0_value","t2","t2_value","t4","t4_value","dirty","t8","t12","t16","t19","t19_value","t22","t22_value","t7_value","br","current","t7","show_if","create_if_block_3","create_if_block_2","create_if_block_1","toggle_class","attr","button","button_title_value","button_disabled_value","div1","div0","p0","ul","html_tag","raw_value","t_value","span","t1","t1_value","dialog","h3","div_transition","create_bidirectional_transition","fade","dialog_transition","slide","create_if_block_5","create_if_block","label","if_block1","reboot","$serialPort","set_store_value","$$invalidate","powerDialog","initSerial","bootloader","rebootInfo","connect","error","terminal","click_handler_1","click_handler_2","click_handler_3","nav","paths","$LL","onMount","modal","$$value","h1","title","$$props","message","abortTitle","confirmTitle","dispatch","createEventDispatcher","click_handler","askForConfirmation","ConfirmDialog","resolvePromise","resultPromise","resolve","result","button_transition","fly","undo","redoQueue","$changes","redo","change","save","port","syncStatus","$syncStatus","deleted","$overlay","virtualWriteTime","startStamp","animate","syncProgress","deviceLayout","$deviceLayout","$layout","deviceChords","$deviceChords","$chords","deviceSettings","$deviceSettings","$settings","e","action_destroyer","action_action","triggerShare","action_action_1","is_function","button0_transition","button1_transition","info","define_import_meta_env_default","BackupPopup","ConnectionPopup","$userPreferences","connectButton","a0","a1","t3","t3_value","t6","t6_value","t9","t9_value","t11","t11_value","initFormatters","_locale","de","en","localeTranslations","loadLocale","locale","loadedLocales","loadFormatters","loadedFormatters","localeTranslationLoaders","__vitePreload","index$1","index","updateDictionary","dictionary","importLocaleAsync","loadLocaleAsync","sync","progress","option","textContent_1","textContent_2","textContent_3","textContent_4","locales","version","add_render_callback","select","footer","ul0","li0","li1","li2","ul1","li3","li4","li5","set_input_value","li6","li7","detectLocale","switchTheme","mode","$theme","tick","languageSelect","select_value","setLocale","main","expoOut","expoIn","inDirection","outDirection","outroEnd","animationDone","isNavigating","routeOrder","beforeNavigate","navigation","fromIndex","toIndex","afterNavigate","document_1","title_value","if_block","browser","meta0","meta0_content_value","meta1","meta1_content_value","stopLayoutDetection","runLayoutDetection","tippy","dark","initPwa","webManifestLink","canAutoConnect","goto","onDestroy","handleHotkey","$osLayout","str","node","hotkeys"],"ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"sources":["../../../../../../src/routes/(app)/+layout.ts","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/utils/math_utils.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/utils/color_utils.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/hct/viewing_conditions.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/hct/cam16.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/hct/hct_solver.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/hct/hct.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/blend/blend.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/contrast/contrast.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/dislike/dislike_analyzer.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/dynamiccolor/dynamic_color.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/palettes/tonal_palette.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/dynamiccolor/contrast_curve.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/dynamiccolor/tone_delta_pair.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/dynamiccolor/variant.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/dynamiccolor/material_dynamic_colors.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/palettes/core_palette.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/scheme/scheme.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/utils/string_utils.js","../../../../../../node_modules/.pnpm/@material+material-color-utilities@0.3.0/node_modules/@material/material-color-utilities/utils/theme_utils.js","../../../../../../src/lib/backup/compat/legacy-layout.ts","../../../../../../src/lib/backup/compat/legacy-chords.ts","../../../../../../src/lib/backup/backup.ts","../../../../../../src/routes/(app)/BackupPopup.svelte","../../../../../../src/routes/(app)/ConnectionPopup.svelte","../../../../../../src/routes/(app)/ConfigTabs.svelte","../../../../../../src/lib/dialogs/Dialog.svelte","../../../../../../src/lib/dialogs/ConfirmDialog.svelte","../../../../../../src/lib/dialogs/confirm-dialog.ts","../../../../../../src/routes/(app)/EditActions.svelte","../../../../../../src/routes/(app)/Navigation.svelte","../../../../../../src/routes/(app)/BrowserWarning.svelte","../../../../../../src/i18n/formatters.ts","../../../../../../src/i18n/de/index.ts","../../../../../../src/i18n/en/index.ts","../../../../../../src/i18n/i18n-util.sync.ts","../../../../../../src/i18n/i18n-util.async.ts","../../../../../../src/routes/(app)/SyncOverlay.svelte","../../../../../../src/routes/(app)/Footer.svelte","../../../../../../src/routes/(app)/PageTransition.svelte","../../../../../../src/routes/(app)/+layout.svelte"],"sourcesContent":["import type { LayoutLoad } from \"./$types\";\nimport { browser } from \"$app/environment\";\nimport { charaFileFromUriComponent } from \"$lib/share/share-url\";\n\nexport const load = (async ({ url, data, fetch }) => {\n  const importFile = browser && new URLSearchParams(url.search).get(\"import\");\n  return {\n    ...data,\n    importFile: importFile\n      ? await charaFileFromUriComponent(importFile, fetch)\n      : undefined,\n  };\n}) satisfies LayoutLoad;\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\n/**\n * Utility methods for mathematical operations.\n */\n/**\n * The signum function.\n *\n * @return 1 if num > 0, -1 if num < 0, and 0 if num = 0\n */\nexport function signum(num) {\n    if (num < 0) {\n        return -1;\n    }\n    else if (num === 0) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n/**\n * The linear interpolation function.\n *\n * @return start if amount = 0 and stop if amount = 1\n */\nexport function lerp(start, stop, amount) {\n    return (1.0 - amount) * start + amount * stop;\n}\n/**\n * Clamps an integer between two integers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nexport function clampInt(min, max, input) {\n    if (input < min) {\n        return min;\n    }\n    else if (input > max) {\n        return max;\n    }\n    return input;\n}\n/**\n * Clamps an integer between two floating-point numbers.\n *\n * @return input when min <= input <= max, and either min or max\n * otherwise.\n */\nexport function clampDouble(min, max, input) {\n    if (input < min) {\n        return min;\n    }\n    else if (input > max) {\n        return max;\n    }\n    return input;\n}\n/**\n * Sanitizes a degree measure as an integer.\n *\n * @return a degree measure between 0 (inclusive) and 360\n * (exclusive).\n */\nexport function sanitizeDegreesInt(degrees) {\n    degrees = degrees % 360;\n    if (degrees < 0) {\n        degrees = degrees + 360;\n    }\n    return degrees;\n}\n/**\n * Sanitizes a degree measure as a floating-point number.\n *\n * @return a degree measure between 0.0 (inclusive) and 360.0\n * (exclusive).\n */\nexport function sanitizeDegreesDouble(degrees) {\n    degrees = degrees % 360.0;\n    if (degrees < 0) {\n        degrees = degrees + 360.0;\n    }\n    return degrees;\n}\n/**\n * Sign of direction change needed to travel from one angle to\n * another.\n *\n * For angles that are 180 degrees apart from each other, both\n * directions have the same travel distance, so either direction is\n * shortest. The value 1.0 is returned in this case.\n *\n * @param from The angle travel starts from, in degrees.\n * @param to The angle travel ends at, in degrees.\n * @return -1 if decreasing from leads to the shortest travel\n * distance, 1 if increasing from leads to the shortest travel\n * distance.\n */\nexport function rotationDirection(from, to) {\n    const increasingDifference = sanitizeDegreesDouble(to - from);\n    return increasingDifference <= 180.0 ? 1.0 : -1.0;\n}\n/**\n * Distance of two points on a circle, represented using degrees.\n */\nexport function differenceDegrees(a, b) {\n    return 180.0 - Math.abs(Math.abs(a - b) - 180.0);\n}\n/**\n * Multiplies a 1x3 row vector with a 3x3 matrix.\n */\nexport function matrixMultiply(row, matrix) {\n    const a = row[0] * matrix[0][0] + row[1] * matrix[0][1] + row[2] * matrix[0][2];\n    const b = row[0] * matrix[1][0] + row[1] * matrix[1][1] + row[2] * matrix[1][2];\n    const c = row[0] * matrix[2][0] + row[1] * matrix[2][1] + row[2] * matrix[2][2];\n    return [a, b, c];\n}\n//# sourceMappingURL=math_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport * as mathUtils from './math_utils.js';\n/**\n * Color science utilities.\n *\n * Utility methods for color science constants and color space\n * conversions that aren't HCT or CAM16.\n */\nconst SRGB_TO_XYZ = [\n    [0.41233895, 0.35762064, 0.18051042],\n    [0.2126, 0.7152, 0.0722],\n    [0.01932141, 0.11916382, 0.95034478],\n];\nconst XYZ_TO_SRGB = [\n    [\n        3.2413774792388685,\n        -1.5376652402851851,\n        -0.49885366846268053,\n    ],\n    [\n        -0.9691452513005321,\n        1.8758853451067872,\n        0.04156585616912061,\n    ],\n    [\n        0.05562093689691305,\n        -0.20395524564742123,\n        1.0571799111220335,\n    ],\n];\nconst WHITE_POINT_D65 = [95.047, 100.0, 108.883];\n/**\n * Converts a color from RGB components to ARGB format.\n */\nexport function argbFromRgb(red, green, blue) {\n    return (255 << 24 | (red & 255) << 16 | (green & 255) << 8 | blue & 255) >>>\n        0;\n}\n/**\n * Converts a color from linear RGB components to ARGB format.\n */\nexport function argbFromLinrgb(linrgb) {\n    const r = delinearized(linrgb[0]);\n    const g = delinearized(linrgb[1]);\n    const b = delinearized(linrgb[2]);\n    return argbFromRgb(r, g, b);\n}\n/**\n * Returns the alpha component of a color in ARGB format.\n */\nexport function alphaFromArgb(argb) {\n    return argb >> 24 & 255;\n}\n/**\n * Returns the red component of a color in ARGB format.\n */\nexport function redFromArgb(argb) {\n    return argb >> 16 & 255;\n}\n/**\n * Returns the green component of a color in ARGB format.\n */\nexport function greenFromArgb(argb) {\n    return argb >> 8 & 255;\n}\n/**\n * Returns the blue component of a color in ARGB format.\n */\nexport function blueFromArgb(argb) {\n    return argb & 255;\n}\n/**\n * Returns whether a color in ARGB format is opaque.\n */\nexport function isOpaque(argb) {\n    return alphaFromArgb(argb) >= 255;\n}\n/**\n * Converts a color from ARGB to XYZ.\n */\nexport function argbFromXyz(x, y, z) {\n    const matrix = XYZ_TO_SRGB;\n    const linearR = matrix[0][0] * x + matrix[0][1] * y + matrix[0][2] * z;\n    const linearG = matrix[1][0] * x + matrix[1][1] * y + matrix[1][2] * z;\n    const linearB = matrix[2][0] * x + matrix[2][1] * y + matrix[2][2] * z;\n    const r = delinearized(linearR);\n    const g = delinearized(linearG);\n    const b = delinearized(linearB);\n    return argbFromRgb(r, g, b);\n}\n/**\n * Converts a color from XYZ to ARGB.\n */\nexport function xyzFromArgb(argb) {\n    const r = linearized(redFromArgb(argb));\n    const g = linearized(greenFromArgb(argb));\n    const b = linearized(blueFromArgb(argb));\n    return mathUtils.matrixMultiply([r, g, b], SRGB_TO_XYZ);\n}\n/**\n * Converts a color represented in Lab color space into an ARGB\n * integer.\n */\nexport function argbFromLab(l, a, b) {\n    const whitePoint = WHITE_POINT_D65;\n    const fy = (l + 16.0) / 116.0;\n    const fx = a / 500.0 + fy;\n    const fz = fy - b / 200.0;\n    const xNormalized = labInvf(fx);\n    const yNormalized = labInvf(fy);\n    const zNormalized = labInvf(fz);\n    const x = xNormalized * whitePoint[0];\n    const y = yNormalized * whitePoint[1];\n    const z = zNormalized * whitePoint[2];\n    return argbFromXyz(x, y, z);\n}\n/**\n * Converts a color from ARGB representation to L*a*b*\n * representation.\n *\n * @param argb the ARGB representation of a color\n * @return a Lab object representing the color\n */\nexport function labFromArgb(argb) {\n    const linearR = linearized(redFromArgb(argb));\n    const linearG = linearized(greenFromArgb(argb));\n    const linearB = linearized(blueFromArgb(argb));\n    const matrix = SRGB_TO_XYZ;\n    const x = matrix[0][0] * linearR + matrix[0][1] * linearG + matrix[0][2] * linearB;\n    const y = matrix[1][0] * linearR + matrix[1][1] * linearG + matrix[1][2] * linearB;\n    const z = matrix[2][0] * linearR + matrix[2][1] * linearG + matrix[2][2] * linearB;\n    const whitePoint = WHITE_POINT_D65;\n    const xNormalized = x / whitePoint[0];\n    const yNormalized = y / whitePoint[1];\n    const zNormalized = z / whitePoint[2];\n    const fx = labF(xNormalized);\n    const fy = labF(yNormalized);\n    const fz = labF(zNormalized);\n    const l = 116.0 * fy - 16;\n    const a = 500.0 * (fx - fy);\n    const b = 200.0 * (fy - fz);\n    return [l, a, b];\n}\n/**\n * Converts an L* value to an ARGB representation.\n *\n * @param lstar L* in L*a*b*\n * @return ARGB representation of grayscale color with lightness\n * matching L*\n */\nexport function argbFromLstar(lstar) {\n    const y = yFromLstar(lstar);\n    const component = delinearized(y);\n    return argbFromRgb(component, component, component);\n}\n/**\n * Computes the L* value of a color in ARGB representation.\n *\n * @param argb ARGB representation of a color\n * @return L*, from L*a*b*, coordinate of the color\n */\nexport function lstarFromArgb(argb) {\n    const y = xyzFromArgb(argb)[1];\n    return 116.0 * labF(y / 100.0) - 16.0;\n}\n/**\n * Converts an L* value to a Y value.\n *\n * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.\n *\n * L* measures perceptual luminance, a linear scale. Y in XYZ\n * measures relative luminance, a logarithmic scale.\n *\n * @param lstar L* in L*a*b*\n * @return Y in XYZ\n */\nexport function yFromLstar(lstar) {\n    return 100.0 * labInvf((lstar + 16.0) / 116.0);\n}\n/**\n * Converts a Y value to an L* value.\n *\n * L* in L*a*b* and Y in XYZ measure the same quantity, luminance.\n *\n * L* measures perceptual luminance, a linear scale. Y in XYZ\n * measures relative luminance, a logarithmic scale.\n *\n * @param y Y in XYZ\n * @return L* in L*a*b*\n */\nexport function lstarFromY(y) {\n    return labF(y / 100.0) * 116.0 - 16.0;\n}\n/**\n * Linearizes an RGB component.\n *\n * @param rgbComponent 0 <= rgb_component <= 255, represents R/G/B\n * channel\n * @return 0.0 <= output <= 100.0, color channel converted to\n * linear RGB space\n */\nexport function linearized(rgbComponent) {\n    const normalized = rgbComponent / 255.0;\n    if (normalized <= 0.040449936) {\n        return normalized / 12.92 * 100.0;\n    }\n    else {\n        return Math.pow((normalized + 0.055) / 1.055, 2.4) * 100.0;\n    }\n}\n/**\n * Delinearizes an RGB component.\n *\n * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n * linear R/G/B channel\n * @return 0 <= output <= 255, color channel converted to regular\n * RGB space\n */\nexport function delinearized(rgbComponent) {\n    const normalized = rgbComponent / 100.0;\n    let delinearized = 0.0;\n    if (normalized <= 0.0031308) {\n        delinearized = normalized * 12.92;\n    }\n    else {\n        delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n    }\n    return mathUtils.clampInt(0, 255, Math.round(delinearized * 255.0));\n}\n/**\n * Returns the standard white point; white on a sunny day.\n *\n * @return The white point\n */\nexport function whitePointD65() {\n    return WHITE_POINT_D65;\n}\n/**\n * Return RGBA from a given int32 color\n *\n * @param argb ARGB representation of a int32 color.\n * @return RGBA representation of a int32 color.\n */\nexport function rgbaFromArgb(argb) {\n    const r = redFromArgb(argb);\n    const g = greenFromArgb(argb);\n    const b = blueFromArgb(argb);\n    const a = alphaFromArgb(argb);\n    return { r, g, b, a };\n}\n/**\n * Return int32 color from a given RGBA component\n *\n * @param rgba RGBA representation of a int32 color.\n * @returns ARGB representation of a int32 color.\n */\nexport function argbFromRgba({ r, g, b, a }) {\n    const rValue = clampComponent(r);\n    const gValue = clampComponent(g);\n    const bValue = clampComponent(b);\n    const aValue = clampComponent(a);\n    return (aValue << 24) | (rValue << 16) | (gValue << 8) | bValue;\n}\nfunction clampComponent(value) {\n    if (value < 0)\n        return 0;\n    if (value > 255)\n        return 255;\n    return value;\n}\nfunction labF(t) {\n    const e = 216.0 / 24389.0;\n    const kappa = 24389.0 / 27.0;\n    if (t > e) {\n        return Math.pow(t, 1.0 / 3.0);\n    }\n    else {\n        return (kappa * t + 16) / 116;\n    }\n}\nfunction labInvf(ft) {\n    const e = 216.0 / 24389.0;\n    const kappa = 24389.0 / 27.0;\n    const ft3 = ft * ft * ft;\n    if (ft3 > e) {\n        return ft3;\n    }\n    else {\n        return (116 * ft - 16) / kappa;\n    }\n}\n//# sourceMappingURL=color_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as utils from '../utils/color_utils.js';\nimport * as math from '../utils/math_utils.js';\n/**\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n *\n * This class caches intermediate values of the CAM16 conversion process that\n * depend only on viewing conditions, enabling speed ups.\n */\nexport class ViewingConditions {\n    /**\n     * Create ViewingConditions from a simple, physically relevant, set of\n     * parameters.\n     *\n     * @param whitePoint White point, measured in the XYZ color space.\n     *     default = D65, or sunny day afternoon\n     * @param adaptingLuminance The luminance of the adapting field. Informally,\n     *     how bright it is in the room where the color is viewed. Can be\n     *     calculated from lux by multiplying lux by 0.0586. default = 11.72,\n     *     or 200 lux.\n     * @param backgroundLstar The lightness of the area surrounding the color.\n     *     measured by L* in L*a*b*. default = 50.0\n     * @param surround A general description of the lighting surrounding the\n     *     color. 0 is pitch dark, like watching a movie in a theater. 1.0 is a\n     *     dimly light room, like watching TV at home at night. 2.0 means there\n     *     is no difference between the lighting on the color and around it.\n     *     default = 2.0\n     * @param discountingIlluminant Whether the eye accounts for the tint of the\n     *     ambient lighting, such as knowing an apple is still red in green light.\n     *     default = false, the eye does not perform this process on\n     *       self-luminous objects like displays.\n     */\n    static make(whitePoint = utils.whitePointD65(), adaptingLuminance = (200.0 / Math.PI) * utils.yFromLstar(50.0) / 100.0, backgroundLstar = 50.0, surround = 2.0, discountingIlluminant = false) {\n        const xyz = whitePoint;\n        const rW = xyz[0] * 0.401288 + xyz[1] * 0.650173 + xyz[2] * -0.051461;\n        const gW = xyz[0] * -0.250268 + xyz[1] * 1.204414 + xyz[2] * 0.045854;\n        const bW = xyz[0] * -0.002079 + xyz[1] * 0.048952 + xyz[2] * 0.953127;\n        const f = 0.8 + surround / 10.0;\n        const c = f >= 0.9 ? math.lerp(0.59, 0.69, (f - 0.9) * 10.0) :\n            math.lerp(0.525, 0.59, (f - 0.8) * 10.0);\n        let d = discountingIlluminant ?\n            1.0 :\n            f * (1.0 - (1.0 / 3.6) * Math.exp((-adaptingLuminance - 42.0) / 92.0));\n        d = d > 1.0 ? 1.0 : d < 0.0 ? 0.0 : d;\n        const nc = f;\n        const rgbD = [\n            d * (100.0 / rW) + 1.0 - d,\n            d * (100.0 / gW) + 1.0 - d,\n            d * (100.0 / bW) + 1.0 - d,\n        ];\n        const k = 1.0 / (5.0 * adaptingLuminance + 1.0);\n        const k4 = k * k * k * k;\n        const k4F = 1.0 - k4;\n        const fl = k4 * adaptingLuminance +\n            0.1 * k4F * k4F * Math.cbrt(5.0 * adaptingLuminance);\n        const n = utils.yFromLstar(backgroundLstar) / whitePoint[1];\n        const z = 1.48 + Math.sqrt(n);\n        const nbb = 0.725 / Math.pow(n, 0.2);\n        const ncb = nbb;\n        const rgbAFactors = [\n            Math.pow((fl * rgbD[0] * rW) / 100.0, 0.42),\n            Math.pow((fl * rgbD[1] * gW) / 100.0, 0.42),\n            Math.pow((fl * rgbD[2] * bW) / 100.0, 0.42),\n        ];\n        const rgbA = [\n            (400.0 * rgbAFactors[0]) / (rgbAFactors[0] + 27.13),\n            (400.0 * rgbAFactors[1]) / (rgbAFactors[1] + 27.13),\n            (400.0 * rgbAFactors[2]) / (rgbAFactors[2] + 27.13),\n        ];\n        const aw = (2.0 * rgbA[0] + rgbA[1] + 0.05 * rgbA[2]) * nbb;\n        return new ViewingConditions(n, aw, nbb, ncb, c, nc, rgbD, fl, Math.pow(fl, 0.25), z);\n    }\n    /**\n     * Parameters are intermediate values of the CAM16 conversion process. Their\n     * names are shorthand for technical color science terminology, this class\n     * would not benefit from documenting them individually. A brief overview\n     * is available in the CAM16 specification, and a complete overview requires\n     * a color science textbook, such as Fairchild's Color Appearance Models.\n     */\n    constructor(n, aw, nbb, ncb, c, nc, rgbD, fl, fLRoot, z) {\n        this.n = n;\n        this.aw = aw;\n        this.nbb = nbb;\n        this.ncb = ncb;\n        this.c = c;\n        this.nc = nc;\n        this.rgbD = rgbD;\n        this.fl = fl;\n        this.fLRoot = fLRoot;\n        this.z = z;\n    }\n}\n/** sRGB-like viewing conditions.  */\nViewingConditions.DEFAULT = ViewingConditions.make();\n//# sourceMappingURL=viewing_conditions.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as utils from '../utils/color_utils.js';\nimport * as math from '../utils/math_utils.js';\nimport { ViewingConditions } from './viewing_conditions.js';\n/**\n * CAM16, a color appearance model. Colors are not just defined by their hex\n * code, but rather, a hex code and viewing conditions.\n *\n * CAM16 instances also have coordinates in the CAM16-UCS space, called J*, a*,\n * b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n * specification, and should be used when measuring distances between colors.\n *\n * In traditional color spaces, a color can be identified solely by the\n * observer's measurement of the color. Color appearance models such as CAM16\n * also use information about the environment where the color was\n * observed, known as the viewing conditions.\n *\n * For example, white under the traditional assumption of a midday sun white\n * point is accurately measured as a slightly chromatic blue by CAM16. (roughly,\n * hue 203, chroma 3, lightness 100)\n */\nexport class Cam16 {\n    /**\n     * All of the CAM16 dimensions can be calculated from 3 of the dimensions, in\n     * the following combinations:\n     *      -  {j or q} and {c, m, or s} and hue\n     *      - jstar, astar, bstar\n     * Prefer using a static method that constructs from 3 of those dimensions.\n     * This constructor is intended for those methods to use to return all\n     * possible dimensions.\n     *\n     * @param hue\n     * @param chroma informally, colorfulness / color intensity. like saturation\n     *     in HSL, except perceptually accurate.\n     * @param j lightness\n     * @param q brightness; ratio of lightness to white point's lightness\n     * @param m colorfulness\n     * @param s saturation; ratio of chroma to white point's chroma\n     * @param jstar CAM16-UCS J coordinate\n     * @param astar CAM16-UCS a coordinate\n     * @param bstar CAM16-UCS b coordinate\n     */\n    constructor(hue, chroma, j, q, m, s, jstar, astar, bstar) {\n        this.hue = hue;\n        this.chroma = chroma;\n        this.j = j;\n        this.q = q;\n        this.m = m;\n        this.s = s;\n        this.jstar = jstar;\n        this.astar = astar;\n        this.bstar = bstar;\n    }\n    /**\n     * CAM16 instances also have coordinates in the CAM16-UCS space, called J*,\n     * a*, b*, or jstar, astar, bstar in code. CAM16-UCS is included in the CAM16\n     * specification, and is used to measure distances between colors.\n     */\n    distance(other) {\n        const dJ = this.jstar - other.jstar;\n        const dA = this.astar - other.astar;\n        const dB = this.bstar - other.bstar;\n        const dEPrime = Math.sqrt(dJ * dJ + dA * dA + dB * dB);\n        const dE = 1.41 * Math.pow(dEPrime, 0.63);\n        return dE;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return CAM16 color, assuming the color was viewed in default viewing\n     *     conditions.\n     */\n    static fromInt(argb) {\n        return Cam16.fromIntInViewingConditions(argb, ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     * @return CAM16 color.\n     */\n    static fromIntInViewingConditions(argb, viewingConditions) {\n        const red = (argb & 0x00ff0000) >> 16;\n        const green = (argb & 0x0000ff00) >> 8;\n        const blue = (argb & 0x000000ff);\n        const redL = utils.linearized(red);\n        const greenL = utils.linearized(green);\n        const blueL = utils.linearized(blue);\n        const x = 0.41233895 * redL + 0.35762064 * greenL + 0.18051042 * blueL;\n        const y = 0.2126 * redL + 0.7152 * greenL + 0.0722 * blueL;\n        const z = 0.01932141 * redL + 0.11916382 * greenL + 0.95034478 * blueL;\n        const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;\n        const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;\n        const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;\n        const rD = viewingConditions.rgbD[0] * rC;\n        const gD = viewingConditions.rgbD[1] * gC;\n        const bD = viewingConditions.rgbD[2] * bC;\n        const rAF = Math.pow((viewingConditions.fl * Math.abs(rD)) / 100.0, 0.42);\n        const gAF = Math.pow((viewingConditions.fl * Math.abs(gD)) / 100.0, 0.42);\n        const bAF = Math.pow((viewingConditions.fl * Math.abs(bD)) / 100.0, 0.42);\n        const rA = (math.signum(rD) * 400.0 * rAF) / (rAF + 27.13);\n        const gA = (math.signum(gD) * 400.0 * gAF) / (gAF + 27.13);\n        const bA = (math.signum(bD) * 400.0 * bAF) / (bAF + 27.13);\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;\n        const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;\n        const atan2 = Math.atan2(b, a);\n        const atanDegrees = (atan2 * 180.0) / Math.PI;\n        const hue = atanDegrees < 0 ? atanDegrees + 360.0 :\n            atanDegrees >= 360 ? atanDegrees - 360.0 :\n                atanDegrees;\n        const hueRadians = (hue * Math.PI) / 180.0;\n        const ac = p2 * viewingConditions.nbb;\n        const j = 100.0 *\n            Math.pow(ac / viewingConditions.aw, viewingConditions.c * viewingConditions.z);\n        const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n            (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n        const huePrime = hue < 20.14 ? hue + 360 : hue;\n        const eHue = 0.25 * (Math.cos((huePrime * Math.PI) / 180.0 + 2.0) + 3.8);\n        const p1 = (50000.0 / 13.0) * eHue * viewingConditions.nc * viewingConditions.ncb;\n        const t = (p1 * Math.sqrt(a * a + b * b)) / (u + 0.305);\n        const alpha = Math.pow(t, 0.9) *\n            Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        const c = alpha * Math.sqrt(j / 100.0);\n        const m = c * viewingConditions.fLRoot;\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n        const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(hue, c, j, q, m, s, jstar, astar, bstar);\n    }\n    /**\n     * @param j CAM16 lightness\n     * @param c CAM16 chroma\n     * @param h CAM16 hue\n     */\n    static fromJch(j, c, h) {\n        return Cam16.fromJchInViewingConditions(j, c, h, ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param j CAM16 lightness\n     * @param c CAM16 chroma\n     * @param h CAM16 hue\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     */\n    static fromJchInViewingConditions(j, c, h, viewingConditions) {\n        const q = (4.0 / viewingConditions.c) * Math.sqrt(j / 100.0) *\n            (viewingConditions.aw + 4.0) * viewingConditions.fLRoot;\n        const m = c * viewingConditions.fLRoot;\n        const alpha = c / Math.sqrt(j / 100.0);\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        const hueRadians = (h * Math.PI) / 180.0;\n        const jstar = ((1.0 + 100.0 * 0.007) * j) / (1.0 + 0.007 * j);\n        const mstar = (1.0 / 0.0228) * Math.log(1.0 + 0.0228 * m);\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(h, c, j, q, m, s, jstar, astar, bstar);\n    }\n    /**\n     * @param jstar CAM16-UCS lightness.\n     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the Y axis.\n     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the X axis.\n     */\n    static fromUcs(jstar, astar, bstar) {\n        return Cam16.fromUcsInViewingConditions(jstar, astar, bstar, ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param jstar CAM16-UCS lightness.\n     * @param astar CAM16-UCS a dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the Y axis.\n     * @param bstar CAM16-UCS b dimension. Like a* in L*a*b*, it is a Cartesian\n     *     coordinate on the X axis.\n     * @param viewingConditions Information about the environment where the color\n     *     was observed.\n     */\n    static fromUcsInViewingConditions(jstar, astar, bstar, viewingConditions) {\n        const a = astar;\n        const b = bstar;\n        const m = Math.sqrt(a * a + b * b);\n        const M = (Math.exp(m * 0.0228) - 1.0) / 0.0228;\n        const c = M / viewingConditions.fLRoot;\n        let h = Math.atan2(b, a) * (180.0 / Math.PI);\n        if (h < 0.0) {\n            h += 360.0;\n        }\n        const j = jstar / (1 - (jstar - 100) * 0.007);\n        return Cam16.fromJchInViewingConditions(j, c, h, viewingConditions);\n    }\n    /**\n     *  @return ARGB representation of color, assuming the color was viewed in\n     *     default viewing conditions, which are near-identical to the default\n     *     viewing conditions for sRGB.\n     */\n    toInt() {\n        return this.viewed(ViewingConditions.DEFAULT);\n    }\n    /**\n     * @param viewingConditions Information about the environment where the color\n     *     will be viewed.\n     * @return ARGB representation of color\n     */\n    viewed(viewingConditions) {\n        const alpha = this.chroma === 0.0 || this.j === 0.0 ?\n            0.0 :\n            this.chroma / Math.sqrt(this.j / 100.0);\n        const t = Math.pow(alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73), 1.0 / 0.9);\n        const hRad = (this.hue * Math.PI) / 180.0;\n        const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);\n        const ac = viewingConditions.aw *\n            Math.pow(this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const p2 = ac / viewingConditions.nbb;\n        const hSin = Math.sin(hRad);\n        const hCos = Math.cos(hRad);\n        const gamma = (23.0 * (p2 + 0.305) * t) /\n            (23.0 * p1 + 11.0 * t * hCos + 108.0 * t * hSin);\n        const a = gamma * hCos;\n        const b = gamma * hSin;\n        const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n        const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n        const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n        const rCBase = Math.max(0, (27.13 * Math.abs(rA)) / (400.0 - Math.abs(rA)));\n        const rC = math.signum(rA) * (100.0 / viewingConditions.fl) *\n            Math.pow(rCBase, 1.0 / 0.42);\n        const gCBase = Math.max(0, (27.13 * Math.abs(gA)) / (400.0 - Math.abs(gA)));\n        const gC = math.signum(gA) * (100.0 / viewingConditions.fl) *\n            Math.pow(gCBase, 1.0 / 0.42);\n        const bCBase = Math.max(0, (27.13 * Math.abs(bA)) / (400.0 - Math.abs(bA)));\n        const bC = math.signum(bA) * (100.0 / viewingConditions.fl) *\n            Math.pow(bCBase, 1.0 / 0.42);\n        const rF = rC / viewingConditions.rgbD[0];\n        const gF = gC / viewingConditions.rgbD[1];\n        const bF = bC / viewingConditions.rgbD[2];\n        const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;\n        const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;\n        const z = -0.01584150 * rF - 0.03412294 * gF + 1.04996444 * bF;\n        const argb = utils.argbFromXyz(x, y, z);\n        return argb;\n    }\n    /// Given color expressed in XYZ and viewed in [viewingConditions], convert to\n    /// CAM16.\n    static fromXyzInViewingConditions(x, y, z, viewingConditions) {\n        // Transform XYZ to 'cone'/'rgb' responses\n        const rC = 0.401288 * x + 0.650173 * y - 0.051461 * z;\n        const gC = -0.250268 * x + 1.204414 * y + 0.045854 * z;\n        const bC = -0.002079 * x + 0.048952 * y + 0.953127 * z;\n        // Discount illuminant\n        const rD = viewingConditions.rgbD[0] * rC;\n        const gD = viewingConditions.rgbD[1] * gC;\n        const bD = viewingConditions.rgbD[2] * bC;\n        // chromatic adaptation\n        const rAF = Math.pow(viewingConditions.fl * Math.abs(rD) / 100.0, 0.42);\n        const gAF = Math.pow(viewingConditions.fl * Math.abs(gD) / 100.0, 0.42);\n        const bAF = Math.pow(viewingConditions.fl * Math.abs(bD) / 100.0, 0.42);\n        const rA = math.signum(rD) * 400.0 * rAF / (rAF + 27.13);\n        const gA = math.signum(gD) * 400.0 * gAF / (gAF + 27.13);\n        const bA = math.signum(bD) * 400.0 * bAF / (bAF + 27.13);\n        // redness-greenness\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        // yellowness-blueness\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        // auxiliary components\n        const u = (20.0 * rA + 20.0 * gA + 21.0 * bA) / 20.0;\n        const p2 = (40.0 * rA + 20.0 * gA + bA) / 20.0;\n        // hue\n        const atan2 = Math.atan2(b, a);\n        const atanDegrees = atan2 * 180.0 / Math.PI;\n        const hue = atanDegrees < 0 ? atanDegrees + 360.0 :\n            atanDegrees >= 360 ? atanDegrees - 360 :\n                atanDegrees;\n        const hueRadians = hue * Math.PI / 180.0;\n        // achromatic response to color\n        const ac = p2 * viewingConditions.nbb;\n        // CAM16 lightness and brightness\n        const J = 100.0 *\n            Math.pow(ac / viewingConditions.aw, viewingConditions.c * viewingConditions.z);\n        const Q = (4.0 / viewingConditions.c) * Math.sqrt(J / 100.0) *\n            (viewingConditions.aw + 4.0) * (viewingConditions.fLRoot);\n        const huePrime = (hue < 20.14) ? hue + 360 : hue;\n        const eHue = (1.0 / 4.0) * (Math.cos(huePrime * Math.PI / 180.0 + 2.0) + 3.8);\n        const p1 = 50000.0 / 13.0 * eHue * viewingConditions.nc * viewingConditions.ncb;\n        const t = p1 * Math.sqrt(a * a + b * b) / (u + 0.305);\n        const alpha = Math.pow(t, 0.9) *\n            Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        // CAM16 chroma, colorfulness, chroma\n        const C = alpha * Math.sqrt(J / 100.0);\n        const M = C * viewingConditions.fLRoot;\n        const s = 50.0 *\n            Math.sqrt((alpha * viewingConditions.c) / (viewingConditions.aw + 4.0));\n        // CAM16-UCS components\n        const jstar = (1.0 + 100.0 * 0.007) * J / (1.0 + 0.007 * J);\n        const mstar = Math.log(1.0 + 0.0228 * M) / 0.0228;\n        const astar = mstar * Math.cos(hueRadians);\n        const bstar = mstar * Math.sin(hueRadians);\n        return new Cam16(hue, C, J, Q, M, s, jstar, astar, bstar);\n    }\n    /// XYZ representation of CAM16 seen in [viewingConditions].\n    xyzInViewingConditions(viewingConditions) {\n        const alpha = (this.chroma === 0.0 || this.j === 0.0) ?\n            0.0 :\n            this.chroma / Math.sqrt(this.j / 100.0);\n        const t = Math.pow(alpha / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73), 1.0 / 0.9);\n        const hRad = this.hue * Math.PI / 180.0;\n        const eHue = 0.25 * (Math.cos(hRad + 2.0) + 3.8);\n        const ac = viewingConditions.aw *\n            Math.pow(this.j / 100.0, 1.0 / viewingConditions.c / viewingConditions.z);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const p2 = (ac / viewingConditions.nbb);\n        const hSin = Math.sin(hRad);\n        const hCos = Math.cos(hRad);\n        const gamma = 23.0 * (p2 + 0.305) * t /\n            (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);\n        const a = gamma * hCos;\n        const b = gamma * hSin;\n        const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n        const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n        const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n        const rCBase = Math.max(0, (27.13 * Math.abs(rA)) / (400.0 - Math.abs(rA)));\n        const rC = math.signum(rA) * (100.0 / viewingConditions.fl) *\n            Math.pow(rCBase, 1.0 / 0.42);\n        const gCBase = Math.max(0, (27.13 * Math.abs(gA)) / (400.0 - Math.abs(gA)));\n        const gC = math.signum(gA) * (100.0 / viewingConditions.fl) *\n            Math.pow(gCBase, 1.0 / 0.42);\n        const bCBase = Math.max(0, (27.13 * Math.abs(bA)) / (400.0 - Math.abs(bA)));\n        const bC = math.signum(bA) * (100.0 / viewingConditions.fl) *\n            Math.pow(bCBase, 1.0 / 0.42);\n        const rF = rC / viewingConditions.rgbD[0];\n        const gF = gC / viewingConditions.rgbD[1];\n        const bF = bC / viewingConditions.rgbD[2];\n        const x = 1.86206786 * rF - 1.01125463 * gF + 0.14918677 * bF;\n        const y = 0.38752654 * rF + 0.62144744 * gF - 0.00897398 * bF;\n        const z = -0.01584150 * rF - 0.03412294 * gF + 1.04996444 * bF;\n        return [x, y, z];\n    }\n}\n//# sourceMappingURL=cam16.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport * as colorUtils from '../utils/color_utils.js';\nimport * as mathUtils from '../utils/math_utils.js';\nimport { Cam16 } from './cam16.js';\nimport { ViewingConditions } from './viewing_conditions.js';\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * A class that solves the HCT equation.\n */\nexport class HctSolver {\n    /**\n     * Sanitizes a small enough angle in radians.\n     *\n     * @param angle An angle in radians; must not deviate too much\n     * from 0.\n     * @return A coterminal angle between 0 and 2pi.\n     */\n    static sanitizeRadians(angle) {\n        return (angle + Math.PI * 8) % (Math.PI * 2);\n    }\n    /**\n     * Delinearizes an RGB component, returning a floating-point\n     * number.\n     *\n     * @param rgbComponent 0.0 <= rgb_component <= 100.0, represents\n     * linear R/G/B channel\n     * @return 0.0 <= output <= 255.0, color channel converted to\n     * regular RGB space\n     */\n    static trueDelinearized(rgbComponent) {\n        const normalized = rgbComponent / 100.0;\n        let delinearized = 0.0;\n        if (normalized <= 0.0031308) {\n            delinearized = normalized * 12.92;\n        }\n        else {\n            delinearized = 1.055 * Math.pow(normalized, 1.0 / 2.4) - 0.055;\n        }\n        return delinearized * 255.0;\n    }\n    static chromaticAdaptation(component) {\n        const af = Math.pow(Math.abs(component), 0.42);\n        return mathUtils.signum(component) * 400.0 * af / (af + 27.13);\n    }\n    /**\n     * Returns the hue of a linear RGB color in CAM16.\n     *\n     * @param linrgb The linear RGB coordinates of a color.\n     * @return The hue of the color in CAM16, in radians.\n     */\n    static hueOf(linrgb) {\n        const scaledDiscount = mathUtils.matrixMultiply(linrgb, HctSolver.SCALED_DISCOUNT_FROM_LINRGB);\n        const rA = HctSolver.chromaticAdaptation(scaledDiscount[0]);\n        const gA = HctSolver.chromaticAdaptation(scaledDiscount[1]);\n        const bA = HctSolver.chromaticAdaptation(scaledDiscount[2]);\n        // redness-greenness\n        const a = (11.0 * rA + -12.0 * gA + bA) / 11.0;\n        // yellowness-blueness\n        const b = (rA + gA - 2.0 * bA) / 9.0;\n        return Math.atan2(b, a);\n    }\n    static areInCyclicOrder(a, b, c) {\n        const deltaAB = HctSolver.sanitizeRadians(b - a);\n        const deltaAC = HctSolver.sanitizeRadians(c - a);\n        return deltaAB < deltaAC;\n    }\n    /**\n     * Solves the lerp equation.\n     *\n     * @param source The starting number.\n     * @param mid The number in the middle.\n     * @param target The ending number.\n     * @return A number t such that lerp(source, target, t) = mid.\n     */\n    static intercept(source, mid, target) {\n        return (mid - source) / (target - source);\n    }\n    static lerpPoint(source, t, target) {\n        return [\n            source[0] + (target[0] - source[0]) * t,\n            source[1] + (target[1] - source[1]) * t,\n            source[2] + (target[2] - source[2]) * t,\n        ];\n    }\n    /**\n     * Intersects a segment with a plane.\n     *\n     * @param source The coordinates of point A.\n     * @param coordinate The R-, G-, or B-coordinate of the plane.\n     * @param target The coordinates of point B.\n     * @param axis The axis the plane is perpendicular with. (0: R, 1:\n     * G, 2: B)\n     * @return The intersection point of the segment AB with the plane\n     * R=coordinate, G=coordinate, or B=coordinate\n     */\n    static setCoordinate(source, coordinate, target, axis) {\n        const t = HctSolver.intercept(source[axis], coordinate, target[axis]);\n        return HctSolver.lerpPoint(source, t, target);\n    }\n    static isBounded(x) {\n        return 0.0 <= x && x <= 100.0;\n    }\n    /**\n     * Returns the nth possible vertex of the polygonal intersection.\n     *\n     * @param y The Y value of the plane.\n     * @param n The zero-based index of the point. 0 <= n <= 11.\n     * @return The nth possible vertex of the polygonal intersection\n     * of the y plane and the RGB cube, in linear RGB coordinates, if\n     * it exists. If this possible vertex lies outside of the cube,\n     * [-1.0, -1.0, -1.0] is returned.\n     */\n    static nthVertex(y, n) {\n        const kR = HctSolver.Y_FROM_LINRGB[0];\n        const kG = HctSolver.Y_FROM_LINRGB[1];\n        const kB = HctSolver.Y_FROM_LINRGB[2];\n        const coordA = n % 4 <= 1 ? 0.0 : 100.0;\n        const coordB = n % 2 === 0 ? 0.0 : 100.0;\n        if (n < 4) {\n            const g = coordA;\n            const b = coordB;\n            const r = (y - g * kG - b * kB) / kR;\n            if (HctSolver.isBounded(r)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n        else if (n < 8) {\n            const b = coordA;\n            const r = coordB;\n            const g = (y - r * kR - b * kB) / kG;\n            if (HctSolver.isBounded(g)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n        else {\n            const r = coordA;\n            const g = coordB;\n            const b = (y - r * kR - g * kG) / kB;\n            if (HctSolver.isBounded(b)) {\n                return [r, g, b];\n            }\n            else {\n                return [-1.0, -1.0, -1.0];\n            }\n        }\n    }\n    /**\n     * Finds the segment containing the desired color.\n     *\n     * @param y The Y value of the color.\n     * @param targetHue The hue of the color.\n     * @return A list of two sets of linear RGB coordinates, each\n     * corresponding to an endpoint of the segment containing the\n     * desired color.\n     */\n    static bisectToSegment(y, targetHue) {\n        let left = [-1.0, -1.0, -1.0];\n        let right = left;\n        let leftHue = 0.0;\n        let rightHue = 0.0;\n        let initialized = false;\n        let uncut = true;\n        for (let n = 0; n < 12; n++) {\n            const mid = HctSolver.nthVertex(y, n);\n            if (mid[0] < 0) {\n                continue;\n            }\n            const midHue = HctSolver.hueOf(mid);\n            if (!initialized) {\n                left = mid;\n                right = mid;\n                leftHue = midHue;\n                rightHue = midHue;\n                initialized = true;\n                continue;\n            }\n            if (uncut || HctSolver.areInCyclicOrder(leftHue, midHue, rightHue)) {\n                uncut = false;\n                if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n                    right = mid;\n                    rightHue = midHue;\n                }\n                else {\n                    left = mid;\n                    leftHue = midHue;\n                }\n            }\n        }\n        return [left, right];\n    }\n    static midpoint(a, b) {\n        return [\n            (a[0] + b[0]) / 2,\n            (a[1] + b[1]) / 2,\n            (a[2] + b[2]) / 2,\n        ];\n    }\n    static criticalPlaneBelow(x) {\n        return Math.floor(x - 0.5);\n    }\n    static criticalPlaneAbove(x) {\n        return Math.ceil(x - 0.5);\n    }\n    /**\n     * Finds a color with the given Y and hue on the boundary of the\n     * cube.\n     *\n     * @param y The Y value of the color.\n     * @param targetHue The hue of the color.\n     * @return The desired color, in linear RGB coordinates.\n     */\n    static bisectToLimit(y, targetHue) {\n        const segment = HctSolver.bisectToSegment(y, targetHue);\n        let left = segment[0];\n        let leftHue = HctSolver.hueOf(left);\n        let right = segment[1];\n        for (let axis = 0; axis < 3; axis++) {\n            if (left[axis] !== right[axis]) {\n                let lPlane = -1;\n                let rPlane = 255;\n                if (left[axis] < right[axis]) {\n                    lPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(left[axis]));\n                    rPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(right[axis]));\n                }\n                else {\n                    lPlane = HctSolver.criticalPlaneAbove(HctSolver.trueDelinearized(left[axis]));\n                    rPlane = HctSolver.criticalPlaneBelow(HctSolver.trueDelinearized(right[axis]));\n                }\n                for (let i = 0; i < 8; i++) {\n                    if (Math.abs(rPlane - lPlane) <= 1) {\n                        break;\n                    }\n                    else {\n                        const mPlane = Math.floor((lPlane + rPlane) / 2.0);\n                        const midPlaneCoordinate = HctSolver.CRITICAL_PLANES[mPlane];\n                        const mid = HctSolver.setCoordinate(left, midPlaneCoordinate, right, axis);\n                        const midHue = HctSolver.hueOf(mid);\n                        if (HctSolver.areInCyclicOrder(leftHue, targetHue, midHue)) {\n                            right = mid;\n                            rPlane = mPlane;\n                        }\n                        else {\n                            left = mid;\n                            leftHue = midHue;\n                            lPlane = mPlane;\n                        }\n                    }\n                }\n            }\n        }\n        return HctSolver.midpoint(left, right);\n    }\n    static inverseChromaticAdaptation(adapted) {\n        const adaptedAbs = Math.abs(adapted);\n        const base = Math.max(0, 27.13 * adaptedAbs / (400.0 - adaptedAbs));\n        return mathUtils.signum(adapted) * Math.pow(base, 1.0 / 0.42);\n    }\n    /**\n     * Finds a color with the given hue, chroma, and Y.\n     *\n     * @param hueRadians The desired hue in radians.\n     * @param chroma The desired chroma.\n     * @param y The desired Y.\n     * @return The desired color as a hexadecimal integer, if found; 0\n     * otherwise.\n     */\n    static findResultByJ(hueRadians, chroma, y) {\n        // Initial estimate of j.\n        let j = Math.sqrt(y) * 11.0;\n        // ===========================================================\n        // Operations inlined from Cam16 to avoid repeated calculation\n        // ===========================================================\n        const viewingConditions = ViewingConditions.DEFAULT;\n        const tInnerCoeff = 1 / Math.pow(1.64 - Math.pow(0.29, viewingConditions.n), 0.73);\n        const eHue = 0.25 * (Math.cos(hueRadians + 2.0) + 3.8);\n        const p1 = eHue * (50000.0 / 13.0) * viewingConditions.nc * viewingConditions.ncb;\n        const hSin = Math.sin(hueRadians);\n        const hCos = Math.cos(hueRadians);\n        for (let iterationRound = 0; iterationRound < 5; iterationRound++) {\n            // ===========================================================\n            // Operations inlined from Cam16 to avoid repeated calculation\n            // ===========================================================\n            const jNormalized = j / 100.0;\n            const alpha = chroma === 0.0 || j === 0.0 ? 0.0 : chroma / Math.sqrt(jNormalized);\n            const t = Math.pow(alpha * tInnerCoeff, 1.0 / 0.9);\n            const ac = viewingConditions.aw *\n                Math.pow(jNormalized, 1.0 / viewingConditions.c / viewingConditions.z);\n            const p2 = ac / viewingConditions.nbb;\n            const gamma = 23.0 * (p2 + 0.305) * t /\n                (23.0 * p1 + 11 * t * hCos + 108.0 * t * hSin);\n            const a = gamma * hCos;\n            const b = gamma * hSin;\n            const rA = (460.0 * p2 + 451.0 * a + 288.0 * b) / 1403.0;\n            const gA = (460.0 * p2 - 891.0 * a - 261.0 * b) / 1403.0;\n            const bA = (460.0 * p2 - 220.0 * a - 6300.0 * b) / 1403.0;\n            const rCScaled = HctSolver.inverseChromaticAdaptation(rA);\n            const gCScaled = HctSolver.inverseChromaticAdaptation(gA);\n            const bCScaled = HctSolver.inverseChromaticAdaptation(bA);\n            const linrgb = mathUtils.matrixMultiply([rCScaled, gCScaled, bCScaled], HctSolver.LINRGB_FROM_SCALED_DISCOUNT);\n            // ===========================================================\n            // Operations inlined from Cam16 to avoid repeated calculation\n            // ===========================================================\n            if (linrgb[0] < 0 || linrgb[1] < 0 || linrgb[2] < 0) {\n                return 0;\n            }\n            const kR = HctSolver.Y_FROM_LINRGB[0];\n            const kG = HctSolver.Y_FROM_LINRGB[1];\n            const kB = HctSolver.Y_FROM_LINRGB[2];\n            const fnj = kR * linrgb[0] + kG * linrgb[1] + kB * linrgb[2];\n            if (fnj <= 0) {\n                return 0;\n            }\n            if (iterationRound === 4 || Math.abs(fnj - y) < 0.002) {\n                if (linrgb[0] > 100.01 || linrgb[1] > 100.01 || linrgb[2] > 100.01) {\n                    return 0;\n                }\n                return colorUtils.argbFromLinrgb(linrgb);\n            }\n            // Iterates with Newton method,\n            // Using 2 * fn(j) / j as the approximation of fn'(j)\n            j = j - (fnj - y) * j / (2 * fnj);\n        }\n        return 0;\n    }\n    /**\n     * Finds an sRGB color with the given hue, chroma, and L*, if\n     * possible.\n     *\n     * @param hueDegrees The desired hue, in degrees.\n     * @param chroma The desired chroma.\n     * @param lstar The desired L*.\n     * @return A hexadecimal representing the sRGB color. The color\n     * has sufficiently close hue, chroma, and L* to the desired\n     * values, if possible; otherwise, the hue and L* will be\n     * sufficiently close, and chroma will be maximized.\n     */\n    static solveToInt(hueDegrees, chroma, lstar) {\n        if (chroma < 0.0001 || lstar < 0.0001 || lstar > 99.9999) {\n            return colorUtils.argbFromLstar(lstar);\n        }\n        hueDegrees = mathUtils.sanitizeDegreesDouble(hueDegrees);\n        const hueRadians = hueDegrees / 180 * Math.PI;\n        const y = colorUtils.yFromLstar(lstar);\n        const exactAnswer = HctSolver.findResultByJ(hueRadians, chroma, y);\n        if (exactAnswer !== 0) {\n            return exactAnswer;\n        }\n        const linrgb = HctSolver.bisectToLimit(y, hueRadians);\n        return colorUtils.argbFromLinrgb(linrgb);\n    }\n    /**\n     * Finds an sRGB color with the given hue, chroma, and L*, if\n     * possible.\n     *\n     * @param hueDegrees The desired hue, in degrees.\n     * @param chroma The desired chroma.\n     * @param lstar The desired L*.\n     * @return An CAM16 object representing the sRGB color. The color\n     * has sufficiently close hue, chroma, and L* to the desired\n     * values, if possible; otherwise, the hue and L* will be\n     * sufficiently close, and chroma will be maximized.\n     */\n    static solveToCam(hueDegrees, chroma, lstar) {\n        return Cam16.fromInt(HctSolver.solveToInt(hueDegrees, chroma, lstar));\n    }\n}\nHctSolver.SCALED_DISCOUNT_FROM_LINRGB = [\n    [\n        0.001200833568784504,\n        0.002389694492170889,\n        0.0002795742885861124,\n    ],\n    [\n        0.0005891086651375999,\n        0.0029785502573438758,\n        0.0003270666104008398,\n    ],\n    [\n        0.00010146692491640572,\n        0.0005364214359186694,\n        0.0032979401770712076,\n    ],\n];\nHctSolver.LINRGB_FROM_SCALED_DISCOUNT = [\n    [\n        1373.2198709594231,\n        -1100.4251190754821,\n        -7.278681089101213,\n    ],\n    [\n        -271.815969077903,\n        559.6580465940733,\n        -32.46047482791194,\n    ],\n    [\n        1.9622899599665666,\n        -57.173814538844006,\n        308.7233197812385,\n    ],\n];\nHctSolver.Y_FROM_LINRGB = [0.2126, 0.7152, 0.0722];\nHctSolver.CRITICAL_PLANES = [\n    0.015176349177441876, 0.045529047532325624, 0.07588174588720938,\n    0.10623444424209313, 0.13658714259697685, 0.16693984095186062,\n    0.19729253930674434, 0.2276452376616281, 0.2579979360165119,\n    0.28835063437139563, 0.3188300904430532, 0.350925934958123,\n    0.3848314933096426, 0.42057480301049466, 0.458183274052838,\n    0.4976837250274023, 0.5391024159806381, 0.5824650784040898,\n    0.6277969426914107, 0.6751227633498623, 0.7244668422128921,\n    0.775853049866786, 0.829304845476233, 0.8848452951698498,\n    0.942497089126609, 1.0022825574869039, 1.0642236851973577,\n    1.1283421258858297, 1.1946592148522128, 1.2631959812511864,\n    1.3339731595349034, 1.407011200216447, 1.4823302800086415,\n    1.5599503113873272, 1.6398909516233677, 1.7221716113234105,\n    1.8068114625156377, 1.8938294463134073, 1.9832442801866852,\n    2.075074464868551, 2.1693382909216234, 2.2660538449872063,\n    2.36523901573795, 2.4669114995532007, 2.5710888059345764,\n    2.6777882626779785, 2.7870270208169257, 2.898822059350997,\n    3.0131901897720907, 3.1301480604002863, 3.2497121605402226,\n    3.3718988244681087, 3.4967242352587946, 3.624204428461639,\n    3.754355295633311, 3.887192587735158, 4.022731918402185,\n    4.160988767090289, 4.301978482107941, 4.445716283538092,\n    4.592217266055746, 4.741496401646282, 4.893568542229298,\n    5.048448422192488, 5.20615066083972, 5.3666897647573375,\n    5.5300801301023865, 5.696336044816294, 5.865471690767354,\n    6.037501145825082, 6.212438385869475, 6.390297286737924,\n    6.571091626112461, 6.7548350853498045, 6.941541251256611,\n    7.131223617812143, 7.323895587840543, 7.5195704746346665,\n    7.7182615035334345, 7.919981813454504, 8.124744458384042,\n    8.332562408825165, 8.543448553206703, 8.757415699253682,\n    8.974476575321063, 9.194643831691977, 9.417930041841839,\n    9.644347703669503, 9.873909240696694, 10.106627003236781,\n    10.342513269534024, 10.58158024687427, 10.8238400726681,\n    11.069304815507364, 11.317986476196008, 11.569896988756009,\n    11.825048221409341, 12.083451977536606, 12.345119996613247,\n    12.610063955123938, 12.878295467455942, 13.149826086772048,\n    13.42466730586372, 13.702830557985108, 13.984327217668513,\n    14.269168601521828, 14.55736596900856, 14.848930523210871,\n    15.143873411576273, 15.44220572664832, 15.743938506781891,\n    16.04908273684337, 16.35764934889634, 16.66964922287304,\n    16.985093187232053, 17.30399201960269, 17.62635644741625,\n    17.95219714852476, 18.281524751807332, 18.614349837764564,\n    18.95068293910138, 19.290534541298456, 19.633915083172692,\n    19.98083495742689, 20.331304511189067, 20.685334046541502,\n    21.042933821039977, 21.404114048223256, 21.76888489811322,\n    22.137256497705877, 22.50923893145328, 22.884842241736916,\n    23.264076429332462, 23.6469514538663, 24.033477234264016,\n    24.42366364919083, 24.817520537484558, 25.21505769858089,\n    25.61628489293138, 26.021211842414342, 26.429848230738664,\n    26.842203703840827, 27.258287870275353, 27.678110301598522,\n    28.10168053274597, 28.529008062403893, 28.96010235337422,\n    29.39497283293396, 29.83362889318845, 30.276079891419332,\n    30.722335150426627, 31.172403958865512, 31.62629557157785,\n    32.08401920991837, 32.54558406207592, 33.010999283389665,\n    33.4802739966603, 33.953417292456834, 34.430438229418264,\n    34.911345834551085, 35.39614910352207, 35.88485700094671,\n    36.37747846067349, 36.87402238606382, 37.37449765026789,\n    37.87891309649659, 38.38727753828926, 38.89959975977785,\n    39.41588851594697, 39.93615253289054, 40.460400508064545,\n    40.98864111053629, 41.520882981230194, 42.05713473317016,\n    42.597404951718396, 43.141702194811224, 43.6900349931913,\n    44.24241185063697, 44.798841244188324, 45.35933162437017,\n    45.92389141541209, 46.49252901546552, 47.065252796817916,\n    47.64207110610409, 48.22299226451468, 48.808024568002054,\n    49.3971762874833, 49.9904556690408, 50.587870934119984,\n    51.189430279724725, 51.79514187861014, 52.40501387947288,\n    53.0190544071392, 53.637271562750364, 54.259673423945976,\n    54.88626804504493, 55.517063457223934, 56.15206766869424,\n    56.79128866487574, 57.43473440856916, 58.08241284012621,\n    58.734331877617365, 59.39049941699807, 60.05092333227251,\n    60.715611475655585, 61.38457167773311, 62.057811747619894,\n    62.7353394731159, 63.417162620860914, 64.10328893648692,\n    64.79372614476921, 65.48848194977529, 66.18756403501224,\n    66.89098006357258, 67.59873767827808, 68.31084450182222,\n    69.02730813691093, 69.74813616640164, 70.47333615344107,\n    71.20291564160104, 71.93688215501312, 72.67524319850172,\n    73.41800625771542, 74.16517879925733, 74.9167682708136,\n    75.67278210128072, 76.43322770089146, 77.1981124613393,\n    77.96744375590167, 78.74122893956174, 79.51947534912904,\n    80.30219030335869, 81.08938110306934, 81.88105503125999,\n    82.67721935322541, 83.4778813166706, 84.28304815182372,\n    85.09272707154808, 85.90692527145302, 86.72564993000343,\n    87.54890820862819, 88.3767072518277, 89.2090541872801,\n    90.04595612594655, 90.88742016217518, 91.73345337380438,\n    92.58406282226491, 93.43925555268066, 94.29903859396902,\n    95.16341895893969, 96.03240364439274, 96.9059996312159,\n    97.78421388448044, 98.6670533535366, 99.55452497210776,\n];\n//# sourceMappingURL=hct_solver.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A color system built using CAM16 hue and chroma, and L* from\n * L*a*b*.\n *\n * Using L* creates a link between the color system, contrast, and thus\n * accessibility. Contrast ratio depends on relative luminance, or Y in the XYZ\n * color space. L*, or perceptual luminance can be calculated from Y.\n *\n * Unlike Y, L* is linear to human perception, allowing trivial creation of\n * accurate color tones.\n *\n * Unlike contrast ratio, measuring contrast in L* is linear, and simple to\n * calculate. A difference of 40 in HCT tone guarantees a contrast ratio >= 3.0,\n * and a difference of 50 guarantees a contrast ratio >= 4.5.\n */\nimport * as utils from '../utils/color_utils.js';\nimport { Cam16 } from './cam16.js';\nimport { HctSolver } from './hct_solver.js';\nimport { ViewingConditions } from './viewing_conditions.js';\n/**\n * HCT, hue, chroma, and tone. A color system that provides a perceptually\n * accurate color measurement system that can also accurately render what colors\n * will appear as in different lighting environments.\n */\nexport class Hct {\n    static from(hue, chroma, tone) {\n        return new Hct(HctSolver.solveToInt(hue, chroma, tone));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return HCT representation of a color in default viewing conditions\n     */\n    static fromInt(argb) {\n        return new Hct(argb);\n    }\n    toInt() {\n        return this.argb;\n    }\n    /**\n     * A number, in degrees, representing ex. red, orange, yellow, etc.\n     * Ranges from 0 <= hue < 360.\n     */\n    get hue() {\n        return this.internalHue;\n    }\n    /**\n     * @param newHue 0 <= newHue < 360; invalid values are corrected.\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set hue(newHue) {\n        this.setInternalState(HctSolver.solveToInt(newHue, this.internalChroma, this.internalTone));\n    }\n    get chroma() {\n        return this.internalChroma;\n    }\n    /**\n     * @param newChroma 0 <= newChroma < ?\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set chroma(newChroma) {\n        this.setInternalState(HctSolver.solveToInt(this.internalHue, newChroma, this.internalTone));\n    }\n    /** Lightness. Ranges from 0 to 100. */\n    get tone() {\n        return this.internalTone;\n    }\n    /**\n     * @param newTone 0 <= newTone <= 100; invalid valids are corrected.\n     * Chroma may decrease because chroma has a different maximum for any given\n     * hue and tone.\n     */\n    set tone(newTone) {\n        this.setInternalState(HctSolver.solveToInt(this.internalHue, this.internalChroma, newTone));\n    }\n    constructor(argb) {\n        this.argb = argb;\n        const cam = Cam16.fromInt(argb);\n        this.internalHue = cam.hue;\n        this.internalChroma = cam.chroma;\n        this.internalTone = utils.lstarFromArgb(argb);\n        this.argb = argb;\n    }\n    setInternalState(argb) {\n        const cam = Cam16.fromInt(argb);\n        this.internalHue = cam.hue;\n        this.internalChroma = cam.chroma;\n        this.internalTone = utils.lstarFromArgb(argb);\n        this.argb = argb;\n    }\n    /**\n     * Translates a color into different [ViewingConditions].\n     *\n     * Colors change appearance. They look different with lights on versus off,\n     * the same color, as in hex code, on white looks different when on black.\n     * This is called color relativity, most famously explicated by Josef Albers\n     * in Interaction of Color.\n     *\n     * In color science, color appearance models can account for this and\n     * calculate the appearance of a color in different settings. HCT is based on\n     * CAM16, a color appearance model, and uses it to make these calculations.\n     *\n     * See [ViewingConditions.make] for parameters affecting color appearance.\n     */\n    inViewingConditions(vc) {\n        // 1. Use CAM16 to find XYZ coordinates of color in specified VC.\n        const cam = Cam16.fromInt(this.toInt());\n        const viewedInVc = cam.xyzInViewingConditions(vc);\n        // 2. Create CAM16 of those XYZ coordinates in default VC.\n        const recastInVc = Cam16.fromXyzInViewingConditions(viewedInVc[0], viewedInVc[1], viewedInVc[2], ViewingConditions.make());\n        // 3. Create HCT from:\n        // - CAM16 using default VC with XYZ coordinates in specified VC.\n        // - L* converted from Y in XYZ coordinates in specified VC.\n        const recastHct = Hct.from(recastInVc.hue, recastInVc.chroma, utils.lstarFromY(viewedInVc[1]));\n        return recastHct;\n    }\n}\n//# sourceMappingURL=hct.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport { Cam16 } from '../hct/cam16.js';\nimport { Hct } from '../hct/hct.js';\nimport * as colorUtils from '../utils/color_utils.js';\nimport * as mathUtils from '../utils/math_utils.js';\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * Functions for blending in HCT and CAM16.\n */\nexport class Blend {\n    /**\n     * Blend the design color's HCT hue towards the key color's HCT\n     * hue, in a way that leaves the original color recognizable and\n     * recognizably shifted towards the key color.\n     *\n     * @param designColor ARGB representation of an arbitrary color.\n     * @param sourceColor ARGB representation of the main theme color.\n     * @return The design color with a hue shifted towards the\n     * system's color, a slightly warmer/cooler variant of the design\n     * color's hue.\n     */\n    static harmonize(designColor, sourceColor) {\n        const fromHct = Hct.fromInt(designColor);\n        const toHct = Hct.fromInt(sourceColor);\n        const differenceDegrees = mathUtils.differenceDegrees(fromHct.hue, toHct.hue);\n        const rotationDegrees = Math.min(differenceDegrees * 0.5, 15.0);\n        const outputHue = mathUtils.sanitizeDegreesDouble(fromHct.hue +\n            rotationDegrees * mathUtils.rotationDirection(fromHct.hue, toHct.hue));\n        return Hct.from(outputHue, fromHct.chroma, fromHct.tone).toInt();\n    }\n    /**\n     * Blends hue from one color into another. The chroma and tone of\n     * the original color are maintained.\n     *\n     * @param from ARGB representation of color\n     * @param to ARGB representation of color\n     * @param amount how much blending to perform; 0.0 >= and <= 1.0\n     * @return from, with a hue blended towards to. Chroma and tone\n     * are constant.\n     */\n    static hctHue(from, to, amount) {\n        const ucs = Blend.cam16Ucs(from, to, amount);\n        const ucsCam = Cam16.fromInt(ucs);\n        const fromCam = Cam16.fromInt(from);\n        const blended = Hct.from(ucsCam.hue, fromCam.chroma, colorUtils.lstarFromArgb(from));\n        return blended.toInt();\n    }\n    /**\n     * Blend in CAM16-UCS space.\n     *\n     * @param from ARGB representation of color\n     * @param to ARGB representation of color\n     * @param amount how much blending to perform; 0.0 >= and <= 1.0\n     * @return from, blended towards to. Hue, chroma, and tone will\n     * change.\n     */\n    static cam16Ucs(from, to, amount) {\n        const fromCam = Cam16.fromInt(from);\n        const toCam = Cam16.fromInt(to);\n        const fromJ = fromCam.jstar;\n        const fromA = fromCam.astar;\n        const fromB = fromCam.bstar;\n        const toJ = toCam.jstar;\n        const toA = toCam.astar;\n        const toB = toCam.bstar;\n        const jstar = fromJ + (toJ - fromJ) * amount;\n        const astar = fromA + (toA - fromA) * amount;\n        const bstar = fromB + (toB - fromB) * amount;\n        return Cam16.fromUcs(jstar, astar, bstar).toInt();\n    }\n}\n//# sourceMappingURL=blend.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\nimport * as utils from '../utils/color_utils.js';\nimport * as math from '../utils/math_utils.js';\n/**\n * Utility methods for calculating contrast given two colors, or calculating a\n * color given one color and a contrast ratio.\n *\n * Contrast ratio is calculated using XYZ's Y. When linearized to match human\n * perception, Y becomes HCT's tone and L*a*b*'s' L*. Informally, this is the\n * lightness of a color.\n *\n * Methods refer to tone, T in the the HCT color space.\n * Tone is equivalent to L* in the L*a*b* color space, or L in the LCH color\n * space.\n */\nexport class Contrast {\n    /**\n     * Returns a contrast ratio, which ranges from 1 to 21.\n     *\n     * @param toneA Tone between 0 and 100. Values outside will be clamped.\n     * @param toneB Tone between 0 and 100. Values outside will be clamped.\n     */\n    static ratioOfTones(toneA, toneB) {\n        toneA = math.clampDouble(0.0, 100.0, toneA);\n        toneB = math.clampDouble(0.0, 100.0, toneB);\n        return Contrast.ratioOfYs(utils.yFromLstar(toneA), utils.yFromLstar(toneB));\n    }\n    static ratioOfYs(y1, y2) {\n        const lighter = y1 > y2 ? y1 : y2;\n        const darker = (lighter === y2) ? y1 : y2;\n        return (lighter + 5.0) / (darker + 5.0);\n    }\n    /**\n     * Returns a tone >= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns -1 if ratio cannot be achieved with tone parameter.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in -1 being returned.\n     * @param ratio Contrast ratio of return value and tone.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static lighter(tone, ratio) {\n        if (tone < 0.0 || tone > 100.0) {\n            return -1.0;\n        }\n        const darkY = utils.yFromLstar(tone);\n        const lightY = ratio * (darkY + 5.0) - 5.0;\n        const realContrast = Contrast.ratioOfYs(lightY, darkY);\n        const delta = Math.abs(realContrast - ratio);\n        if (realContrast < ratio && delta > 0.04) {\n            return -1;\n        }\n        // Ensure gamut mapping, which requires a 'range' on tone, will still result\n        // the correct ratio by darkening slightly.\n        const returnValue = utils.lstarFromY(lightY) + 0.4;\n        if (returnValue < 0 || returnValue > 100) {\n            return -1;\n        }\n        return returnValue;\n    }\n    /**\n     * Returns a tone <= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns -1 if ratio cannot be achieved with tone parameter.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in -1 being returned.\n     * @param ratio Contrast ratio of return value and tone.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static darker(tone, ratio) {\n        if (tone < 0.0 || tone > 100.0) {\n            return -1.0;\n        }\n        const lightY = utils.yFromLstar(tone);\n        const darkY = ((lightY + 5.0) / ratio) - 5.0;\n        const realContrast = Contrast.ratioOfYs(lightY, darkY);\n        const delta = Math.abs(realContrast - ratio);\n        if (realContrast < ratio && delta > 0.04) {\n            return -1;\n        }\n        // Ensure gamut mapping, which requires a 'range' on tone, will still result\n        // the correct ratio by darkening slightly.\n        const returnValue = utils.lstarFromY(darkY) - 0.4;\n        if (returnValue < 0 || returnValue > 100) {\n            return -1;\n        }\n        return returnValue;\n    }\n    /**\n     * Returns a tone >= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns 100 if ratio cannot be achieved with tone parameter.\n     *\n     * This method is unsafe because the returned value is guaranteed to be in\n     * bounds for tone, i.e. between 0 and 100. However, that value may not reach\n     * the ratio with tone. For example, there is no color lighter than T100.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in 100 being returned.\n     * @param ratio Desired contrast ratio of return value and tone parameter.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static lighterUnsafe(tone, ratio) {\n        const lighterSafe = Contrast.lighter(tone, ratio);\n        return (lighterSafe < 0.0) ? 100.0 : lighterSafe;\n    }\n    /**\n     * Returns a tone >= tone parameter that ensures ratio parameter.\n     * Return value is between 0 and 100.\n     * Returns 100 if ratio cannot be achieved with tone parameter.\n     *\n     * This method is unsafe because the returned value is guaranteed to be in\n     * bounds for tone, i.e. between 0 and 100. However, that value may not reach\n     * the [ratio with [tone]. For example, there is no color darker than T0.\n     *\n     * @param tone Tone return value must contrast with.\n     * Range is 0 to 100. Invalid values will result in 0 being returned.\n     * @param ratio Desired contrast ratio of return value and tone parameter.\n     * Range is 1 to 21, invalid values have undefined behavior.\n     */\n    static darkerUnsafe(tone, ratio) {\n        const darkerSafe = Contrast.darker(tone, ratio);\n        return (darkerSafe < 0.0) ? 0.0 : darkerSafe;\n    }\n}\n//# sourceMappingURL=contrast.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Hct } from '../hct/hct.js';\n// material_color_utilities is designed to have a consistent API across\n// platforms and modular components that can be moved around easily. Using a\n// class as a namespace facilitates this.\n//\n// tslint:disable:class-as-namespace\n/**\n * Check and/or fix universally disliked colors.\n * Color science studies of color preference indicate universal distaste for\n * dark yellow-greens, and also show this is correlated to distate for\n * biological waste and rotting food.\n *\n * See Palmer and Schloss, 2010 or Schloss and Palmer's Chapter 21 in Handbook\n * of Color Psychology (2015).\n */\nexport class DislikeAnalyzer {\n    /**\n     * Returns true if a color is disliked.\n     *\n     * @param hct A color to be judged.\n     * @return Whether the color is disliked.\n     *\n     * Disliked is defined as a dark yellow-green that is not neutral.\n     */\n    static isDisliked(hct) {\n        const huePasses = Math.round(hct.hue) >= 90.0 && Math.round(hct.hue) <= 111.0;\n        const chromaPasses = Math.round(hct.chroma) > 16.0;\n        const tonePasses = Math.round(hct.tone) < 65.0;\n        return huePasses && chromaPasses && tonePasses;\n    }\n    /**\n     * If a color is disliked, lighten it to make it likable.\n     *\n     * @param hct A color to be judged.\n     * @return A new color if the original color is disliked, or the original\n     *   color if it is acceptable.\n     */\n    static fixIfDisliked(hct) {\n        if (DislikeAnalyzer.isDisliked(hct)) {\n            return Hct.from(hct.hue, hct.chroma, 70.0);\n        }\n        return hct;\n    }\n}\n//# sourceMappingURL=dislike_analyzer.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Contrast } from '../contrast/contrast.js';\nimport * as math from '../utils/math_utils.js';\n/**\n * A color that adjusts itself based on UI state provided by DynamicScheme.\n *\n * Colors without backgrounds do not change tone when contrast changes. Colors\n * with backgrounds become closer to their background as contrast lowers, and\n * further when contrast increases.\n *\n * Prefer static constructors. They require either a hexcode, a palette and\n * tone, or a hue and chroma. Optionally, they can provide a background\n * DynamicColor.\n */\nexport class DynamicColor {\n    /**\n     * Create a DynamicColor defined by a TonalPalette and HCT tone.\n     *\n     * @param args Functions with DynamicScheme as input. Must provide a palette\n     * and tone. May provide a background DynamicColor and ToneDeltaConstraint.\n     */\n    static fromPalette(args) {\n        return new DynamicColor(args.name ?? '', args.palette, args.tone, args.isBackground ?? false, args.background, args.secondBackground, args.contrastCurve, args.toneDeltaPair);\n    }\n    /**\n     * The base constructor for DynamicColor.\n     *\n     * _Strongly_ prefer using one of the convenience constructors. This class is\n     * arguably too flexible to ensure it can support any scenario. Functional\n     * arguments allow  overriding without risks that come with subclasses.\n     *\n     * For example, the default behavior of adjust tone at max contrast\n     * to be at a 7.0 ratio with its background is principled and\n     * matches accessibility guidance. That does not mean it's the desired\n     * approach for _every_ design system, and every color pairing,\n     * always, in every case.\n     *\n     * @param name The name of the dynamic color. Defaults to empty.\n     * @param palette Function that provides a TonalPalette given\n     * DynamicScheme. A TonalPalette is defined by a hue and chroma, so this\n     * replaces the need to specify hue/chroma. By providing a tonal palette, when\n     * contrast adjustments are made, intended chroma can be preserved.\n     * @param tone Function that provides a tone, given a DynamicScheme.\n     * @param isBackground Whether this dynamic color is a background, with\n     * some other color as the foreground. Defaults to false.\n     * @param background The background of the dynamic color (as a function of a\n     *     `DynamicScheme`), if it exists.\n     * @param secondBackground A second background of the dynamic color (as a\n     *     function of a `DynamicScheme`), if it\n     * exists.\n     * @param contrastCurve A `ContrastCurve` object specifying how its contrast\n     * against its background should behave in various contrast levels options.\n     * @param toneDeltaPair A `ToneDeltaPair` object specifying a tone delta\n     * constraint between two colors. One of them must be the color being\n     * constructed.\n     */\n    constructor(name, palette, tone, isBackground, background, secondBackground, contrastCurve, toneDeltaPair) {\n        this.name = name;\n        this.palette = palette;\n        this.tone = tone;\n        this.isBackground = isBackground;\n        this.background = background;\n        this.secondBackground = secondBackground;\n        this.contrastCurve = contrastCurve;\n        this.toneDeltaPair = toneDeltaPair;\n        this.hctCache = new Map();\n        if ((!background) && secondBackground) {\n            throw new Error(`Color ${name} has secondBackground` +\n                `defined, but background is not defined.`);\n        }\n        if ((!background) && contrastCurve) {\n            throw new Error(`Color ${name} has contrastCurve` +\n                `defined, but background is not defined.`);\n        }\n        if (background && !contrastCurve) {\n            throw new Error(`Color ${name} has background` +\n                `defined, but contrastCurve is not defined.`);\n        }\n    }\n    /**\n     * Return a ARGB integer (i.e. a hex code).\n     *\n     * @param scheme Defines the conditions of the user interface, for example,\n     * whether or not it is dark mode or light mode, and what the desired\n     * contrast level is.\n     */\n    getArgb(scheme) {\n        return this.getHct(scheme).toInt();\n    }\n    /**\n     * Return a color, expressed in the HCT color space, that this\n     * DynamicColor is under the conditions in scheme.\n     *\n     * @param scheme Defines the conditions of the user interface, for example,\n     * whether or not it is dark mode or light mode, and what the desired\n     * contrast level is.\n     */\n    getHct(scheme) {\n        const cachedAnswer = this.hctCache.get(scheme);\n        if (cachedAnswer != null) {\n            return cachedAnswer;\n        }\n        const tone = this.getTone(scheme);\n        const answer = this.palette(scheme).getHct(tone);\n        if (this.hctCache.size > 4) {\n            this.hctCache.clear();\n        }\n        this.hctCache.set(scheme, answer);\n        return answer;\n    }\n    /**\n     * Return a tone, T in the HCT color space, that this DynamicColor is under\n     * the conditions in scheme.\n     *\n     * @param scheme Defines the conditions of the user interface, for example,\n     * whether or not it is dark mode or light mode, and what the desired\n     * contrast level is.\n     */\n    getTone(scheme) {\n        const decreasingContrast = scheme.contrastLevel < 0;\n        // Case 1: dual foreground, pair of colors with delta constraint.\n        if (this.toneDeltaPair) {\n            const toneDeltaPair = this.toneDeltaPair(scheme);\n            const roleA = toneDeltaPair.roleA;\n            const roleB = toneDeltaPair.roleB;\n            const delta = toneDeltaPair.delta;\n            const polarity = toneDeltaPair.polarity;\n            const stayTogether = toneDeltaPair.stayTogether;\n            const bg = this.background(scheme);\n            const bgTone = bg.getTone(scheme);\n            const aIsNearer = (polarity === 'nearer' ||\n                (polarity === 'lighter' && !scheme.isDark) ||\n                (polarity === 'darker' && scheme.isDark));\n            const nearer = aIsNearer ? roleA : roleB;\n            const farther = aIsNearer ? roleB : roleA;\n            const amNearer = this.name === nearer.name;\n            const expansionDir = scheme.isDark ? 1 : -1;\n            // 1st round: solve to min, each\n            const nContrast = nearer.contrastCurve.get(scheme.contrastLevel);\n            const fContrast = farther.contrastCurve.get(scheme.contrastLevel);\n            // If a color is good enough, it is not adjusted.\n            // Initial and adjusted tones for `nearer`\n            const nInitialTone = nearer.tone(scheme);\n            let nTone = Contrast.ratioOfTones(bgTone, nInitialTone) >= nContrast ?\n                nInitialTone :\n                DynamicColor.foregroundTone(bgTone, nContrast);\n            // Initial and adjusted tones for `farther`\n            const fInitialTone = farther.tone(scheme);\n            let fTone = Contrast.ratioOfTones(bgTone, fInitialTone) >= fContrast ?\n                fInitialTone :\n                DynamicColor.foregroundTone(bgTone, fContrast);\n            if (decreasingContrast) {\n                // If decreasing contrast, adjust color to the \"bare minimum\"\n                // that satisfies contrast.\n                nTone = DynamicColor.foregroundTone(bgTone, nContrast);\n                fTone = DynamicColor.foregroundTone(bgTone, fContrast);\n            }\n            if ((fTone - nTone) * expansionDir >= delta) {\n                // Good! Tones satisfy the constraint; no change needed.\n            }\n            else {\n                // 2nd round: expand farther to match delta.\n                fTone = math.clampDouble(0, 100, nTone + delta * expansionDir);\n                if ((fTone - nTone) * expansionDir >= delta) {\n                    // Good! Tones now satisfy the constraint; no change needed.\n                }\n                else {\n                    // 3rd round: contract nearer to match delta.\n                    nTone = math.clampDouble(0, 100, fTone - delta * expansionDir);\n                }\n            }\n            // Avoids the 50-59 awkward zone.\n            if (50 <= nTone && nTone < 60) {\n                // If `nearer` is in the awkward zone, move it away, together with\n                // `farther`.\n                if (expansionDir > 0) {\n                    nTone = 60;\n                    fTone = Math.max(fTone, nTone + delta * expansionDir);\n                }\n                else {\n                    nTone = 49;\n                    fTone = Math.min(fTone, nTone + delta * expansionDir);\n                }\n            }\n            else if (50 <= fTone && fTone < 60) {\n                if (stayTogether) {\n                    // Fixes both, to avoid two colors on opposite sides of the \"awkward\n                    // zone\".\n                    if (expansionDir > 0) {\n                        nTone = 60;\n                        fTone = Math.max(fTone, nTone + delta * expansionDir);\n                    }\n                    else {\n                        nTone = 49;\n                        fTone = Math.min(fTone, nTone + delta * expansionDir);\n                    }\n                }\n                else {\n                    // Not required to stay together; fixes just one.\n                    if (expansionDir > 0) {\n                        fTone = 60;\n                    }\n                    else {\n                        fTone = 49;\n                    }\n                }\n            }\n            // Returns `nTone` if this color is `nearer`, otherwise `fTone`.\n            return amNearer ? nTone : fTone;\n        }\n        else {\n            // Case 2: No contrast pair; just solve for itself.\n            let answer = this.tone(scheme);\n            if (this.background == null) {\n                return answer; // No adjustment for colors with no background.\n            }\n            const bgTone = this.background(scheme).getTone(scheme);\n            const desiredRatio = this.contrastCurve.get(scheme.contrastLevel);\n            if (Contrast.ratioOfTones(bgTone, answer) >= desiredRatio) {\n                // Don't \"improve\" what's good enough.\n            }\n            else {\n                // Rough improvement.\n                answer = DynamicColor.foregroundTone(bgTone, desiredRatio);\n            }\n            if (decreasingContrast) {\n                answer = DynamicColor.foregroundTone(bgTone, desiredRatio);\n            }\n            if (this.isBackground && 50 <= answer && answer < 60) {\n                // Must adjust\n                if (Contrast.ratioOfTones(49, bgTone) >= desiredRatio) {\n                    answer = 49;\n                }\n                else {\n                    answer = 60;\n                }\n            }\n            if (this.secondBackground) {\n                // Case 3: Adjust for dual backgrounds.\n                const [bg1, bg2] = [this.background, this.secondBackground];\n                const [bgTone1, bgTone2] = [bg1(scheme).getTone(scheme), bg2(scheme).getTone(scheme)];\n                const [upper, lower] = [Math.max(bgTone1, bgTone2), Math.min(bgTone1, bgTone2)];\n                if (Contrast.ratioOfTones(upper, answer) >= desiredRatio &&\n                    Contrast.ratioOfTones(lower, answer) >= desiredRatio) {\n                    return answer;\n                }\n                // The darkest light tone that satisfies the desired ratio,\n                // or -1 if such ratio cannot be reached.\n                const lightOption = Contrast.lighter(upper, desiredRatio);\n                // The lightest dark tone that satisfies the desired ratio,\n                // or -1 if such ratio cannot be reached.\n                const darkOption = Contrast.darker(lower, desiredRatio);\n                // Tones suitable for the foreground.\n                const availables = [];\n                if (lightOption !== -1)\n                    availables.push(lightOption);\n                if (darkOption !== -1)\n                    availables.push(darkOption);\n                const prefersLight = DynamicColor.tonePrefersLightForeground(bgTone1) ||\n                    DynamicColor.tonePrefersLightForeground(bgTone2);\n                if (prefersLight) {\n                    return (lightOption < 0) ? 100 : lightOption;\n                }\n                if (availables.length === 1) {\n                    return availables[0];\n                }\n                return (darkOption < 0) ? 0 : darkOption;\n            }\n            return answer;\n        }\n    }\n    /**\n     * Given a background tone, find a foreground tone, while ensuring they reach\n     * a contrast ratio that is as close to [ratio] as possible.\n     *\n     * @param bgTone Tone in HCT. Range is 0 to 100, undefined behavior when it\n     *     falls outside that range.\n     * @param ratio The contrast ratio desired between bgTone and the return\n     *     value.\n     */\n    static foregroundTone(bgTone, ratio) {\n        const lighterTone = Contrast.lighterUnsafe(bgTone, ratio);\n        const darkerTone = Contrast.darkerUnsafe(bgTone, ratio);\n        const lighterRatio = Contrast.ratioOfTones(lighterTone, bgTone);\n        const darkerRatio = Contrast.ratioOfTones(darkerTone, bgTone);\n        const preferLighter = DynamicColor.tonePrefersLightForeground(bgTone);\n        if (preferLighter) {\n            // This handles an edge case where the initial contrast ratio is high\n            // (ex. 13.0), and the ratio passed to the function is that high\n            // ratio, and both the lighter and darker ratio fails to pass that\n            // ratio.\n            //\n            // This was observed with Tonal Spot's On Primary Container turning\n            // black momentarily between high and max contrast in light mode. PC's\n            // standard tone was T90, OPC's was T10, it was light mode, and the\n            // contrast value was 0.6568521221032331.\n            const negligibleDifference = Math.abs(lighterRatio - darkerRatio) < 0.1 &&\n                lighterRatio < ratio && darkerRatio < ratio;\n            return lighterRatio >= ratio || lighterRatio >= darkerRatio ||\n                negligibleDifference ?\n                lighterTone :\n                darkerTone;\n        }\n        else {\n            return darkerRatio >= ratio || darkerRatio >= lighterRatio ? darkerTone :\n                lighterTone;\n        }\n    }\n    /**\n     * Returns whether [tone] prefers a light foreground.\n     *\n     * People prefer white foregrounds on ~T60-70. Observed over time, and also\n     * by Andrew Somers during research for APCA.\n     *\n     * T60 used as to create the smallest discontinuity possible when skipping\n     * down to T49 in order to ensure light foregrounds.\n     * Since `tertiaryContainer` in dark monochrome scheme requires a tone of\n     * 60, it should not be adjusted. Therefore, 60 is excluded here.\n     */\n    static tonePrefersLightForeground(tone) {\n        return Math.round(tone) < 60.0;\n    }\n    /**\n     * Returns whether [tone] can reach a contrast ratio of 4.5 with a lighter\n     * color.\n     */\n    static toneAllowsLightForeground(tone) {\n        return Math.round(tone) <= 49.0;\n    }\n    /**\n     * Adjust a tone such that white has 4.5 contrast, if the tone is\n     * reasonably close to supporting it.\n     */\n    static enableLightForeground(tone) {\n        if (DynamicColor.tonePrefersLightForeground(tone) &&\n            !DynamicColor.toneAllowsLightForeground(tone)) {\n            return 49.0;\n        }\n        return tone;\n    }\n}\n//# sourceMappingURL=dynamic_color.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Hct } from '../hct/hct.js';\n/**\n *  A convenience class for retrieving colors that are constant in hue and\n *  chroma, but vary in tone.\n */\nexport class TonalPalette {\n    /**\n     * @param argb ARGB representation of a color\n     * @return Tones matching that color's hue and chroma.\n     */\n    static fromInt(argb) {\n        const hct = Hct.fromInt(argb);\n        return TonalPalette.fromHct(hct);\n    }\n    /**\n     * @param hct Hct\n     * @return Tones matching that color's hue and chroma.\n     */\n    static fromHct(hct) {\n        return new TonalPalette(hct.hue, hct.chroma, hct);\n    }\n    /**\n     * @param hue HCT hue\n     * @param chroma HCT chroma\n     * @return Tones matching hue and chroma.\n     */\n    static fromHueAndChroma(hue, chroma) {\n        const keyColor = new KeyColor(hue, chroma).create();\n        return new TonalPalette(hue, chroma, keyColor);\n    }\n    constructor(hue, chroma, keyColor) {\n        this.hue = hue;\n        this.chroma = chroma;\n        this.keyColor = keyColor;\n        this.cache = new Map();\n    }\n    /**\n     * @param tone HCT tone, measured from 0 to 100.\n     * @return ARGB representation of a color with that tone.\n     */\n    tone(tone) {\n        let argb = this.cache.get(tone);\n        if (argb === undefined) {\n            argb = Hct.from(this.hue, this.chroma, tone).toInt();\n            this.cache.set(tone, argb);\n        }\n        return argb;\n    }\n    /**\n     * @param tone HCT tone.\n     * @return HCT representation of a color with that tone.\n     */\n    getHct(tone) {\n        return Hct.fromInt(this.tone(tone));\n    }\n}\n/**\n * Key color is a color that represents the hue and chroma of a tonal palette\n */\nclass KeyColor {\n    constructor(hue, requestedChroma) {\n        this.hue = hue;\n        this.requestedChroma = requestedChroma;\n        // Cache that maps tone to max chroma to avoid duplicated HCT calculation.\n        this.chromaCache = new Map();\n        this.maxChromaValue = 200.0;\n    }\n    /**\n     * Creates a key color from a [hue] and a [chroma].\n     * The key color is the first tone, starting from T50, matching the given hue\n     * and chroma.\n     *\n     * @return Key color [Hct]\n     */\n    create() {\n        // Pivot around T50 because T50 has the most chroma available, on\n        // average. Thus it is most likely to have a direct answer.\n        const pivotTone = 50;\n        const toneStepSize = 1;\n        // Epsilon to accept values slightly higher than the requested chroma.\n        const epsilon = 0.01;\n        // Binary search to find the tone that can provide a chroma that is closest\n        // to the requested chroma.\n        let lowerTone = 0;\n        let upperTone = 100;\n        while (lowerTone < upperTone) {\n            const midTone = Math.floor((lowerTone + upperTone) / 2);\n            const isAscending = this.maxChroma(midTone) < this.maxChroma(midTone + toneStepSize);\n            const sufficientChroma = this.maxChroma(midTone) >= this.requestedChroma - epsilon;\n            if (sufficientChroma) {\n                // Either range [lowerTone, midTone] or [midTone, upperTone] has\n                // the answer, so search in the range that is closer the pivot tone.\n                if (Math.abs(lowerTone - pivotTone) < Math.abs(upperTone - pivotTone)) {\n                    upperTone = midTone;\n                }\n                else {\n                    if (lowerTone === midTone) {\n                        return Hct.from(this.hue, this.requestedChroma, lowerTone);\n                    }\n                    lowerTone = midTone;\n                }\n            }\n            else {\n                // As there is no sufficient chroma in the midTone, follow the direction\n                // to the chroma peak.\n                if (isAscending) {\n                    lowerTone = midTone + toneStepSize;\n                }\n                else {\n                    // Keep midTone for potential chroma peak.\n                    upperTone = midTone;\n                }\n            }\n        }\n        return Hct.from(this.hue, this.requestedChroma, lowerTone);\n    }\n    // Find the maximum chroma for a given tone\n    maxChroma(tone) {\n        if (this.chromaCache.has(tone)) {\n            return this.chromaCache.get(tone);\n        }\n        const chroma = Hct.from(this.hue, this.maxChromaValue, tone).chroma;\n        this.chromaCache.set(tone, chroma);\n        return chroma;\n    }\n}\n//# sourceMappingURL=tonal_palette.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as math from '../utils/math_utils.js';\n/**\n * A class containing a value that changes with the contrast level.\n *\n * Usually represents the contrast requirements for a dynamic color on its\n * background. The four values correspond to values for contrast levels -1.0,\n * 0.0, 0.5, and 1.0, respectively.\n */\nexport class ContrastCurve {\n    /**\n     * Creates a `ContrastCurve` object.\n     *\n     * @param low Value for contrast level -1.0\n     * @param normal Value for contrast level 0.0\n     * @param medium Value for contrast level 0.5\n     * @param high Value for contrast level 1.0\n     */\n    constructor(low, normal, medium, high) {\n        this.low = low;\n        this.normal = normal;\n        this.medium = medium;\n        this.high = high;\n    }\n    /**\n     * Returns the value at a given contrast level.\n     *\n     * @param contrastLevel The contrast level. 0.0 is the default (normal); -1.0\n     *     is the lowest; 1.0 is the highest.\n     * @return The value. For contrast ratios, a number between 1.0 and 21.0.\n     */\n    get(contrastLevel) {\n        if (contrastLevel <= -1.0) {\n            return this.low;\n        }\n        else if (contrastLevel < 0.0) {\n            return math.lerp(this.low, this.normal, (contrastLevel - (-1)) / 1);\n        }\n        else if (contrastLevel < 0.5) {\n            return math.lerp(this.normal, this.medium, (contrastLevel - 0) / 0.5);\n        }\n        else if (contrastLevel < 1.0) {\n            return math.lerp(this.medium, this.high, (contrastLevel - 0.5) / 0.5);\n        }\n        else {\n            return this.high;\n        }\n    }\n}\n//# sourceMappingURL=contrast_curve.js.map","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Documents a constraint between two DynamicColors, in which their tones must\n * have a certain distance from each other.\n *\n * Prefer a DynamicColor with a background, this is for special cases when\n * designers want tonal distance, literally contrast, between two colors that\n * don't have a background / foreground relationship or a contrast guarantee.\n */\nexport class ToneDeltaPair {\n    /**\n     * Documents a constraint in tone distance between two DynamicColors.\n     *\n     * The polarity is an adjective that describes \"A\", compared to \"B\".\n     *\n     * For instance, ToneDeltaPair(A, B, 15, 'darker', stayTogether) states that\n     * A's tone should be at least 15 darker than B's.\n     *\n     * 'nearer' and 'farther' describes closeness to the surface roles. For\n     * instance, ToneDeltaPair(A, B, 10, 'nearer', stayTogether) states that A\n     * should be 10 lighter than B in light mode, and 10 darker than B in dark\n     * mode.\n     *\n     * @param roleA The first role in a pair.\n     * @param roleB The second role in a pair.\n     * @param delta Required difference between tones. Absolute value, negative\n     * values have undefined behavior.\n     * @param polarity The relative relation between tones of roleA and roleB,\n     * as described above.\n     * @param stayTogether Whether these two roles should stay on the same side of\n     * the \"awkward zone\" (T50-59). This is necessary for certain cases where\n     * one role has two backgrounds.\n     */\n    constructor(roleA, roleB, delta, polarity, stayTogether) {\n        this.roleA = roleA;\n        this.roleB = roleB;\n        this.delta = delta;\n        this.polarity = polarity;\n        this.stayTogether = stayTogether;\n    }\n}\n//# sourceMappingURL=tone_delta_pair.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Set of themes supported by Dynamic Color.\n * Instantiate the corresponding subclass, ex. SchemeTonalSpot, to create\n * colors corresponding to the theme.\n */\nexport var Variant;\n(function (Variant) {\n    Variant[Variant[\"MONOCHROME\"] = 0] = \"MONOCHROME\";\n    Variant[Variant[\"NEUTRAL\"] = 1] = \"NEUTRAL\";\n    Variant[Variant[\"TONAL_SPOT\"] = 2] = \"TONAL_SPOT\";\n    Variant[Variant[\"VIBRANT\"] = 3] = \"VIBRANT\";\n    Variant[Variant[\"EXPRESSIVE\"] = 4] = \"EXPRESSIVE\";\n    Variant[Variant[\"FIDELITY\"] = 5] = \"FIDELITY\";\n    Variant[Variant[\"CONTENT\"] = 6] = \"CONTENT\";\n    Variant[Variant[\"RAINBOW\"] = 7] = \"RAINBOW\";\n    Variant[Variant[\"FRUIT_SALAD\"] = 8] = \"FRUIT_SALAD\";\n})(Variant || (Variant = {}));\n//# sourceMappingURL=variant.js.map","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DislikeAnalyzer } from '../dislike/dislike_analyzer.js';\nimport { Hct } from '../hct/hct.js';\nimport { ContrastCurve } from './contrast_curve.js';\nimport { DynamicColor } from './dynamic_color.js';\nimport { ToneDeltaPair } from './tone_delta_pair.js';\nimport { Variant } from './variant.js';\nfunction isFidelity(scheme) {\n    return scheme.variant === Variant.FIDELITY ||\n        scheme.variant === Variant.CONTENT;\n}\nfunction isMonochrome(scheme) {\n    return scheme.variant === Variant.MONOCHROME;\n}\nfunction findDesiredChromaByTone(hue, chroma, tone, byDecreasingTone) {\n    let answer = tone;\n    let closestToChroma = Hct.from(hue, chroma, tone);\n    if (closestToChroma.chroma < chroma) {\n        let chromaPeak = closestToChroma.chroma;\n        while (closestToChroma.chroma < chroma) {\n            answer += byDecreasingTone ? -1.0 : 1.0;\n            const potentialSolution = Hct.from(hue, chroma, answer);\n            if (chromaPeak > potentialSolution.chroma) {\n                break;\n            }\n            if (Math.abs(potentialSolution.chroma - chroma) < 0.4) {\n                break;\n            }\n            const potentialDelta = Math.abs(potentialSolution.chroma - chroma);\n            const currentDelta = Math.abs(closestToChroma.chroma - chroma);\n            if (potentialDelta < currentDelta) {\n                closestToChroma = potentialSolution;\n            }\n            chromaPeak = Math.max(chromaPeak, potentialSolution.chroma);\n        }\n    }\n    return answer;\n}\n/**\n * DynamicColors for the colors in the Material Design system.\n */\n// Material Color Utilities namespaces the various utilities it provides.\n// tslint:disable-next-line:class-as-namespace\nexport class MaterialDynamicColors {\n    static highestSurface(s) {\n        return s.isDark ? MaterialDynamicColors.surfaceBright :\n            MaterialDynamicColors.surfaceDim;\n    }\n}\nMaterialDynamicColors.contentAccentToneDelta = 15.0;\nMaterialDynamicColors.primaryPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'primary_palette_key_color',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.primaryPalette.keyColor.tone,\n});\nMaterialDynamicColors.secondaryPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'secondary_palette_key_color',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => s.secondaryPalette.keyColor.tone,\n});\nMaterialDynamicColors.tertiaryPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'tertiary_palette_key_color',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => s.tertiaryPalette.keyColor.tone,\n});\nMaterialDynamicColors.neutralPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'neutral_palette_key_color',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.neutralPalette.keyColor.tone,\n});\nMaterialDynamicColors.neutralVariantPaletteKeyColor = DynamicColor.fromPalette({\n    name: 'neutral_variant_palette_key_color',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.neutralVariantPalette.keyColor.tone,\n});\nMaterialDynamicColors.background = DynamicColor.fromPalette({\n    name: 'background',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 98,\n    isBackground: true,\n});\nMaterialDynamicColors.onBackground = DynamicColor.fromPalette({\n    name: 'on_background',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.background,\n    contrastCurve: new ContrastCurve(3, 3, 4.5, 7),\n});\nMaterialDynamicColors.surface = DynamicColor.fromPalette({\n    name: 'surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : 98,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceDim = DynamicColor.fromPalette({\n    name: 'surface_dim',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 6 : new ContrastCurve(87, 87, 80, 75).get(s.contrastLevel),\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceBright = DynamicColor.fromPalette({\n    name: 'surface_bright',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? new ContrastCurve(24, 24, 29, 34).get(s.contrastLevel) : 98,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerLowest = DynamicColor.fromPalette({\n    name: 'surface_container_lowest',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? new ContrastCurve(4, 4, 2, 0).get(s.contrastLevel) : 100,\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerLow = DynamicColor.fromPalette({\n    name: 'surface_container_low',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ?\n        new ContrastCurve(10, 10, 11, 12).get(s.contrastLevel) :\n        new ContrastCurve(96, 96, 96, 95).get(s.contrastLevel),\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainer = DynamicColor.fromPalette({\n    name: 'surface_container',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ?\n        new ContrastCurve(12, 12, 16, 20).get(s.contrastLevel) :\n        new ContrastCurve(94, 94, 92, 90).get(s.contrastLevel),\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerHigh = DynamicColor.fromPalette({\n    name: 'surface_container_high',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ?\n        new ContrastCurve(17, 17, 21, 25).get(s.contrastLevel) :\n        new ContrastCurve(92, 92, 88, 85).get(s.contrastLevel),\n    isBackground: true,\n});\nMaterialDynamicColors.surfaceContainerHighest = DynamicColor.fromPalette({\n    name: 'surface_container_highest',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ?\n        new ContrastCurve(22, 22, 26, 30).get(s.contrastLevel) :\n        new ContrastCurve(90, 90, 84, 80).get(s.contrastLevel),\n    isBackground: true,\n});\nMaterialDynamicColors.onSurface = DynamicColor.fromPalette({\n    name: 'on_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 10,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.surfaceVariant = DynamicColor.fromPalette({\n    name: 'surface_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 30 : 90,\n    isBackground: true,\n});\nMaterialDynamicColors.onSurfaceVariant = DynamicColor.fromPalette({\n    name: 'on_surface_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 80 : 30,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.inverseSurface = DynamicColor.fromPalette({\n    name: 'inverse_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 90 : 20,\n});\nMaterialDynamicColors.inverseOnSurface = DynamicColor.fromPalette({\n    name: 'inverse_on_surface',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => s.isDark ? 20 : 95,\n    background: (s) => MaterialDynamicColors.inverseSurface,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.outline = DynamicColor.fromPalette({\n    name: 'outline',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 60 : 50,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1.5, 3, 4.5, 7),\n});\nMaterialDynamicColors.outlineVariant = DynamicColor.fromPalette({\n    name: 'outline_variant',\n    palette: (s) => s.neutralVariantPalette,\n    tone: (s) => s.isDark ? 30 : 80,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n});\nMaterialDynamicColors.shadow = DynamicColor.fromPalette({\n    name: 'shadow',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => 0,\n});\nMaterialDynamicColors.scrim = DynamicColor.fromPalette({\n    name: 'scrim',\n    palette: (s) => s.neutralPalette,\n    tone: (s) => 0,\n});\nMaterialDynamicColors.surfaceTint = DynamicColor.fromPalette({\n    name: 'surface_tint',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n});\nMaterialDynamicColors.primary = DynamicColor.fromPalette({\n    name: 'primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 100 : 0;\n        }\n        return s.isDark ? 80 : 40;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary, 10, 'nearer', false),\n});\nMaterialDynamicColors.onPrimary = DynamicColor.fromPalette({\n    name: 'on_primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 10 : 90;\n        }\n        return s.isDark ? 20 : 100;\n    },\n    background: (s) => MaterialDynamicColors.primary,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.primaryContainer = DynamicColor.fromPalette({\n    name: 'primary_container',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isFidelity(s)) {\n            return s.sourceColorHct.tone;\n        }\n        if (isMonochrome(s)) {\n            return s.isDark ? 85 : 25;\n        }\n        return s.isDark ? 30 : 90;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.primaryContainer, MaterialDynamicColors.primary, 10, 'nearer', false),\n});\nMaterialDynamicColors.onPrimaryContainer = DynamicColor.fromPalette({\n    name: 'on_primary_container',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => {\n        if (isFidelity(s)) {\n            return DynamicColor.foregroundTone(MaterialDynamicColors.primaryContainer.tone(s), 4.5);\n        }\n        if (isMonochrome(s)) {\n            return s.isDark ? 0 : 100;\n        }\n        return s.isDark ? 90 : 30;\n    },\n    background: (s) => MaterialDynamicColors.primaryContainer,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.inversePrimary = DynamicColor.fromPalette({\n    name: 'inverse_primary',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => s.isDark ? 40 : 80,\n    background: (s) => MaterialDynamicColors.inverseSurface,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 7),\n});\nMaterialDynamicColors.secondary = DynamicColor.fromPalette({\n    name: 'secondary',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.secondaryContainer, MaterialDynamicColors.secondary, 10, 'nearer', false),\n});\nMaterialDynamicColors.onSecondary = DynamicColor.fromPalette({\n    name: 'on_secondary',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 10 : 100;\n        }\n        else {\n            return s.isDark ? 20 : 100;\n        }\n    },\n    background: (s) => MaterialDynamicColors.secondary,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.secondaryContainer = DynamicColor.fromPalette({\n    name: 'secondary_container',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => {\n        const initialTone = s.isDark ? 30 : 90;\n        if (isMonochrome(s)) {\n            return s.isDark ? 30 : 85;\n        }\n        if (!isFidelity(s)) {\n            return initialTone;\n        }\n        return findDesiredChromaByTone(s.secondaryPalette.hue, s.secondaryPalette.chroma, initialTone, s.isDark ? false : true);\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.secondaryContainer, MaterialDynamicColors.secondary, 10, 'nearer', false),\n});\nMaterialDynamicColors.onSecondaryContainer = DynamicColor.fromPalette({\n    name: 'on_secondary_container',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 90 : 10;\n        }\n        if (!isFidelity(s)) {\n            return s.isDark ? 90 : 30;\n        }\n        return DynamicColor.foregroundTone(MaterialDynamicColors.secondaryContainer.tone(s), 4.5);\n    },\n    background: (s) => MaterialDynamicColors.secondaryContainer,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.tertiary = DynamicColor.fromPalette({\n    name: 'tertiary',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 90 : 25;\n        }\n        return s.isDark ? 80 : 40;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary, 10, 'nearer', false),\n});\nMaterialDynamicColors.onTertiary = DynamicColor.fromPalette({\n    name: 'on_tertiary',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 10 : 90;\n        }\n        return s.isDark ? 20 : 100;\n    },\n    background: (s) => MaterialDynamicColors.tertiary,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.tertiaryContainer = DynamicColor.fromPalette({\n    name: 'tertiary_container',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 60 : 49;\n        }\n        if (!isFidelity(s)) {\n            return s.isDark ? 30 : 90;\n        }\n        const proposedHct = s.tertiaryPalette.getHct(s.sourceColorHct.tone);\n        return DislikeAnalyzer.fixIfDisliked(proposedHct).tone;\n    },\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.tertiaryContainer, MaterialDynamicColors.tertiary, 10, 'nearer', false),\n});\nMaterialDynamicColors.onTertiaryContainer = DynamicColor.fromPalette({\n    name: 'on_tertiary_container',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 0 : 100;\n        }\n        if (!isFidelity(s)) {\n            return s.isDark ? 90 : 30;\n        }\n        return DynamicColor.foregroundTone(MaterialDynamicColors.tertiaryContainer.tone(s), 4.5);\n    },\n    background: (s) => MaterialDynamicColors.tertiaryContainer,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.error = DynamicColor.fromPalette({\n    name: 'error',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 80 : 40,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 7),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 10, 'nearer', false),\n});\nMaterialDynamicColors.onError = DynamicColor.fromPalette({\n    name: 'on_error',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 20 : 100,\n    background: (s) => MaterialDynamicColors.error,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.errorContainer = DynamicColor.fromPalette({\n    name: 'error_container',\n    palette: (s) => s.errorPalette,\n    tone: (s) => s.isDark ? 30 : 90,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.errorContainer, MaterialDynamicColors.error, 10, 'nearer', false),\n});\nMaterialDynamicColors.onErrorContainer = DynamicColor.fromPalette({\n    name: 'on_error_container',\n    palette: (s) => s.errorPalette,\n    tone: (s) => {\n        if (isMonochrome(s)) {\n            return s.isDark ? 90 : 10;\n        }\n        return s.isDark ? 90 : 30;\n    },\n    background: (s) => MaterialDynamicColors.errorContainer,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.primaryFixed = DynamicColor.fromPalette({\n    name: 'primary_fixed',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 40.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.primaryFixed, MaterialDynamicColors.primaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.primaryFixedDim = DynamicColor.fromPalette({\n    name: 'primary_fixed_dim',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 30.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.primaryFixed, MaterialDynamicColors.primaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.onPrimaryFixed = DynamicColor.fromPalette({\n    name: 'on_primary_fixed',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 100.0 : 10.0,\n    background: (s) => MaterialDynamicColors.primaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.primaryFixed,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.onPrimaryFixedVariant = DynamicColor.fromPalette({\n    name: 'on_primary_fixed_variant',\n    palette: (s) => s.primaryPalette,\n    tone: (s) => isMonochrome(s) ? 90.0 : 30.0,\n    background: (s) => MaterialDynamicColors.primaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.primaryFixed,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.secondaryFixed = DynamicColor.fromPalette({\n    name: 'secondary_fixed',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 80.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.secondaryFixed, MaterialDynamicColors.secondaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.secondaryFixedDim = DynamicColor.fromPalette({\n    name: 'secondary_fixed_dim',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 70.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.secondaryFixed, MaterialDynamicColors.secondaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.onSecondaryFixed = DynamicColor.fromPalette({\n    name: 'on_secondary_fixed',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => 10.0,\n    background: (s) => MaterialDynamicColors.secondaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.secondaryFixed,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.onSecondaryFixedVariant = DynamicColor.fromPalette({\n    name: 'on_secondary_fixed_variant',\n    palette: (s) => s.secondaryPalette,\n    tone: (s) => isMonochrome(s) ? 25.0 : 30.0,\n    background: (s) => MaterialDynamicColors.secondaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.secondaryFixed,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\nMaterialDynamicColors.tertiaryFixed = DynamicColor.fromPalette({\n    name: 'tertiary_fixed',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 40.0 : 90.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.tertiaryFixed, MaterialDynamicColors.tertiaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.tertiaryFixedDim = DynamicColor.fromPalette({\n    name: 'tertiary_fixed_dim',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 30.0 : 80.0,\n    isBackground: true,\n    background: (s) => MaterialDynamicColors.highestSurface(s),\n    contrastCurve: new ContrastCurve(1, 1, 3, 4.5),\n    toneDeltaPair: (s) => new ToneDeltaPair(MaterialDynamicColors.tertiaryFixed, MaterialDynamicColors.tertiaryFixedDim, 10, 'lighter', true),\n});\nMaterialDynamicColors.onTertiaryFixed = DynamicColor.fromPalette({\n    name: 'on_tertiary_fixed',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 100.0 : 10.0,\n    background: (s) => MaterialDynamicColors.tertiaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.tertiaryFixed,\n    contrastCurve: new ContrastCurve(4.5, 7, 11, 21),\n});\nMaterialDynamicColors.onTertiaryFixedVariant = DynamicColor.fromPalette({\n    name: 'on_tertiary_fixed_variant',\n    palette: (s) => s.tertiaryPalette,\n    tone: (s) => isMonochrome(s) ? 90.0 : 30.0,\n    background: (s) => MaterialDynamicColors.tertiaryFixedDim,\n    secondBackground: (s) => MaterialDynamicColors.tertiaryFixed,\n    contrastCurve: new ContrastCurve(3, 4.5, 7, 11),\n});\n//# sourceMappingURL=material_dynamic_colors.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Hct } from '../hct/hct.js';\nimport { TonalPalette } from './tonal_palette.js';\n/**\n * An intermediate concept between the key color for a UI theme, and a full\n * color scheme. 5 sets of tones are generated, all except one use the same hue\n * as the key color, and all vary in chroma.\n */\nexport class CorePalette {\n    /**\n     * @param argb ARGB representation of a color\n     */\n    static of(argb) {\n        return new CorePalette(argb, false);\n    }\n    /**\n     * @param argb ARGB representation of a color\n     */\n    static contentOf(argb) {\n        return new CorePalette(argb, true);\n    }\n    /**\n     * Create a [CorePalette] from a set of colors\n     */\n    static fromColors(colors) {\n        return CorePalette.createPaletteFromColors(false, colors);\n    }\n    /**\n     * Create a content [CorePalette] from a set of colors\n     */\n    static contentFromColors(colors) {\n        return CorePalette.createPaletteFromColors(true, colors);\n    }\n    static createPaletteFromColors(content, colors) {\n        const palette = new CorePalette(colors.primary, content);\n        if (colors.secondary) {\n            const p = new CorePalette(colors.secondary, content);\n            palette.a2 = p.a1;\n        }\n        if (colors.tertiary) {\n            const p = new CorePalette(colors.tertiary, content);\n            palette.a3 = p.a1;\n        }\n        if (colors.error) {\n            const p = new CorePalette(colors.error, content);\n            palette.error = p.a1;\n        }\n        if (colors.neutral) {\n            const p = new CorePalette(colors.neutral, content);\n            palette.n1 = p.n1;\n        }\n        if (colors.neutralVariant) {\n            const p = new CorePalette(colors.neutralVariant, content);\n            palette.n2 = p.n2;\n        }\n        return palette;\n    }\n    constructor(argb, isContent) {\n        const hct = Hct.fromInt(argb);\n        const hue = hct.hue;\n        const chroma = hct.chroma;\n        if (isContent) {\n            this.a1 = TonalPalette.fromHueAndChroma(hue, chroma);\n            this.a2 = TonalPalette.fromHueAndChroma(hue, chroma / 3);\n            this.a3 = TonalPalette.fromHueAndChroma(hue + 60, chroma / 2);\n            this.n1 = TonalPalette.fromHueAndChroma(hue, Math.min(chroma / 12, 4));\n            this.n2 = TonalPalette.fromHueAndChroma(hue, Math.min(chroma / 6, 8));\n        }\n        else {\n            this.a1 = TonalPalette.fromHueAndChroma(hue, Math.max(48, chroma));\n            this.a2 = TonalPalette.fromHueAndChroma(hue, 16);\n            this.a3 = TonalPalette.fromHueAndChroma(hue + 60, 24);\n            this.n1 = TonalPalette.fromHueAndChroma(hue, 4);\n            this.n2 = TonalPalette.fromHueAndChroma(hue, 8);\n        }\n        this.error = TonalPalette.fromHueAndChroma(25, 84);\n    }\n}\n//# sourceMappingURL=core_palette.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// This file is automatically generated. Do not modify it.\nimport { CorePalette } from '../palettes/core_palette.js';\n/**\n * DEPRECATED. The `Scheme` class is deprecated in favor of `DynamicScheme`.\n * Please see\n * https://github.com/material-foundation/material-color-utilities/blob/main/make_schemes.md\n * for migration guidance.\n *\n * Represents a Material color scheme, a mapping of color roles to colors.\n */\nexport class Scheme {\n    get primary() {\n        return this.props.primary;\n    }\n    get onPrimary() {\n        return this.props.onPrimary;\n    }\n    get primaryContainer() {\n        return this.props.primaryContainer;\n    }\n    get onPrimaryContainer() {\n        return this.props.onPrimaryContainer;\n    }\n    get secondary() {\n        return this.props.secondary;\n    }\n    get onSecondary() {\n        return this.props.onSecondary;\n    }\n    get secondaryContainer() {\n        return this.props.secondaryContainer;\n    }\n    get onSecondaryContainer() {\n        return this.props.onSecondaryContainer;\n    }\n    get tertiary() {\n        return this.props.tertiary;\n    }\n    get onTertiary() {\n        return this.props.onTertiary;\n    }\n    get tertiaryContainer() {\n        return this.props.tertiaryContainer;\n    }\n    get onTertiaryContainer() {\n        return this.props.onTertiaryContainer;\n    }\n    get error() {\n        return this.props.error;\n    }\n    get onError() {\n        return this.props.onError;\n    }\n    get errorContainer() {\n        return this.props.errorContainer;\n    }\n    get onErrorContainer() {\n        return this.props.onErrorContainer;\n    }\n    get background() {\n        return this.props.background;\n    }\n    get onBackground() {\n        return this.props.onBackground;\n    }\n    get surface() {\n        return this.props.surface;\n    }\n    get onSurface() {\n        return this.props.onSurface;\n    }\n    get surfaceVariant() {\n        return this.props.surfaceVariant;\n    }\n    get onSurfaceVariant() {\n        return this.props.onSurfaceVariant;\n    }\n    get outline() {\n        return this.props.outline;\n    }\n    get outlineVariant() {\n        return this.props.outlineVariant;\n    }\n    get shadow() {\n        return this.props.shadow;\n    }\n    get scrim() {\n        return this.props.scrim;\n    }\n    get inverseSurface() {\n        return this.props.inverseSurface;\n    }\n    get inverseOnSurface() {\n        return this.props.inverseOnSurface;\n    }\n    get inversePrimary() {\n        return this.props.inversePrimary;\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material color scheme, based on the color's hue.\n     */\n    static light(argb) {\n        return Scheme.lightFromCorePalette(CorePalette.of(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material color scheme, based on the color's hue.\n     */\n    static dark(argb) {\n        return Scheme.darkFromCorePalette(CorePalette.of(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Light Material content color scheme, based on the color's hue.\n     */\n    static lightContent(argb) {\n        return Scheme.lightFromCorePalette(CorePalette.contentOf(argb));\n    }\n    /**\n     * @param argb ARGB representation of a color.\n     * @return Dark Material content color scheme, based on the color's hue.\n     */\n    static darkContent(argb) {\n        return Scheme.darkFromCorePalette(CorePalette.contentOf(argb));\n    }\n    /**\n     * Light scheme from core palette\n     */\n    static lightFromCorePalette(core) {\n        return new Scheme({\n            primary: core.a1.tone(40),\n            onPrimary: core.a1.tone(100),\n            primaryContainer: core.a1.tone(90),\n            onPrimaryContainer: core.a1.tone(10),\n            secondary: core.a2.tone(40),\n            onSecondary: core.a2.tone(100),\n            secondaryContainer: core.a2.tone(90),\n            onSecondaryContainer: core.a2.tone(10),\n            tertiary: core.a3.tone(40),\n            onTertiary: core.a3.tone(100),\n            tertiaryContainer: core.a3.tone(90),\n            onTertiaryContainer: core.a3.tone(10),\n            error: core.error.tone(40),\n            onError: core.error.tone(100),\n            errorContainer: core.error.tone(90),\n            onErrorContainer: core.error.tone(10),\n            background: core.n1.tone(99),\n            onBackground: core.n1.tone(10),\n            surface: core.n1.tone(99),\n            onSurface: core.n1.tone(10),\n            surfaceVariant: core.n2.tone(90),\n            onSurfaceVariant: core.n2.tone(30),\n            outline: core.n2.tone(50),\n            outlineVariant: core.n2.tone(80),\n            shadow: core.n1.tone(0),\n            scrim: core.n1.tone(0),\n            inverseSurface: core.n1.tone(20),\n            inverseOnSurface: core.n1.tone(95),\n            inversePrimary: core.a1.tone(80)\n        });\n    }\n    /**\n     * Dark scheme from core palette\n     */\n    static darkFromCorePalette(core) {\n        return new Scheme({\n            primary: core.a1.tone(80),\n            onPrimary: core.a1.tone(20),\n            primaryContainer: core.a1.tone(30),\n            onPrimaryContainer: core.a1.tone(90),\n            secondary: core.a2.tone(80),\n            onSecondary: core.a2.tone(20),\n            secondaryContainer: core.a2.tone(30),\n            onSecondaryContainer: core.a2.tone(90),\n            tertiary: core.a3.tone(80),\n            onTertiary: core.a3.tone(20),\n            tertiaryContainer: core.a3.tone(30),\n            onTertiaryContainer: core.a3.tone(90),\n            error: core.error.tone(80),\n            onError: core.error.tone(20),\n            errorContainer: core.error.tone(30),\n            onErrorContainer: core.error.tone(80),\n            background: core.n1.tone(10),\n            onBackground: core.n1.tone(90),\n            surface: core.n1.tone(10),\n            onSurface: core.n1.tone(90),\n            surfaceVariant: core.n2.tone(30),\n            onSurfaceVariant: core.n2.tone(80),\n            outline: core.n2.tone(60),\n            outlineVariant: core.n2.tone(30),\n            shadow: core.n1.tone(0),\n            scrim: core.n1.tone(0),\n            inverseSurface: core.n1.tone(90),\n            inverseOnSurface: core.n1.tone(20),\n            inversePrimary: core.a1.tone(40)\n        });\n    }\n    constructor(props) {\n        this.props = props;\n    }\n    toJSON() {\n        return {\n            ...this.props\n        };\n    }\n}\n//# sourceMappingURL=scheme.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as colorUtils from './color_utils.js';\n/**\n * Utility methods for hexadecimal representations of colors.\n */\n/**\n * @param argb ARGB representation of a color.\n * @return Hex string representing color, ex. #ff0000 for red.\n */\nexport function hexFromArgb(argb) {\n    const r = colorUtils.redFromArgb(argb);\n    const g = colorUtils.greenFromArgb(argb);\n    const b = colorUtils.blueFromArgb(argb);\n    const outParts = [r.toString(16), g.toString(16), b.toString(16)];\n    // Pad single-digit output values\n    for (const [i, part] of outParts.entries()) {\n        if (part.length === 1) {\n            outParts[i] = '0' + part;\n        }\n    }\n    return '#' + outParts.join('');\n}\n/**\n * @param hex String representing color as hex code. Accepts strings with or\n *     without leading #, and string representing the color using 3, 6, or 8\n *     hex characters.\n * @return ARGB representation of color.\n */\nexport function argbFromHex(hex) {\n    hex = hex.replace('#', '');\n    const isThree = hex.length === 3;\n    const isSix = hex.length === 6;\n    const isEight = hex.length === 8;\n    if (!isThree && !isSix && !isEight) {\n        throw new Error('unexpected hex ' + hex);\n    }\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    if (isThree) {\n        r = parseIntHex(hex.slice(0, 1).repeat(2));\n        g = parseIntHex(hex.slice(1, 2).repeat(2));\n        b = parseIntHex(hex.slice(2, 3).repeat(2));\n    }\n    else if (isSix) {\n        r = parseIntHex(hex.slice(0, 2));\n        g = parseIntHex(hex.slice(2, 4));\n        b = parseIntHex(hex.slice(4, 6));\n    }\n    else if (isEight) {\n        r = parseIntHex(hex.slice(2, 4));\n        g = parseIntHex(hex.slice(4, 6));\n        b = parseIntHex(hex.slice(6, 8));\n    }\n    return (((255 << 24) | ((r & 0x0ff) << 16) | ((g & 0x0ff) << 8) | (b & 0x0ff)) >>>\n        0);\n}\nfunction parseIntHex(value) {\n    // tslint:disable-next-line:ban\n    return parseInt(value, 16);\n}\n//# sourceMappingURL=string_utils.js.map","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Blend } from '../blend/blend.js';\nimport { CorePalette } from '../palettes/core_palette.js';\nimport { Scheme } from '../scheme/scheme.js';\nimport { sourceColorFromImage } from './image_utils.js';\nimport { hexFromArgb } from './string_utils.js';\n/**\n * Generate a theme from a source color\n *\n * @param source Source color\n * @param customColors Array of custom colors\n * @return Theme object\n */\nexport function themeFromSourceColor(source, customColors = []) {\n    const palette = CorePalette.of(source);\n    return {\n        source,\n        schemes: {\n            light: Scheme.light(source),\n            dark: Scheme.dark(source),\n        },\n        palettes: {\n            primary: palette.a1,\n            secondary: palette.a2,\n            tertiary: palette.a3,\n            neutral: palette.n1,\n            neutralVariant: palette.n2,\n            error: palette.error,\n        },\n        customColors: customColors.map((c) => customColor(source, c)),\n    };\n}\n/**\n * Generate a theme from an image source\n *\n * @param image Image element\n * @param customColors Array of custom colors\n * @return Theme object\n */\nexport async function themeFromImage(image, customColors = []) {\n    const source = await sourceColorFromImage(image);\n    return themeFromSourceColor(source, customColors);\n}\n/**\n * Generate custom color group from source and target color\n *\n * @param source Source color\n * @param color Custom color\n * @return Custom color group\n *\n * @link https://m3.material.io/styles/color/the-color-system/color-roles\n */\nexport function customColor(source, color) {\n    let value = color.value;\n    const from = value;\n    const to = source;\n    if (color.blend) {\n        value = Blend.harmonize(from, to);\n    }\n    const palette = CorePalette.of(value);\n    const tones = palette.a1;\n    return {\n        color,\n        value,\n        light: {\n            color: tones.tone(40),\n            onColor: tones.tone(100),\n            colorContainer: tones.tone(90),\n            onColorContainer: tones.tone(10),\n        },\n        dark: {\n            color: tones.tone(80),\n            onColor: tones.tone(20),\n            colorContainer: tones.tone(30),\n            onColorContainer: tones.tone(90),\n        },\n    };\n}\n/**\n * Apply a theme to an element\n *\n * @param theme Theme object\n * @param options Options\n */\nexport function applyTheme(theme, options) {\n    const target = options?.target || document.body;\n    const isDark = options?.dark ?? false;\n    const scheme = isDark ? theme.schemes.dark : theme.schemes.light;\n    setSchemeProperties(target, scheme);\n    if (options?.brightnessSuffix) {\n        setSchemeProperties(target, theme.schemes.dark, '-dark');\n        setSchemeProperties(target, theme.schemes.light, '-light');\n    }\n    if (options?.paletteTones) {\n        const tones = options?.paletteTones ?? [];\n        for (const [key, palette] of Object.entries(theme.palettes)) {\n            const paletteKey = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n            for (const tone of tones) {\n                const token = `--md-ref-palette-${paletteKey}-${paletteKey}${tone}`;\n                const color = hexFromArgb(palette.tone(tone));\n                target.style.setProperty(token, color);\n            }\n        }\n    }\n}\nfunction setSchemeProperties(target, scheme, suffix = '') {\n    for (const [key, value] of Object.entries(scheme.toJSON())) {\n        const token = key.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n        const color = hexFromArgb(value);\n        target.style.setProperty(`--md-sys-color-${token}${suffix}`, color);\n    }\n}\n//# sourceMappingURL=theme_utils.js.map","import type { CharaLayoutFile } from \"$lib/share/chara-file\";\n\n/**\n * Converts a legacy CSV-based layout to the modern JSON-based format\n */\nexport function csvLayoutToJson(\n  csv: string,\n  device: CharaLayoutFile[\"device\"] = \"one\",\n): CharaLayoutFile {\n  const layout: CharaLayoutFile = {\n    charaVersion: 1,\n    type: \"layout\",\n    device,\n    layout: [[], [], []],\n  };\n\n  for (const layer of csv.trim().split(\"\\n\")) {\n    const [layerId, key, action] = layer.substring(1).split(\",\").map(Number);\n\n    layout.layout[Number(layerId) - 1]![Number(key)] = Number(action);\n  }\n\n  return layout;\n}\n\nexport function isCsvLayout(csv: string): boolean {\n  return /^(A[123],\\d+,\\d+\\n?)+$/.test(csv);\n}\n","import { KEYMAP_IDS } from \"$lib/serial/keymap-codes\";\nimport type { CharaChordFile } from \"$lib/share/chara-file\";\n\nconst SPECIAL_KEYS = new Map<string, string>([[\" \", \"SPACE\"]]);\n\nexport function csvChordsToJson(csv: string): CharaChordFile {\n  return {\n    charaVersion: 1,\n    type: \"chords\",\n    chords: csv\n      .trim()\n      .split(\"\\n\")\n      .map((line) => {\n        const [input, output] = line.split(/,(?=[^,]*$)/, 2);\n        return [\n          input!\n            .split(\"+\")\n            .map((it) => KEYMAP_IDS.get(it.trim())?.code ?? 0)\n            .sort((a, b) => a - b),\n          output!\n            .trim()\n            .split(\"\")\n            .map((it) => KEYMAP_IDS.get(SPECIAL_KEYS.get(it) ?? it)?.code ?? 0),\n        ];\n      }),\n  };\n}\n\nexport function isCsvChords(csv: string): boolean {\n  return /^([^+]+( *\\+ *[^+]+)* *, *[^+, ]+ *(\\n|(?=$)))+$/.test(csv);\n}\n","import type {\n  CharaBackupFile,\n  CharaChordFile,\n  CharaFile,\n  CharaLayoutFile,\n  CharaSettingsFile,\n} from \"$lib/share/chara-file.js\";\nimport type { Change } from \"$lib/undo-redo.js\";\nimport {\n  changes,\n  ChangeType,\n  chords,\n  layout,\n  settings,\n} from \"$lib/undo-redo.js\";\nimport { get } from \"svelte/store\";\nimport { serialPort } from \"../serial/connection\";\nimport { csvLayoutToJson, isCsvLayout } from \"$lib/backup/compat/legacy-layout\";\nimport { isCsvChords, csvChordsToJson } from \"./compat/legacy-chords\";\n\nexport function downloadFile<T extends CharaFile<string>>(contents: T) {\n  const downloadUrl = URL.createObjectURL(\n    new Blob([JSON.stringify(contents)], { type: \"application/json\" }),\n  );\n  const element = document.createElement(\"a\");\n  element.setAttribute(\n    \"download\",\n    `${contents.type}-${\n      get(serialPort)?.device\n    }-${new Date().toISOString()}.json`,\n  );\n  element.href = downloadUrl;\n  element.setAttribute(\"target\", \"_blank\");\n  element.click();\n  URL.revokeObjectURL(downloadUrl);\n}\n\nexport function downloadBackup() {\n  downloadFile<CharaBackupFile>({\n    charaVersion: 1,\n    type: \"backup\",\n    history: [\n      [createChordBackup(), createLayoutBackup(), createSettingsBackup()],\n    ],\n  });\n}\n\nexport function createLayoutBackup(): CharaLayoutFile {\n  return {\n    charaVersion: 1,\n    type: \"layout\",\n    device: get(serialPort)?.device,\n    layout: get(layout).map((it) => it.map((it) => it.action)) as [\n      number[],\n      number[],\n      number[],\n    ],\n  };\n}\n\nexport function createChordBackup(): CharaChordFile {\n  return {\n    charaVersion: 1,\n    type: \"chords\",\n    chords: get(chords).map((it) => [it.actions, it.phrase]),\n  };\n}\n\nexport function createSettingsBackup(): CharaSettingsFile {\n  return {\n    charaVersion: 1,\n    type: \"settings\",\n    settings: get(settings).map((it) => it.value),\n  };\n}\n\nexport async function restoreBackup(event: Event) {\n  const input = (event.target as HTMLInputElement).files![0];\n  if (!input) return;\n  const text = await input.text();\n  if (input.name.endsWith(\".json\")) {\n    restoreFromFile(JSON.parse(text));\n  } else if (isCsvLayout(text)) {\n    restoreFromFile(csvLayoutToJson(text));\n  } else if (isCsvChords(text)) {\n    restoreFromFile(csvChordsToJson(text));\n  } else {\n  }\n}\n\nexport function restoreFromFile(\n  file: CharaBackupFile | CharaSettingsFile | CharaLayoutFile | CharaChordFile,\n) {\n  if (file.charaVersion !== 1) throw new Error(\"Incompatible backup\");\n  switch (file.type) {\n    case \"backup\": {\n      const recent = file.history[0];\n      if (!recent) return;\n      let backupDevice = recent[1].device;\n      if (backupDevice === \"TWO\") backupDevice = \"ONE\";\n      let currentDevice = get(serialPort)?.device;\n      if (currentDevice === \"TWO\") currentDevice = \"ONE\";\n\n      if (backupDevice !== currentDevice) {\n        alert(\"Backup is incompatible with this device\");\n        throw new Error(\"Backup is incompatible with this device\");\n      }\n\n      changes.update((changes) => {\n        changes.push(\n          ...getChangesFromChordFile(recent[0]),\n          ...getChangesFromLayoutFile(recent[1]),\n          ...getChangesFromSettingsFile(recent[2]),\n        );\n        return changes;\n      });\n      break;\n    }\n    case \"chords\": {\n      changes.update((changes) => {\n        changes.push(...getChangesFromChordFile(file));\n        return changes;\n      });\n      break;\n    }\n    case \"layout\": {\n      changes.update((changes) => {\n        changes.push(...getChangesFromLayoutFile(file));\n        return changes;\n      });\n      break;\n    }\n    case \"settings\": {\n      changes.update((changes) => {\n        changes.push(...getChangesFromSettingsFile(file));\n        return changes;\n      });\n      break;\n    }\n    default: {\n      throw new Error(\n        `Unknown backup type \"${(file as CharaFile<string>).type}\"`,\n      );\n    }\n  }\n}\n\nexport function getChangesFromChordFile(file: CharaChordFile) {\n  const changes: Change[] = [];\n  const existingChords = new Set(\n    get(chords).map(({ phrase, actions }) => JSON.stringify([actions, phrase])),\n  );\n  for (const [input, output] of file.chords) {\n    if (existingChords.has(JSON.stringify([input, output]))) {\n      continue;\n    }\n    changes.push({\n      type: ChangeType.Chord,\n      actions: input,\n      phrase: output,\n      id: input,\n    });\n  }\n  return changes;\n}\n\nexport function getChangesFromSettingsFile(file: CharaSettingsFile) {\n  const changes: Change[] = [];\n  for (const [id, value] of file.settings.entries()) {\n    const setting = get(settings)[id];\n    if (setting !== undefined && setting.value !== value) {\n      changes.push({\n        type: ChangeType.Setting,\n        id,\n        setting: value,\n      });\n    }\n  }\n  return changes;\n}\n\nexport function getChangesFromLayoutFile(file: CharaLayoutFile) {\n  const changes: Change[] = [];\n  for (const [layer, keys] of file.layout.entries()) {\n    for (const [id, action] of keys.entries()) {\n      if (get(layout)[layer]?.[id]?.action !== action) {\n        changes.push({\n          type: ChangeType.Layout,\n          layer,\n          id,\n          action,\n        });\n      }\n    }\n  }\n  return changes;\n}\n","<script lang=\"ts\">\n  import { preference } from \"$lib/preferences\";\n  import LL from \"$i18n/i18n-svelte\";\n  import {\n    createChordBackup,\n    createLayoutBackup,\n    createSettingsBackup,\n    downloadBackup,\n    downloadFile,\n    restoreBackup,\n  } from \"$lib/backup/backup\";\n</script>\n\n<section>\n  <h2>\n    <label\n      ><input\n        type=\"checkbox\"\n        use:preference={\"backup\"}\n      />{$LL.backup.TITLE()}</label\n    >\n  </h2>\n  <p class=\"disclaimer\">\n    <i>{$LL.backup.DISCLAIMER()}</i>\n  </p>\n  <fieldset>\n    <legend>{$LL.backup.INDIVIDUAL()}</legend>\n    <button on:click={() => downloadFile(createChordBackup())}>\n      <span class=\"icon\">piano</span>\n      {$LL.configure.chords.TITLE()}\n    </button>\n    <button on:click={() => downloadFile(createLayoutBackup())}>\n      <span class=\"icon\">keyboard</span>\n      {$LL.configure.layout.TITLE()}\n    </button>\n    <button on:click={() => downloadFile(createSettingsBackup())}>\n      <span class=\"icon\">settings</span>\n      {$LL.configure.settings.TITLE()}\n    </button>\n  </fieldset>\n  <div class=\"save\">\n    <button class=\"primary\" on:click={downloadBackup}\n      ><span class=\"icon\">download</span>{$LL.backup.DOWNLOAD()}</button\n    >\n    <label class=\"button\"\n      ><input on:input={restoreBackup} type=\"file\" /><span class=\"icon\"\n        >settings_backup_restore</span\n      >{$LL.backup.RESTORE()}</label\n    >\n  </div>\n</section>\n\n<style lang=\"scss\">\n  h2 {\n    margin-block-end: 0;\n\n    > label {\n      gap: 10px;\n      font-size: 24px;\n\n      > input {\n        font-size: 12px;\n      }\n    }\n  }\n\n  fieldset {\n    display: flex;\n    margin-block: 16px;\n    border: 1px solid currentcolor;\n    border-radius: 16px;\n  }\n\n  section {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n\n    width: min-content;\n  }\n\n  .disclaimer {\n    max-width: 16cm;\n    font-size: 12px;\n    opacity: 0.7;\n  }\n\n  input[type=\"file\"] {\n    display: none;\n  }\n\n  .save {\n    display: flex;\n    gap: 4px;\n  }\n</style>\n","<script lang=\"ts\">\n  import { initSerial, serialPort } from \"$lib/serial/connection\";\n  import { browser } from \"$app/environment\";\n  import { slide, fade } from \"svelte/transition\";\n  import { preference } from \"$lib/preferences\";\n  import LL from \"$i18n/i18n-svelte\";\n  import { downloadBackup } from \"$lib/backup/backup\";\n\n  function reboot() {\n    $serialPort?.reboot();\n    $serialPort = undefined;\n    powerDialog = false;\n    setTimeout(() => {\n      initSerial();\n    }, 1000);\n  }\n\n  function bootloader() {\n    downloadBackup();\n    $serialPort?.bootloader();\n    $serialPort = undefined;\n    rebootInfo = true;\n    powerDialog = false;\n  }\n\n  async function connect() {\n    try {\n      await initSerial(true);\n    } catch (error) {\n      console.error(error);\n      alert(\n        \"Connection failed. Is your device maybe pre-CCOS? Refer to the doc link in the bottom left for more information on your device.\",\n      );\n    }\n  }\n\n  let rebootInfo = false;\n  let terminal = false;\n  let powerDialog = false;\n\n  $: if ($serialPort) {\n    rebootInfo = false;\n  }\n</script>\n\n<section>\n  <div class=\"row\">\n    <h2>{$LL.deviceManager.TITLE()}</h2>\n    <label\n      >{$LL.deviceManager.AUTO_CONNECT()}<input\n        type=\"checkbox\"\n        use:preference={\"autoConnect\"}\n      /></label\n    >\n  </div>\n\n  {#if $serialPort}\n    <p transition:slide>\n      {$serialPort.company}\n      {$serialPort.device}\n      {$serialPort.chipset}\n      <br />\n      Version {$serialPort.version}\n    </p>\n    {#if $serialPort.version.toString() !== import.meta.env.VITE_LATEST_FIRMWARE}\n      <a\n        href=\"https://docs.charachorder.com/CharaChorder%20One.html#updating-the-firmware\"\n        >Firmware Update Instructions</a\n      >\n    {/if}\n    <!--<button on:click={updateFirmware}>Update</button>-->\n  {/if}\n\n  {#if browser}\n    {#if navigator.userAgent.includes(\"Linux\") && !$serialPort}\n      <div class=\"linux-info\">\n        <p>{@html $LL.deviceManager.LINUX_PERMISSIONS()}</p>\n        <p>\n          In most cases you can simply follow the <a\n            target=\"_blank\"\n            href=\"https://docs.arduino.cc/software/ide-v1/tutorials/Linux#please-read\"\n            >Arduino Guide</a\n          > on serial port permissions.\n        </p>\n        <p>Special systems:</p>\n        <ul>\n          <li>\n            <a\n              target=\"_blank\"\n              href=\"https://wiki.archlinux.org/title/Arduino#Accessing_serial\"\n              >Arch and Arch-based like Manjaro or EndeavourOS</a\n            >\n          </li>\n          <li>\n            <a\n              target=\"_blank\"\n              href=\"https://gist.github.com/CMCDragonkai/d00201ec143c9f749fc49533034e5009?permalink_comment_id=4670311#gistcomment-4670311\"\n              >NixOS</a\n            >\n          </li>\n          <li>\n            <a\n              target=\"_blank\"\n              href=\"https://wiki.gentoo.org/wiki/Arduino#Grant_access_to_non-root_users\"\n              >Gentoo</a\n            >\n          </li>\n        </ul>\n      </div>\n    {/if}\n    {#if rebootInfo}\n      <p transition:slide>\n        <b>{$LL.deviceManager.bootMenu.POWER_WARNING()}</b>\n      </p>\n    {/if}\n    <div class=\"row\">\n      {#if $serialPort}\n        <button\n          class=\"secondary\"\n          on:click={() => {\n            $serialPort?.forget();\n            $serialPort = undefined;\n          }}\n          ><span class=\"icon\">usb_off</span\n          >{$LL.deviceManager.DISCONNECT()}</button\n        >\n      {:else}\n        <button class=\"error\" on:click={connect}\n          ><span class=\"icon\">usb</span>{$LL.deviceManager.CONNECT()}</button\n        >\n      {/if}\n      <div class=\"row\" style=\"justify-content: flex-end\">\n        <a\n          href=\"/terminal\"\n          title={$LL.deviceManager.TERMINAL()}\n          class=\"icon\"\n          class:disabled={$serialPort === undefined}\n          on:click={() => (terminal = !terminal)}>terminal</a\n        >\n        <button\n          class=\"icon\"\n          title={$LL.deviceManager.bootMenu.TITLE()}\n          disabled={$serialPort === undefined}\n          on:click={() => (powerDialog = !powerDialog)}>settings_power</button\n        >\n      </div>\n    </div>\n    {#if powerDialog}\n      <div\n        class=\"backdrop\"\n        role=\"button\"\n        tabindex=\"-1\"\n        transition:fade={{ duration: 250 }}\n        on:click={() => (powerDialog = !powerDialog)}\n        on:keypress={(event) => {\n          if (event.key === \"Enter\") powerDialog = !powerDialog;\n        }}\n      />\n      <dialog open transition:slide={{ duration: 250 }}>\n        <h3>{$LL.deviceManager.bootMenu.TITLE()}</h3>\n        <button on:click={reboot}\n          ><span class=\"icon\">restart_alt</span\n          >{$LL.deviceManager.bootMenu.REBOOT()}</button\n        >\n        <button on:click={bootloader}\n          ><span class=\"icon\">rule_settings</span\n          >{$LL.deviceManager.bootMenu.BOOTLOADER()}</button\n        >\n      </dialog>\n    {/if}\n  {/if}\n</section>\n\n<style lang=\"scss\">\n  h2 {\n    margin-block: 8px;\n  }\n\n  p {\n    margin-block: 8px;\n  }\n\n  .linux-info a {\n    display: inline;\n    padding-inline: 0;\n    text-decoration: underline;\n  }\n\n  section {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    width: 300px;\n  }\n\n  .backdrop {\n    position: absolute;\n    z-index: 1;\n    inset: 0;\n\n    background: #0005;\n    border-radius: 40px;\n  }\n\n  dialog {\n    position: relative;\n    z-index: 2;\n\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    width: 100%;\n    margin: 0;\n    margin-block-start: 16px;\n    padding: 0;\n\n    color: var(--md-sys-color-on-secondary-container);\n\n    background: var(--md-sys-color-secondary-container);\n    border: none;\n    border-radius: 32px;\n  }\n\n  .row {\n    display: flex;\n    gap: 0;\n    justify-content: space-between;\n\n    width: 100%;\n    height: fit-content;\n  }\n\n  dialog > * {\n    margin-inline: 16px;\n  }\n\n  dialog > :first-child {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    width: 100%;\n    margin: 0;\n    padding-block: 8px;\n\n    color: var(--md-sys-color-on-secondary);\n\n    background: var(--md-sys-color-secondary);\n  }\n\n  button:active:not(:disabled) {\n    color: var(--md-sys-color-on-surface-variant);\n    background: var(--md-sys-color-surface-variant);\n  }\n</style>\n","<script>\n  import { page } from \"$app/stores\";\n  import LL from \"$i18n/i18n-svelte\";\n\n  $: paths = [\n    {\n      href: \"/config/chords/\",\n      title: $LL.configure.chords.TITLE(),\n      icon: \"piano\",\n    },\n    {\n      href: \"/config/layout/\",\n      title: $LL.configure.layout.TITLE(),\n      icon: \"keyboard\",\n    },\n    {\n      href: \"/config/settings/\",\n      title: $LL.configure.settings.TITLE(),\n      icon: \"settings\",\n    },\n  ];\n</script>\n\n<nav>\n  {#each paths as { href, title, icon }}\n    <a {href} class:active={$page.url.pathname.startsWith(href)}>\n      <span class=\"icon\">{icon}</span>\n      {title}\n    </a>\n  {/each}\n</nav>\n\n<slot />\n\n<style lang=\"scss\">\n  nav {\n    display: flex;\n    gap: 8px;\n\n    padding: 8px;\n\n    color: var(--md-sys-color-on-surface-variant);\n\n    background: var(--md-sys-color-surface-variant);\n    border: none;\n    border-radius: 32px;\n  }\n\n  a.active {\n    --icon-fill: 1;\n\n    color: var(--md-sys-color-on-primary);\n    background: var(--md-sys-color-primary);\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n\n  onMount(() => {\n    modal.showModal();\n  });\n\n  let modal: HTMLDialogElement;\n</script>\n\n<dialog bind:this={modal}>\n  <slot />\n</dialog>\n\n<style lang=\"scss\">\n  dialog {\n    min-width: 300px;\n    max-width: 512px;\n\n    color: var(--md-sys-color-on-background);\n\n    background: var(--md-sys-color-background);\n    border: none;\n    border-radius: 38px;\n    box-shadow: 0 0 48px rgba(0 0 0 / 60%);\n  }\n\n  dialog::backdrop {\n    opacity: 0.5;\n    background: black;\n  }\n</style>\n","<script lang=\"ts\">\n  import { createEventDispatcher } from \"svelte\";\n  import Dialog from \"$lib/dialogs/Dialog.svelte\";\n  import ActionString from \"$lib/components/ActionString.svelte\";\n\n  export let title: string;\n  export let message: string | undefined;\n  export let abortTitle: string;\n  export let confirmTitle: string;\n\n  export let actions: number[] = [];\n\n  const dispatch = createEventDispatcher();\n</script>\n\n<Dialog>\n  <h1>{@html title}</h1>\n  {#if message}\n    <p>{@html message}</p>\n  {/if}\n  <p><ActionString {actions} /></p>\n  <div class=\"buttons\">\n    <button on:click={() => dispatch(\"abort\")}>{abortTitle}</button>\n    <button class=\"primary\" on:click={() => dispatch(\"confirm\")}\n      >{confirmTitle}</button\n    >\n  </div>\n</Dialog>\n\n<style lang=\"scss\">\n  h1 {\n    font-size: 2em;\n    text-align: center;\n  }\n\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n    width: 100%;\n  }\n</style>\n","import ConfirmDialog from \"$lib/dialogs/ConfirmDialog.svelte\";\n\nexport async function askForConfirmation(\n  title: string,\n  message: string,\n  confirmTitle: string,\n  abortTitle: string,\n  actions: number[],\n): Promise<boolean> {\n  const dialog = new ConfirmDialog({\n    target: document.body,\n    props: {\n      title,\n      message,\n      confirmTitle,\n      abortTitle,\n      actions,\n    },\n  });\n\n  let resolvePromise: (value: boolean) => void;\n  const resultPromise = new Promise<boolean>((resolve) => {\n    resolvePromise = resolve;\n  });\n\n  dialog.$on(\"abort\", () => resolvePromise(false));\n  dialog.$on(\"confirm\", () => resolvePromise(true));\n\n  const result = await resultPromise;\n  dialog.$destroy();\n\n  return result;\n}\n","<script lang=\"ts\">\n  import LL from \"$i18n/i18n-svelte\";\n  import {\n    changes,\n    ChangeType,\n    chords,\n    layout,\n    overlay,\n    settings,\n  } from \"$lib/undo-redo\";\n  import type { Change } from \"$lib/undo-redo\";\n  import { fly } from \"svelte/transition\";\n  import { action } from \"$lib/title\";\n  import {\n    deviceChords,\n    deviceLayout,\n    deviceSettings,\n    serialPort,\n    syncProgress,\n    syncStatus,\n  } from \"$lib/serial/connection\";\n  import { askForConfirmation } from \"$lib/dialogs/confirm-dialog\";\n\n  function undo(event: MouseEvent) {\n    if (event.shiftKey) {\n      changes.set([]);\n    } else {\n      redoQueue = [$changes.pop()!, ...redoQueue];\n      changes.update((it) => it);\n    }\n  }\n\n  function redo() {\n    const change = redoQueue.shift();\n    if (change) {\n      changes.update((it) => {\n        it.push(change);\n        return it;\n      });\n    }\n  }\n  let redoQueue: Change[] = [];\n\n  async function save() {\n    try {\n      const port = $serialPort;\n      if (!port) return;\n      $syncStatus = \"uploading\";\n\n      for (const [id, { actions, phrase, deleted }] of $overlay.chords) {\n        if (!deleted) {\n          if (id !== JSON.stringify(actions)) {\n            const existingChord = await port.getChordPhrase(actions);\n            if (\n              existingChord !== undefined &&\n              !(await askForConfirmation(\n                $LL.configure.chords.conflict.TITLE(),\n                $LL.configure.chords.conflict.DESCRIPTION(),\n                $LL.configure.chords.conflict.CONFIRM(),\n                $LL.configure.chords.conflict.ABORT(),\n                actions.slice(0, actions.lastIndexOf(0)),\n              ))\n            ) {\n              changes.update((changes) =>\n                changes.filter(\n                  (it) =>\n                    !(\n                      it.type === ChangeType.Chord &&\n                      JSON.stringify(it.id) === id\n                    ),\n                ),\n              );\n              continue;\n            }\n\n            await port.deleteChord({ actions: JSON.parse(id) });\n          }\n          await port.setChord({ actions, phrase });\n        } else {\n          await port.deleteChord({ actions });\n        }\n      }\n\n      for (const [layer, actions] of $overlay.layout.entries()) {\n        for (const [id, action] of actions) {\n          await port.setLayoutKey(layer + 1, id, action);\n        }\n      }\n\n      for (const [id, setting] of $overlay.settings) {\n        await port.setSetting(id, setting);\n      }\n\n      // Yes, this is a completely arbitrary and unnecessary delay.\n      // The only purpose of it is to create a sense of weight,\n      // aka make it more \"energy intensive\" to click.\n      // The only conceivable way users could reach the commit limit in this case\n      // would be if they click it every time they change a setting.\n      // Because of that, we don't need to show a fearmongering message such as\n      // \"Your device will break after you click this 10,000 times!\"\n      const virtualWriteTime = 1000;\n      const startStamp = performance.now();\n      await new Promise<void>((resolve) => {\n        function animate() {\n          const delta = performance.now() - startStamp;\n          syncProgress.set({\n            max: virtualWriteTime,\n            current: delta,\n          });\n          if (delta >= virtualWriteTime) {\n            resolve();\n          } else {\n            requestAnimationFrame(animate);\n          }\n        }\n        requestAnimationFrame(animate);\n      });\n      await port.commit();\n\n      $deviceLayout = $layout.map((layer) =>\n        layer.map<number>(({ action }) => action),\n      ) as [number[], number[], number[]];\n      $deviceChords = $chords\n        .filter(({ deleted }) => !deleted)\n        .map(({ actions, phrase }) => ({ actions, phrase }));\n      $deviceSettings = $settings.map(({ value }) => value);\n      $changes = [];\n    } catch (e) {\n      alert(e);\n      console.error(e);\n    } finally {\n      $syncStatus = \"done\";\n    }\n  }\n</script>\n\n<button\n  use:action={{ title: $LL.saveActions.UNDO(), shortcut: \"ctrl+z\" }}\n  class=\"icon\"\n  disabled={$changes.length === 0}\n  on:click={undo}>undo</button\n>\n<button\n  use:action={{ title: $LL.saveActions.REDO(), shortcut: \"ctrl+y\" }}\n  class=\"icon\"\n  disabled={redoQueue.length === 0}\n  on:click={redo}>redo</button\n>\n{#if $changes.length !== 0}\n  <button\n    transition:fly={{ x: 10 }}\n    use:action={{ title: $LL.saveActions.SAVE(), shortcut: \"ctrl+shift+s\" }}\n    on:click={save}\n    class=\"click-me\"\n    ><span class=\"icon\">save</span>{$LL.saveActions.SAVE()}</button\n  >\n{/if}\n\n<style lang=\"scss\">\n  .click-me {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: fit-content;\n    margin-inline: 8px;\n    padding-block: 2px;\n    padding-inline-start: 8px;\n    padding-inline-end: 12px;\n    font-family: inherit;\n    font-weight: bold;\n    color: var(--md-sys-color-primary);\n    border: 2px solid var(--md-sys-color-primary);\n    border-radius: 18px;\n    outline: 2px dashed var(--md-sys-color-primary);\n    outline-offset: 2px;\n  }\n</style>\n","<script lang=\"ts\">\n  import { serialPort, syncStatus } from \"$lib/serial/connection\";\n  import { slide, fly } from \"svelte/transition\";\n  import { canShare, triggerShare } from \"$lib/share\";\n  import { popup } from \"$lib/popup\";\n  import BackupPopup from \"./BackupPopup.svelte\";\n  import ConnectionPopup from \"./ConnectionPopup.svelte\";\n  import { browser } from \"$app/environment\";\n  import { userPreferences } from \"$lib/preferences\";\n  import { action } from \"$lib/title\";\n  import LL from \"$i18n/i18n-svelte\";\n  import ConfigTabs from \"./ConfigTabs.svelte\";\n  import EditActions from \"./EditActions.svelte\";\n  import { onMount } from \"svelte\";\n\n  onMount(async () => {\n    if (browser && !$userPreferences.autoConnect) {\n      connectButton.click();\n    }\n  });\n\n  let connectButton: HTMLButtonElement;\n</script>\n\n<nav>\n  <div class=\"actions\">\n    <EditActions />\n  </div>\n\n  <ConfigTabs />\n\n  <div class=\"actions\">\n    {#if $canShare}\n      <button\n        use:action={{ title: $LL.share.TITLE() }}\n        transition:fly={{ x: -8 }}\n        class=\"icon\"\n        on:click={triggerShare}>share</button\n      >\n      <button\n        use:action={{ title: $LL.print.TITLE() }}\n        transition:fly={{ x: -8 }}\n        class=\"icon\"\n        on:click={() => print()}>print</button\n      >\n      <div transition:slide class=\"separator\" />\n    {/if}\n    {#if import.meta.env.TAURI_FAMILY === undefined}\n      {#await import(\"$lib/components/PwaStatus.svelte\") then { default: PwaStatus }}\n        <PwaStatus />\n      {/await}\n    {/if}\n    <button\n      use:action={{ title: $LL.backup.TITLE() }}\n      use:popup={BackupPopup}\n      class=\"icon {$syncStatus}\"\n    >\n      {#if $userPreferences.backup}\n        history\n      {:else}\n        history_toggle_off\n      {/if}\n    </button>\n    <button\n      bind:this={connectButton}\n      use:action={{ title: $LL.deviceManager.TITLE() }}\n      use:popup={ConnectionPopup}\n      class=\"icon connect\"\n      class:error={$serialPort === undefined}\n    >\n      cable\n    </button>\n  </div>\n</nav>\n\n<style lang=\"scss\">\n  .separator {\n    width: 1px;\n    height: 24px;\n    margin-inline: 4px;\n    background: var(--md-sys-color-outline-variant);\n  }\n\n  nav {\n    display: grid;\n    grid-template-columns: 1fr auto 1fr;\n\n    width: calc(min(100%, 28cm));\n    margin-block: 8px;\n    margin-inline: auto;\n    padding-inline: 16px;\n  }\n\n  .title {\n    display: flex;\n    align-items: center;\n\n    margin-block: 0;\n\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: var(--md-sys-color-primary);\n    text-decoration: none;\n  }\n\n  .icon {\n    cursor: pointer;\n\n    position: relative;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    aspect-ratio: 1;\n    padding: 0;\n\n    color: inherit;\n    text-decoration: none;\n\n    background: transparent;\n    border: none;\n    border-radius: 50%;\n\n    transition: all 250ms ease;\n\n    &.error {\n      color: var(--md-sys-color-on-error);\n      background: var(--md-sys-color-error);\n    }\n  }\n\n  .actions {\n    display: flex;\n    align-items: center;\n\n    &:last-child {\n      justify-content: flex-end;\n    }\n  }\n\n  :disabled {\n    pointer-events: none;\n    opacity: 0.5;\n  }\n</style>\n","<script>\n  import LL from \"$i18n/i18n-svelte\";\n</script>\n\n<dialog open>\n  <h1>{$LL.browserWarning.TITLE()}</h1>\n  <p>\n    {$LL.browserWarning.INFO_SERIAL_PREFIX()}<a\n      class=\"normal\"\n      target=\"_blank\"\n      href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Serial_API#browser_compatibility\"\n      >{$LL.browserWarning.INFO_SERIAL_INFIX()}</a\n    >{$LL.browserWarning.INFO_SERIAL_SUFFIX()}\n    {$LL.browserWarning.INFO_BROWSER_PREFIX()}\n    <a\n      href=\"https://github.com/brave/brave-browser/issues/13902\"\n      target=\"_blank\">{$LL.browserWarning.INFO_BROWSER_INFIX()}</a\n    >{$LL.browserWarning.INFO_BROWSER_SUFFIX()}\n  </p>\n  <div>\n    <p>{$LL.browserWarning.DOWNLOAD_APP()}</p>\n  </div>\n</dialog>\n\n<style lang=\"scss\">\n  dialog {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    width: 100vw;\n    height: 100vh;\n\n    color: var(--md-sys-color-on-error);\n\n    background: var(--md-sys-color-error);\n    border: none;\n\n    > * {\n      max-width: 20cm;\n    }\n  }\n\n  div {\n    display: flex;\n    gap: 16px;\n  }\n\n  a {\n    color: var(--md-sys-color-on-error);\n    text-decoration: underline;\n  }\n\n  div > p {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n    list-style: none;\n  }\n\n  dialog::backdrop {\n    opacity: 0.8;\n    background: black;\n  }\n\n  h1 {\n    color: inherit;\n  }\n</style>\n","import type { FormattersInitializer } from \"typesafe-i18n\";\nimport type { Locales, Formatters } from \"./i18n-types\";\n\nexport const initFormatters: FormattersInitializer<Locales, Formatters> = (\n  _locale: Locales,\n) => {\n  const formatters: Formatters = {\n    // add your formatter functions here\n  };\n\n  return formatters;\n};\n","import type { Translation } from \"../i18n-types\";\n\nconst de = {\n  TITLE: \"CharaChorder Gerätemanager\",\n  DESCRIPTION: \"Gerätemanager und Konfigurationstool für CharaChorder Geräte.\",\n  saveActions: {\n    UNDO: \"Rückgängig (<kbd class='icon'>shift</kbd> halten um alle Änderungen rückgängig zu machen)\",\n    REDO: \"Wiederholen\",\n    SAVE: \"Speichern\",\n  },\n  update: {\n    TITLE: \"Gerät aktualisieren\",\n  },\n  sync: {\n    TITLE_READ: \"Neueste Änderungen werden abgerufen\",\n    TITLE_WRITE: \"Änderungen werden gespeichert\",\n    RELOAD: \"Neu laden\",\n  },\n  backup: {\n    TITLE: \"Lokale Kopie\",\n    INDIVIDUAL: \"Einzeldateien\",\n    DISCLAIMER:\n      \"Das Backup in diesem Browser gespeichert und bleibt nur auf diesem Computer.\",\n    DOWNLOAD: \"Alles herunterladen\",\n    RESTORE: \"Wiederherstellen\",\n  },\n  modal: {\n    CLOSE: \"Schließen\",\n  },\n  actionSearch: {\n    PLACEHOLDER: \"Nach Aktionen suchen\",\n    CURRENT_ACTION: \"Aktuelle Aktion\",\n    NEXT_ACTION: \"Aktion nach dem nächsten Speichern\",\n    DELETE: \"Entfernen\",\n    filter: {\n      ALL: \"Alle\",\n    },\n    LIVE_LAYOUT_INFO:\n      \"Diese Aktion wurde auf Basis des Systemtastaturlayouts ermittelt.\",\n    SHIFT_WARNING: \"Diese Aktion hält <kbd class='icon'>shift</kbd>\",\n    ALT_CODE_WARNING: \"Dieses Alt-Code Makro funktioniert nur unter Windows\",\n  },\n  share: {\n    TITLE: \"Teilen\",\n    URL_COPIED: \"Teilbare URL kopiert!\",\n    EXTRA_DOWNLOAD: \"Als Datei herunterladen\",\n  },\n  print: {\n    TITLE: \"Drucken\",\n  },\n  profile: {\n    TITLE: \"Profil\",\n    LANGUAGE: \"Sprache\",\n    theme: {\n      TITLE: \"Darstellung\",\n      COLOR_SCHEME: \"Farbschema\",\n      DARK_MODE: \"Dunkel\",\n      LIGHT_MODE: \"Hell\",\n    },\n  },\n  deviceManager: {\n    TITLE: \"Gerät\",\n    AUTO_CONNECT: \"Automatisch Verbinden\",\n    CONNECT: \"Verbinden\",\n    DISCONNECT: \"Entfernen\",\n    TERMINAL: \"Konsole\",\n    APPLY_SETTINGS: \"Änderungen auf das Gerät brennen\",\n    NO_DEVICE: \"Kein Gerät verbunden\",\n    LINUX_PERMISSIONS:\n      \"Auf den meisten Linux-basierten Systemen müssen zuerst Berechtigungen angepasst werden. Flatpak und Snap Anwendungen benötigen zusätzliche Berechtigungen oder funktionieren möglicherweise gar nicht.\",\n    bootMenu: {\n      TITLE: \"Bootmenü\",\n      REBOOT: \"Neustarten\",\n      BOOTLOADER: \"Bootloader\",\n      POWER_WARNING:\n        \"Um vom Bootloader aus neu zu starten muss das Gerät neu verbunden werden.\",\n    },\n  },\n  browserWarning: {\n    TITLE: \"Warnung\",\n    INFO_SERIAL_PREFIX:\n      \"Der aktuell genutzte Browser wird aufgrund der speziellen Voraussetzung für Kommunikation über die \",\n    INFO_SERIAL_INFIX: \"serielle Schnittstelle\",\n    INFO_SERIAL_SUFFIX: \" nicht unterstützt.\",\n    INFO_BROWSER_PREFIX:\n      \"Auch wenn alle Chromium-basieren Desktop Browser diese Voraussetzung grundsätzlich erfüllen, haben einige Browser \",\n    INFO_BROWSER_INFIX: \"wie zum Beispiel Brave\",\n    INFO_BROWSER_SUFFIX:\n      \" sich bewusst dazu entschieden die API zu deaktivieren.\",\n    DOWNLOAD_APP:\n      \"Chrome oder Edge werden offiziell unterstützt, andere Browser könnten aber auch funktionieren.\",\n  },\n  changes: {\n    TITLE: \"Änderungen importieren\",\n    ALL_CHANGES: \"Alle Änderungen\",\n    layout: {\n      TITLE: \"{0} veränderte Belegung{{:|en}}\",\n      LAYER: \"{changes} Belegung{{changes:|en}} in Ebene {layer} ändern\",\n    },\n    settings: {\n      TITLE: \"{0} Einstellung{{|en}} anpassen\",\n    },\n    chords: {\n      TITLE: \"{0} Akkorde\",\n      NEW_CHORDS: \"{0} neue Akkord{{|e}} hinzufügen\",\n      CHANGED_CHORDS: \"{0} Akkord{{|e}} ersetzen\",\n      DELETED_CHORDS: \"{0} Akkord{{|e}} zum löschen markieren\",\n    },\n  },\n  configure: {\n    chords: {\n      TITLE: \"Akkorde\",\n      HOLD_KEYS: \"Akkord halten\",\n      NEW_CHORD: \"Neuer Akkord\",\n      DUPLICATE: \"Akkord existiert bereits\",\n      search: {\n        PLACEHOLDER: \"{0} Akkord{{|e}} durchsuchen\",\n        NO_RESULTS: \"Keine Ergebnisse\",\n      },\n      conflict: {\n        TITLE: \"Akkordkonflikt\",\n        DESCRIPTION:\n          \"Der Akkord würde einen bereits existierenden Akkord überschreiben. Wirklich fortfahren?\",\n        CONFIRM: \"Überschreiben\",\n        ABORT: \"Überspringen\",\n      },\n      VOCABULARY: \"Vokabelliste\",\n      TRY_TYPING: \"Versuche hier zu tippen\",\n    },\n    layout: {\n      TITLE: \"Layout\",\n    },\n    settings: {\n      TITLE: \"Einstellungen\",\n    },\n  },\n  plugin: {\n    editor: {\n      RUN: \"Ausführen\",\n    },\n  },\n} satisfies Translation;\n\nexport default de;\n","import type { BaseTranslation } from \"../i18n-types\";\n\nconst en = {\n  TITLE: \"CharaChorder Device Manager\",\n  DESCRIPTION:\n    \"The device manager and configuration tool for CharaChorder devices.\",\n  saveActions: {\n    UNDO: \"Undo (hold <kbd class='icon'>shift</kbd> to undo all changes)\",\n    REDO: \"Redo\",\n    SAVE: \"Save\",\n  },\n  update: {\n    TITLE: \"Update your device\",\n  },\n  backup: {\n    TITLE: \"Local backup\",\n    INDIVIDUAL: \"Individual backups\",\n    DISCLAIMER:\n      \"A backup is made and stored in this browser, and always remains only on your computer.\",\n    DOWNLOAD: \"Download Everything\",\n    RESTORE: \"Restore\",\n  },\n  sync: {\n    TITLE_READ: \"Reading latest changes\",\n    TITLE_WRITE: \"Saving changes to device\",\n    RELOAD: \"Reload\",\n  },\n  modal: {\n    CLOSE: \"Close\",\n  },\n  actionSearch: {\n    PLACEHOLDER: \"Search for actions\",\n    CURRENT_ACTION: \"Current action\",\n    NEXT_ACTION: \"Action after next save\",\n    DELETE: \"Remove\",\n    filter: {\n      ALL: \"All\",\n    },\n    LIVE_LAYOUT_INFO: \"This output was determined using on your system layout.\",\n    SHIFT_WARNING: \"This action holds <kbd class='icon'>shift</kbd>\",\n    ALT_CODE_WARNING: \"This alt-code macro only works on Windows\",\n  },\n  share: {\n    TITLE: \"Share\",\n    URL_COPIED: \"Sharable URL copied!\",\n    EXTRA_DOWNLOAD: \"Download as file\",\n  },\n  print: {\n    TITLE: \"Print\",\n  },\n  profile: {\n    TITLE: \"Profile\",\n    LANGUAGE: \"Language\",\n    theme: {\n      TITLE: \"Theme\",\n      COLOR_SCHEME: \"Color scheme\",\n      DARK_MODE: \"Dark\",\n      LIGHT_MODE: \"Light\",\n    },\n  },\n  deviceManager: {\n    TITLE: \"Device\",\n    AUTO_CONNECT: \"Auto-connect\",\n    CONNECT: \"Connect\",\n    DISCONNECT: \"Disconnect\",\n    TERMINAL: \"Terminal\",\n    APPLY_SETTINGS: \"Flash changes to device\",\n    NO_DEVICE: \"No device connected\",\n    LINUX_PERMISSIONS:\n      \"Most Linux based systems need adjusted permissions in order to connect your device. Flatpak or Snap versions in particular might need additional permissions or may not work at all.\",\n    bootMenu: {\n      TITLE: \"Boot Menu\",\n      REBOOT: \"Reboot\",\n      BOOTLOADER: \"Bootloader\",\n      POWER_WARNING:\n        \"To reboot from bootloader you need to physically reconnect your device.\",\n    },\n  },\n  browserWarning: {\n    TITLE: \"Warning\",\n    INFO_SERIAL_PREFIX:\n      \"Your current browser is not supported due to this site's unique requirement for \",\n    INFO_SERIAL_INFIX: \"serial connections\",\n    INFO_SERIAL_SUFFIX: \".\",\n    INFO_BROWSER_PREFIX:\n      \"Though all chromium-based desktop browsers fulfill this requirement, some derivations such as Brave \",\n    INFO_BROWSER_INFIX: \"have been known to disable the API intentionally\",\n    INFO_BROWSER_SUFFIX: \".\",\n    DOWNLOAD_APP:\n      \"Chrome or Edge are officially supported, but other browsers might work as well.\",\n  },\n  changes: {\n    TITLE: \"Import changes\",\n    ALL_CHANGES: \"All changes\",\n    layout: {\n      TITLE: \"{0} layout change{{|s}}\",\n      LAYER: \"Update {changes} key{{changes:|s}} in layer {layer}\",\n    },\n    settings: {\n      TITLE: \"Update {0} setting{{|s}}\",\n    },\n    chords: {\n      TITLE: \"{0} chords\",\n      NEW_CHORDS: \"Add {0} new chord{{|s}}\",\n      CHANGED_CHORDS: \"Replace {0} chord{{|s}}\",\n      DELETED_CHORDS: \"Mark {0} chord{{|s}} for deletion\",\n    },\n  },\n  configure: {\n    chords: {\n      TITLE: \"Chords\",\n      HOLD_KEYS: \"Hold chord\",\n      NEW_CHORD: \"New chord\",\n      DUPLICATE: \"Chord already exists\",\n      search: {\n        PLACEHOLDER: \"Search {0} chord{{|s}}\",\n        NO_RESULTS: \"No results\",\n      },\n      conflict: {\n        TITLE: \"Chord conflict\",\n        DESCRIPTION:\n          \"Your chord conflicts with an existing chord. Are you sure you want to overwrite this chord?\",\n        CONFIRM: \"Overwrite\",\n        ABORT: \"Skip\",\n      },\n      VOCABULARY: \"Vocabulary\",\n      TRY_TYPING: \"Try typing here\",\n    },\n    layout: {\n      TITLE: \"Layout\",\n    },\n    settings: {\n      TITLE: \"Settings\",\n    },\n  },\n  plugin: {\n    editor: {\n      RUN: \"Run\",\n    },\n  },\n} satisfies BaseTranslation;\n\nexport default en;\n","// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.\n/* eslint-disable */\n\nimport { initFormatters } from './formatters'\nimport type { Locales, Translations } from './i18n-types'\nimport { loadedFormatters, loadedLocales, locales } from './i18n-util'\n\nimport de from './de'\nimport en from './en'\n\nconst localeTranslations = {\n\tde,\n\ten,\n}\n\nexport const loadLocale = (locale: Locales): void => {\n\tif (loadedLocales[locale]) return\n\n\tloadedLocales[locale] = localeTranslations[locale] as unknown as Translations\n\tloadFormatters(locale)\n}\n\nexport const loadAllLocales = (): void => locales.forEach(loadLocale)\n\nexport const loadFormatters = (locale: Locales): void =>\n\tvoid (loadedFormatters[locale] = initFormatters(locale))\n","// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.\n/* eslint-disable */\n\nimport { initFormatters } from './formatters'\nimport type { Locales, Translations } from './i18n-types'\nimport { loadedFormatters, loadedLocales, locales } from './i18n-util'\n\nconst localeTranslationLoaders = {\n\tde: () => import('./de'),\n\ten: () => import('./en'),\n}\n\nconst updateDictionary = (locale: Locales, dictionary: Partial<Translations>): Translations =>\n\tloadedLocales[locale] = { ...loadedLocales[locale], ...dictionary }\n\nexport const importLocaleAsync = async (locale: Locales): Promise<Translations> =>\n\t(await localeTranslationLoaders[locale]()).default as unknown as Translations\n\nexport const loadLocaleAsync = async (locale: Locales): Promise<void> => {\n\tupdateDictionary(locale, await importLocaleAsync(locale))\n\tloadFormatters(locale)\n}\n\nexport const loadAllLocalesAsync = (): Promise<void[]> => Promise.all(locales.map(loadLocaleAsync))\n\nexport const loadFormatters = (locale: Locales): void =>\n\tvoid (loadedFormatters[locale] = initFormatters(locale))\n","<script lang=\"ts\">\n  import {\n    serialPort,\n    syncProgress,\n    syncStatus,\n    sync,\n  } from \"$lib/serial/connection\";\n  import LL from \"$i18n/i18n-svelte\";\n  import { slide } from \"svelte/transition\";\n</script>\n\n<div class=\"container\">\n  {#if $syncStatus !== \"done\"}\n    <div transition:slide>\n      <progress\n        max={$syncProgress?.max ?? 1}\n        value={$syncProgress?.current ?? 1}\n      ></progress>\n      {#if $syncStatus === \"downloading\"}\n        <div>{$LL.sync.TITLE_READ()}</div>\n      {:else}\n        <div>{$LL.sync.TITLE_WRITE()}</div>\n      {/if}\n    </div>\n  {:else if $serialPort}\n    <button transition:slide on:click={sync}\n      ><span class=\"icon\">refresh</span>{$LL.sync.RELOAD()}</button\n    >\n  {/if}\n</div>\n\n<style lang=\"scss\">\n  .container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  div {\n    font-size: 12px;\n  }\n\n  progress {\n    overflow: hidden;\n    width: 100%;\n    height: 8px;\n    border-radius: 4px;\n  }\n\n  progress::-webkit-progress-bar {\n    background: var(--md-sys-color-background);\n  }\n\n  progress::-webkit-progress-value {\n    background: var(--md-sys-color-primary);\n  }\n</style>\n","<script lang=\"ts\">\n  import { browser, version } from \"$app/environment\";\n  import { action } from \"$lib/title\";\n  import LL, { setLocale } from \"$i18n/i18n-svelte\";\n  import { theme } from \"$lib/preferences.js\";\n  import type { Locales } from \"$i18n/i18n-types\";\n  import { detectLocale, locales } from \"$i18n/i18n-util\";\n  import { loadLocaleAsync } from \"$i18n/i18n-util.async\";\n  import { tick } from \"svelte\";\n  import SyncOverlay from \"./SyncOverlay.svelte\";\n  import { serialPort } from \"$lib/serial/connection\";\n\n  let locale =\n    (browser && (localStorage.getItem(\"locale\") as Locales)) || detectLocale();\n  $: if (browser)\n    (async () => {\n      localStorage.setItem(\"locale\", locale);\n      await loadLocaleAsync(locale);\n      setLocale(locale);\n    })();\n\n  function switchTheme() {\n    const mode = $theme.mode === \"light\" ? \"dark\" : \"light\";\n    if (document.startViewTransition) {\n      document.startViewTransition(async () => {\n        $theme.mode = mode;\n        await tick();\n      });\n    } else {\n      $theme.mode = mode;\n    }\n  }\n\n  let languageSelect: HTMLSelectElement;\n</script>\n\n<footer>\n  <ul>\n    <li>\n      <!-- svelte-ignore not-defined -->\n      <a\n        href={import.meta.env.VITE_HOMEPAGE_URL}\n        rel=\"noreferrer\"\n        target=\"_blank\"><span class=\"icon\">commit</span> v{version}</a\n      >\n    </li>\n    <li>\n      <a href={import.meta.env.VITE_BUGS_URL} rel=\"noreferrer\" target=\"_blank\"\n        ><span class=\"icon\">bug_report</span> Issues</a\n      >\n    </li>\n    <li>\n      <a href={import.meta.env.VITE_DOCS_URL} rel=\"noreferrer\" target=\"_blank\"\n        ><span class=\"icon\">description</span> Docs</a\n      >\n    </li>\n  </ul>\n  <div>\n    {#if !$serialPort}\n      <div class=\"warning\">\n        <span class=\"icon\">warning</span>{$LL.deviceManager.NO_DEVICE()}\n      </div>\n    {/if}\n    <SyncOverlay />\n  </div>\n  <ul>\n    <li>\n      <a href={import.meta.env.VITE_STORE_URL} rel=\"noreferrer\" target=\"_blank\"\n        ><span class=\"icon\">shopping_bag</span> Store</a\n      >\n    </li>\n    <li>\n      <a href={import.meta.env.VITE_LEARN_URL} rel=\"noreferrer\" target=\"_blank\"\n        ><span class=\"icon\">school</span> Train</a\n      >\n    </li>\n    <li class=\"hide-forced-colors\">\n      <input\n        use:action={{ title: $LL.profile.theme.COLOR_SCHEME() }}\n        type=\"color\"\n        bind:value={$theme.color}\n      />\n    </li>\n    <li class=\"hide-forced-colors\">\n      {#if $theme.mode === \"light\"}\n        <button\n          use:action={{ title: $LL.profile.theme.DARK_MODE() }}\n          class=\"icon\"\n          on:click={switchTheme}\n        >\n          dark_mode\n        </button>\n      {:else if $theme.mode === \"dark\"}\n        <button\n          use:action={{ title: $LL.profile.theme.LIGHT_MODE() }}\n          class=\"icon\"\n          on:click={switchTheme}\n        >\n          light_mode\n        </button>\n      {/if}\n    </li>\n    <li>\n      <button\n        class=\"icon\"\n        use:action={{ title: $LL.profile.LANGUAGE() }}\n        on:click={() => languageSelect.click()}\n        >translate\n\n        <select bind:value={locale} bind:this={languageSelect}>\n          {#each locales as code}\n            <option value={code}>{code}</option>\n          {/each}\n        </select>\n      </button>\n    </li>\n  </ul>\n</footer>\n\n<style lang=\"scss\">\n  select {\n    position: absolute;\n    opacity: 0;\n  }\n\n  .warning {\n    color: var(--md-sys-color-error);\n    gap: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  input[type=\"color\"] {\n    cursor: pointer;\n\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    inline-size: 20px;\n    block-size: 20px;\n    margin: 0;\n    padding: 0;\n\n    color: inherit;\n\n    background: transparent;\n    border: none;\n    border-radius: 50%;\n\n    &::-webkit-color-swatch-wrapper {\n      padding: 0;\n    }\n\n    &::-webkit-color-swatch {\n      border: none;\n    }\n  }\n\n  footer {\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    grid-template-columns: 1fr auto 1fr;\n\n    width: 100%;\n    padding: 8px;\n    padding-inline-end: 16px;\n    padding-block-start: 0;\n\n    opacity: 0.4;\n\n    @media (prefers-contrast: more) {\n      opacity: 0.8;\n    }\n\n    @media (forced-colors: active) {\n      opacity: unset;\n    }\n  }\n\n  ul {\n    display: flex;\n    gap: 8px;\n    align-items: center;\n\n    margin: 0;\n    padding: 0;\n\n    list-style: none;\n\n    &:last-child {\n      justify-content: flex-end;\n    }\n  }\n\n  ul:last-child {\n    gap: 12px;\n\n    button {\n      height: 24px;\n      font-size: 20px;\n    }\n  }\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    font-size: 12px;\n    text-decoration: none;\n\n    padding-inline: 12px;\n  }\n\n  .icon {\n    font-size: 16px;\n  }\n\n  @media (forced-colors: active) {\n    .hide-forced-colors {\n      display: none;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { fly } from \"svelte/transition\";\n  import { afterNavigate, beforeNavigate } from \"$app/navigation\";\n  import { expoIn, expoOut } from \"svelte/easing\";\n\n  let inDirection = 0;\n  let outDirection = 0;\n  let outroEnd: undefined | (() => void) = undefined;\n  let animationDone: Promise<void>;\n\n  let isNavigating = false;\n\n  const routeOrder = [\n    \"/config/chords/\",\n    \"/config/layout/\",\n    \"/config/settings/\",\n  ];\n\n  beforeNavigate((navigation) => {\n    const from = navigation.from?.url.pathname;\n    const to = navigation.to?.url.pathname;\n    if (from === to) return;\n    isNavigating = true;\n\n    if (!(from && to && routeOrder.includes(from) && routeOrder.includes(to))) {\n      inDirection = 0;\n      outDirection = 0;\n    } else {\n      const fromIndex = routeOrder.indexOf(from);\n      const toIndex = routeOrder.indexOf(to);\n\n      inDirection = fromIndex > toIndex ? -1 : 1;\n      outDirection = fromIndex > toIndex ? 1 : -1;\n    }\n\n    animationDone = new Promise((resolve) => {\n      outroEnd = resolve;\n    });\n  });\n\n  afterNavigate(async () => {\n    await animationDone;\n    isNavigating = false;\n  });\n</script>\n\n{#if !isNavigating}\n  <main\n    in:fly={{ x: inDirection * 24, duration: 150, easing: expoOut }}\n    out:fly={{ x: outDirection * 24, duration: 150, easing: expoIn }}\n    on:outroend={outroEnd}\n  >\n    <slot />\n  </main>\n{/if}\n","<script lang=\"ts\">\n  import \"$lib/fonts/noto-sans-mono.scss\";\n  import \"$lib/fonts/material-symbols-rounded.scss\";\n  import \"$lib/style/scrollbar.scss\";\n  import \"$lib/style/tippy.scss\";\n  import \"$lib/style/theme.scss\";\n  import { onDestroy, onMount } from \"svelte\";\n  import {\n    applyTheme,\n    argbFromHex,\n    themeFromSourceColor,\n  } from \"@material/material-color-utilities\";\n  import Navigation from \"./Navigation.svelte\";\n  import { canAutoConnect } from \"$lib/serial/device\";\n  import { initSerial } from \"$lib/serial/connection\";\n  import type { LayoutData } from \"./$types\";\n  import { browser } from \"$app/environment\";\n  import BrowserWarning from \"./BrowserWarning.svelte\";\n  import \"tippy.js/animations/shift-away.css\";\n  import \"tippy.js/dist/tippy.css\";\n  import tippy from \"tippy.js\";\n  import { theme, userPreferences } from \"$lib/preferences.js\";\n  import { LL, setLocale } from \"$i18n/i18n-svelte\";\n  import { loadLocale } from \"$i18n/i18n-util.sync\";\n  import { detectLocale } from \"$i18n/i18n-util\";\n  import type { Locales } from \"$i18n/i18n-types\";\n  import Footer from \"./Footer.svelte\";\n  import { osLayout, runLayoutDetection } from \"$lib/os-layout.js\";\n  import PageTransition from \"./PageTransition.svelte\";\n  import { restoreFromFile } from \"$lib/backup/backup\";\n  import { goto } from \"$app/navigation\";\n  import { hotkeys } from \"$lib/title\";\n\n  const locale =\n    ((browser && localStorage.getItem(\"locale\")) as Locales) || detectLocale();\n  loadLocale(locale);\n  setLocale(locale);\n  let stopLayoutDetection: () => void;\n\n  if (browser) {\n    stopLayoutDetection = runLayoutDetection();\n    tippy.setDefaultProps({\n      animation: \"shift-away\",\n      theme: \"surface-variant\",\n      allowHTML: true,\n      duration: 250,\n      maxWidth: \"none\",\n      arrow: true,\n    });\n  }\n\n  export let data: LayoutData;\n\n  onMount(async () => {\n    theme.subscribe((it) => {\n      const theme = themeFromSourceColor(argbFromHex(it.color));\n      const dark = it.mode === \"dark\"; // window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      applyTheme(theme, { target: document.body, dark });\n    });\n\n    if (import.meta.env.TAURI_FAMILY === undefined) {\n      const { initPwa } = await import(\"./pwa-setup\");\n      webManifestLink = await initPwa();\n    }\n\n    if (browser && $userPreferences.autoConnect && (await canAutoConnect())) {\n      await initSerial();\n    }\n\n    if (data.importFile) {\n      restoreFromFile(data.importFile);\n      const url = new URL(location.href);\n      url.searchParams.delete(\"import\");\n      await goto(url.href, { replaceState: true });\n    }\n  });\n\n  onDestroy(() => {\n    stopLayoutDetection?.();\n  });\n\n  let webManifestLink = \"\";\n\n  function handleHotkey(event: KeyboardEvent) {\n    let key = $osLayout.get(event.code);\n    if (!key && event.code === \"Escape\") key = \"esc\";\n    if (!key && event.code === \"ArrowLeft\") key = \"left\";\n    if (!key && event.code === \"ArrowRight\") key = \"right\";\n    if (!key && event.code === \"ArrowUp\") key = \"up\";\n    if (!key && event.code === \"ArrowDown\") key = \"down\";\n\n    if (!key) return;\n    const str = [\n      event.ctrlKey ? \"ctrl\" : undefined,\n      event.shiftKey ? \"shift\" : undefined,\n      event.altKey ? \"alt\" : undefined,\n      key,\n    ]\n      .filter((it) => !!it)\n      .join(\"+\");\n\n    const node = hotkeys.get(str);\n    if (node) {\n      event.preventDefault();\n      node.click();\n    }\n  }\n</script>\n\n<svelte:head>\n  {@html webManifestLink}\n  <title>{$LL.TITLE()}</title>\n  <meta name=\"description\" content={$LL.DESCRIPTION()} />\n  <meta name=\"theme-color\" content={data.themeColor} />\n</svelte:head>\n\n<svelte:window on:keydown={handleHotkey} />\n\n<Navigation />\n\n<!-- <PickChangesDialog /> -->\n\n<PageTransition>\n  <slot />\n</PageTransition>\n\n<Footer />\n\n{#if import.meta.env.TAURI_FAMILY === undefined && browser && !(\"serial\" in navigator)}\n  <BrowserWarning />\n{/if}\n\n<style lang=\"scss\" global>\n  body {\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n\n    width: 100vw;\n    height: 100vh;\n    margin: 0;\n\n    font-family: \"Noto Sans Mono\", monospace;\n    color: var(--md-sys-color-on-background);\n\n    background: var(--md-sys-color-background);\n  }\n\n  main {\n    contain: strict;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    align-items: center;\n    padding-inline: 16px;\n  }\n\n  h1 {\n    margin-block-start: 0;\n    font-size: 4rem;\n    font-weight: 700;\n    color: var(--md-sys-color-secondary);\n  }\n</style>\n"],"file":"_app/immutable/nodes/2.D7oj51mw.js"}