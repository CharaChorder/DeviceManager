{"version":3,"mappings":";iDAEA,eAAsBA,GAA2B,CAE/C,KAAM,CAAE,QAAAC,CAAY,QAAMC,EAAA,wBAAAD,GAAA,aAAO,iCAAkB,iBAAAA,CAAA,uBAE7C,CAAE,WAAAE,CAAe,QAAMD,EAAA,2BAAAC,GAAA,aAAO,oCAAsB,oBAAAA,CAAA,2CAC/C,OAAAA,EAAA,CACT,UAAW,GACX,gBAAgBC,EAAO,CACb,YAAI,mCAAoCA,CAAK,CACvD,EAC2B,EAEtBH,EAAUA,EAAQ,YAAY,QAAU,EACjD","names":["initPwa","pwaInfo","__vitePreload","registerSW","error"],"ignoreList":[],"sources":["../../../../../../src/routes/(app)/pwa-setup.ts"],"sourcesContent":["import type { RegisterSWOptions } from \"vite-plugin-pwa/types\";\n\nexport async function initPwa(): Promise<string> {\n  // @ts-expect-error confused TS\n  const { pwaInfo } = await import(\"virtual:pwa-info\");\n  // @ts-expect-error confused TS\n  const { registerSW } = await import(\"virtual:pwa-register\");\n  registerSW({\n    immediate: true,\n    onRegisterError(error) {\n      console.log(\"ServiceWorker Registration Error\", error);\n    },\n  } satisfies RegisterSWOptions);\n\n  return pwaInfo ? pwaInfo.webManifest.linkTag : \"\";\n}\n"],"file":"_app/immutable/chunks/pwa-setup.Cm4sYrbX.js"}