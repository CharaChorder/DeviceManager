{"version":3,"file":"share-url.D1X9O966.js","sources":["../../../../../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/runtime/internal/globals.js","../../../../../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/runtime/internal/await_block.js","../../../../../../src/lib/share/action-array.ts","../../../../../../src/lib/serialization/base64.ts","../../../../../../src/lib/share/share-url.ts"],"sourcesContent":["/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import { compressActions, decompressActions } from \"../serialization/actions\";\nimport { CHARA_FILE_TYPES } from \"../share/share-url\";\n\nexport type ActionArray = number[] | ActionArray[];\nexport function serializeActionArray(array: ActionArray): Uint8Array {\n  let out = new Uint8Array(5);\n  const writer = new DataView(out.buffer);\n  writer.setUint32(0, array.length);\n\n  if (array.length === 0) {\n    return out;\n  } else if (typeof array[0] === \"number\") {\n    writer.setUint8(4, CHARA_FILE_TYPES.indexOf(\"number\"));\n    const compressed = compressActions(array as number[]);\n    writer.setUint32(0, compressed.length);\n    return concatUint8Arrays(out, compressed);\n  } else if (Array.isArray(array[0])) {\n    writer.setUint8(4, CHARA_FILE_TYPES.indexOf(\"array\"));\n    return concatUint8Arrays(\n      out,\n      ...(array as ActionArray[]).map(serializeActionArray),\n    );\n  } else {\n    throw new Error(\"Not implemented\");\n  }\n}\n\nexport function deserializeActionArray(\n  raw: Uint8Array,\n  cursor = { pos: 0 },\n): ActionArray {\n  const reader = new DataView(raw.buffer);\n  const length = reader.getUint32(cursor.pos);\n  cursor.pos += 4;\n  const type = CHARA_FILE_TYPES[reader.getUint8(cursor.pos)];\n  cursor.pos++;\n\n  if (type === \"number\") {\n    const decompressed = decompressActions(\n      raw.slice(cursor.pos, cursor.pos + length),\n    );\n    cursor.pos += length;\n    return decompressed;\n  } else if (type === \"array\") {\n    const out = [];\n    for (let i = 0; i < length; i++) {\n      out.push(deserializeActionArray(raw, cursor));\n    }\n    return out;\n  } else {\n    throw new Error(\"Not implemented\");\n  }\n}\n\nexport function concatUint8Arrays(...arrays: Uint8Array[]): Uint8Array {\n  const out = new Uint8Array(arrays.reduce((a, b) => a + b.length, 0));\n  let offset = 0;\n  for (const array of arrays) {\n    out.set(array, offset);\n    offset += array.length;\n  }\n  return out;\n}\n","/**\n * Encodes a gzipped binary blob to a base64 string.\n *\n * Note that the string is url-compatible base64,\n * meaning some chars are swapped for compatibility\n */\nexport async function toBase64(blob: Blob): Promise<string> {\n  return new Promise(async (resolve) => {\n    const reader = new FileReader();\n    reader.onloadend = function () {\n      resolve(\n        `${(reader.result as string)\n          .replace(/^data:application\\/octet-stream;base64,/, \"\")\n          .replaceAll(\"+\", \".\")\n          .replaceAll(\"/\", \"_\")\n          .replaceAll(\"=\", \"-\")}`,\n      );\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\nexport async function fromBase64(\n  base64: string,\n  fetch = window.fetch,\n): Promise<Blob> {\n  return fetch(\n    `data:application/octet-stream;base64,${base64\n      .replaceAll(\".\", \"+\")\n      .replaceAll(\"_\", \"/\")\n      .replaceAll(\"-\", \"=\")}`,\n  ).then((it) => it.blob());\n}\n","import type { CharaFile, CharaFiles } from \"../share/chara-file\";\nimport type { ActionArray } from \"../share/action-array\";\nimport {\n  deserializeActionArray,\n  serializeActionArray,\n} from \"../share/action-array\";\nimport { fromBase64, toBase64 } from \"../serialization/base64\";\n\ntype CharaLayoutOrder = {\n  [K in CharaFiles[\"type\"]]: Array<\n    [\n      Exclude<keyof Extract<CharaFiles, { type: K }>, keyof CharaFile<any>>,\n      (typeof CHARA_FILE_TYPES)[number],\n    ]\n  >;\n};\n\nconst keys: CharaLayoutOrder = {\n  layout: [\n    [\"layout\", \"array\"],\n    [\"device\", \"string\"],\n  ],\n  chords: [[\"chords\", \"array\"]],\n  settings: [[\"settings\", \"array\"]],\n};\n\nexport const CHARA_FILE_TYPES = [\n  \"unknown\",\n  \"number\",\n  \"string\",\n  \"array\",\n] as const;\n\nconst sep = \"\\n\";\n\nexport async function charaFileToUriComponent<T extends CharaFiles>(\n  file: T,\n): Promise<string> {\n  let url = `${file.type}${sep}${file.charaVersion}`;\n\n  for (const [key, type] of keys[file.type]) {\n    const value = file[key as keyof T];\n    url += sep;\n    if (type === \"string\") {\n      url += value as string;\n    } else if (type === \"array\") {\n      const stream = new Blob([serializeActionArray(value as ActionArray)])\n        .stream()\n        .pipeThrough(new CompressionStream(\"deflate\"));\n      url += await toBase64(await new Response(stream).blob());\n    } else {\n      throw new Error(\"Not implemented\");\n    }\n  }\n\n  return url;\n}\n\nexport async function charaFileFromUriComponent<T extends CharaFiles>(\n  uriComponent: string,\n  fetch = window.fetch,\n): Promise<T> {\n  const [fileType, version, ...values] = uriComponent.split(sep);\n  const file: any = { type: fileType, charaVersion: Number(version) };\n\n  for (const [key, type] of keys[fileType as keyof typeof keys]) {\n    const value = values.shift()!;\n    if (type === \"string\") {\n      file[key] = value;\n    } else if (type === \"array\") {\n      const stream = (await fromBase64(value, fetch))\n        .stream()\n        .pipeThrough(new DecompressionStream(\"deflate\"));\n      const actions = new Uint8Array(await new Response(stream).arrayBuffer());\n      file[key] = deserializeActionArray(actions);\n    }\n  }\n\n  return file;\n}\n"],"names":["globals","handle_promise","promise","info","token","update","type","index","key","value","child_ctx","block","needs_flush","i","group_outros","transition_out","check_outros","transition_in","flush","is_promise","current_component","get_current_component","set_current_component","error","update_await_block_branch","ctx","dirty","resolved","serializeActionArray","array","out","writer","CHARA_FILE_TYPES","compressed","compressActions","concatUint8Arrays","deserializeActionArray","raw","cursor","reader","length","decompressed","decompressActions","arrays","a","b","offset","toBase64","blob","resolve","fromBase64","base64","fetch","it","keys","sep","charaFileToUriComponent","file","url","stream","charaFileFromUriComponent","uriComponent","fileType","version","values","actions"],"mappings":"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","x_google_ignoreList":[0,1]}