{
  "version": 3,
  "sources": ["../../../@storybook/blocks/node_modules/color-name/index.js", "../../../@storybook/blocks/node_modules/color-convert/conversions.js", "../../../@storybook/blocks/node_modules/color-convert/route.js", "../../../@storybook/blocks/node_modules/color-convert/index.js", "../../../@storybook/blocks/dist/Color-6VNJS4EI.mjs", "../../../react-colorful/src/hooks/useEventCallback.ts", "../../../react-colorful/src/utils/clamp.ts", "../../../react-colorful/src/components/common/Interactive.tsx", "../../../react-colorful/src/utils/format.ts", "../../../react-colorful/src/components/common/Pointer.tsx", "../../../react-colorful/src/utils/round.ts", "../../../react-colorful/src/utils/convert.ts", "../../../react-colorful/src/components/common/Hue.tsx", "../../../react-colorful/src/components/common/Saturation.tsx", "../../../react-colorful/src/utils/compare.ts", "../../../react-colorful/src/hooks/useColorManipulation.ts", "../../../react-colorful/src/utils/nonce.ts", "../../../react-colorful/src/hooks/useIsomorphicLayoutEffect.ts", "../../../react-colorful/src/hooks/useStyleSheet.ts", "../../../react-colorful/src/components/common/ColorPicker.tsx", "../../../react-colorful/src/components/HexColorPicker.tsx", "../../../react-colorful/src/components/common/Alpha.tsx", "../../../react-colorful/src/components/common/AlphaColorPicker.tsx", "../../../react-colorful/src/components/HexAlphaColorPicker.tsx", "../../../react-colorful/src/components/HslaColorPicker.tsx", "../../../react-colorful/src/components/HslaStringColorPicker.tsx", "../../../react-colorful/src/components/HslColorPicker.tsx", "../../../react-colorful/src/components/HslStringColorPicker.tsx", "../../../react-colorful/src/components/HsvaColorPicker.tsx", "../../../react-colorful/src/components/HsvaStringColorPicker.tsx", "../../../react-colorful/src/components/HsvColorPicker.tsx", "../../../react-colorful/src/components/HsvStringColorPicker.tsx", "../../../react-colorful/src/components/RgbaColorPicker.tsx", "../../../react-colorful/src/components/RgbaStringColorPicker.tsx", "../../../react-colorful/src/components/RgbColorPicker.tsx", "../../../react-colorful/src/components/RgbStringColorPicker.tsx", "../../../react-colorful/src/utils/validate.ts", "../../../react-colorful/src/components/common/ColorInput.tsx", "../../../react-colorful/src/components/HexColorInput.tsx"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "import { getControlId } from './chunk-GWAJ4KRU.mjs';\nimport React, { useCallback, useState, useEffect, useMemo } from 'react';\nimport { HexColorPicker, RgbaStringColorPicker, HslaStringColorPicker } from 'react-colorful';\nimport convert from 'color-convert';\nimport throttle from 'lodash/throttle.js';\nimport { styled } from '@storybook/theming';\nimport { WithTooltip, TooltipNote, Form, Icons } from '@storybook/components';\n\nvar Wrapper=styled.div({position:\"relative\",maxWidth:250}),PickerTooltip=styled(WithTooltip)({position:\"absolute\",zIndex:1,top:4,left:4}),TooltipContent=styled.div({width:200,margin:5,\".react-colorful__saturation\":{borderRadius:\"4px 4px 0 0\"},\".react-colorful__hue\":{boxShadow:\"inset 0 0 0 1px rgb(0 0 0 / 5%)\"},\".react-colorful__last-control\":{borderRadius:\"0 0 4px 4px\"}}),Note=styled(TooltipNote)(({theme})=>({fontFamily:theme.typography.fonts.base})),Swatches=styled.div({display:\"grid\",gridTemplateColumns:\"repeat(9, 16px)\",gap:6,padding:3,marginTop:5,width:200}),SwatchColor=styled.div(({theme,active})=>({width:16,height:16,boxShadow:active?`${theme.appBorderColor} 0 0 0 1px inset, ${theme.textMutedColor}50 0 0 0 4px`:`${theme.appBorderColor} 0 0 0 1px inset`,borderRadius:theme.appBorderRadius})),swatchBackground=`url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill-opacity=\".05\"><path d=\"M8 0h8v8H8zM0 8h8v8H0z\"/></svg>')`,Swatch=({value,active,onClick,style,...props})=>{let backgroundImage=`linear-gradient(${value}, ${value}), ${swatchBackground}, linear-gradient(#fff, #fff)`;return React.createElement(SwatchColor,{...props,active,onClick,style:{...style,backgroundImage}})},Input=styled(Form.Input)(({theme})=>({width:\"100%\",paddingLeft:30,paddingRight:30,boxSizing:\"border-box\",fontFamily:theme.typography.fonts.base})),ToggleIcon=styled(Icons)(({theme})=>({position:\"absolute\",zIndex:1,top:6,right:7,width:20,height:20,padding:4,boxSizing:\"border-box\",cursor:\"pointer\",color:theme.input.color})),ColorSpace=(ColorSpace2=>(ColorSpace2.RGB=\"rgb\",ColorSpace2.HSL=\"hsl\",ColorSpace2.HEX=\"hex\",ColorSpace2))(ColorSpace||{}),COLOR_SPACES=Object.values(ColorSpace),COLOR_REGEXP=/\\(([0-9]+),\\s*([0-9]+)%?,\\s*([0-9]+)%?,?\\s*([0-9.]+)?\\)/,RGB_REGEXP=/^\\s*rgba?\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+),?\\s*([0-9.]+)?\\)\\s*$/i,HSL_REGEXP=/^\\s*hsla?\\(([0-9]+),\\s*([0-9]+)%,\\s*([0-9]+)%,?\\s*([0-9.]+)?\\)\\s*$/i,HEX_REGEXP=/^\\s*#?([0-9a-f]{3}|[0-9a-f]{6})\\s*$/i,SHORTHEX_REGEXP=/^\\s*#?([0-9a-f]{3})\\s*$/i,ColorPicker={hex:HexColorPicker,rgb:RgbaStringColorPicker,hsl:HslaStringColorPicker},fallbackColor={hex:\"transparent\",rgb:\"rgba(0, 0, 0, 0)\",hsl:\"hsla(0, 0%, 0%, 0)\"},stringToArgs=value=>{let match=value?.match(COLOR_REGEXP);if(!match)return [0,0,0,1];let[,x,y,z,a=1]=match;return [x,y,z,a].map(Number)},parseValue=value=>{if(!value)return;let valid=!0;if(RGB_REGEXP.test(value)){let[r,g,b,a]=stringToArgs(value),[h,s,l]=convert.rgb.hsl([r,g,b])||[0,0,0];return {valid,value,keyword:convert.rgb.keyword([r,g,b]),colorSpace:\"rgb\",rgb:value,hsl:`hsla(${h}, ${s}%, ${l}%, ${a})`,hex:`#${convert.rgb.hex([r,g,b]).toLowerCase()}`}}if(HSL_REGEXP.test(value)){let[h,s,l,a]=stringToArgs(value),[r,g,b]=convert.hsl.rgb([h,s,l])||[0,0,0];return {valid,value,keyword:convert.hsl.keyword([h,s,l]),colorSpace:\"hsl\",rgb:`rgba(${r}, ${g}, ${b}, ${a})`,hsl:value,hex:`#${convert.hsl.hex([h,s,l]).toLowerCase()}`}}let plain=value.replace(\"#\",\"\"),rgb=convert.keyword.rgb(plain)||convert.hex.rgb(plain),hsl=convert.rgb.hsl(rgb),mapped=value;if(/[^#a-f0-9]/i.test(value)?mapped=plain:HEX_REGEXP.test(value)&&(mapped=`#${plain}`),mapped.startsWith(\"#\"))valid=HEX_REGEXP.test(mapped);else try{convert.keyword.hex(mapped);}catch{valid=!1;}return {valid,value:mapped,keyword:convert.rgb.keyword(rgb),colorSpace:\"hex\",rgb:`rgba(${rgb[0]}, ${rgb[1]}, ${rgb[2]}, 1)`,hsl:`hsla(${hsl[0]}, ${hsl[1]}%, ${hsl[2]}%, 1)`,hex:mapped}},getRealValue=(value,color,colorSpace)=>{if(!value||!color?.valid)return fallbackColor[colorSpace];if(colorSpace!==\"hex\")return color?.[colorSpace]||fallbackColor[colorSpace];if(!color.hex.startsWith(\"#\"))try{return `#${convert.keyword.hex(color.hex)}`}catch{return fallbackColor.hex}let short=color.hex.match(SHORTHEX_REGEXP);if(!short)return HEX_REGEXP.test(color.hex)?color.hex:fallbackColor.hex;let[r,g,b]=short[1].split(\"\");return `#${r}${r}${g}${g}${b}${b}`},useColorInput=(initialValue,onChange)=>{let[value,setValue]=useState(initialValue||\"\"),[color,setColor]=useState(()=>parseValue(value)),[colorSpace,setColorSpace]=useState(color?.colorSpace||\"hex\");useEffect(()=>{let nextValue=initialValue||\"\",nextColor=parseValue(nextValue);setValue(nextValue),setColor(nextColor),setColorSpace(nextColor?.colorSpace||\"hex\");},[initialValue]);let realValue=useMemo(()=>getRealValue(value,color,colorSpace).toLowerCase(),[value,color,colorSpace]),updateValue=useCallback(update=>{let parsed=parseValue(update),v=parsed?.value||update||\"\";setValue(v),v===\"\"&&(setColor(void 0),onChange(void 0)),parsed&&(setColor(parsed),setColorSpace(parsed.colorSpace),onChange(parsed.value));},[onChange]),cycleColorSpace=useCallback(()=>{let next=COLOR_SPACES.indexOf(colorSpace)+1;next>=COLOR_SPACES.length&&(next=0),setColorSpace(COLOR_SPACES[next]);let update=color?.[COLOR_SPACES[next]]||\"\";setValue(update),onChange(update);},[color,colorSpace,onChange]);return {value,realValue,updateValue,color,colorSpace,cycleColorSpace}},id=value=>value.replace(/\\s*/,\"\").toLowerCase(),usePresets=(presetColors,currentColor,colorSpace)=>{let[selectedColors,setSelectedColors]=useState(currentColor?.valid?[currentColor]:[]);useEffect(()=>{currentColor===void 0&&setSelectedColors([]);},[currentColor]);let presets=useMemo(()=>(presetColors||[]).map(preset=>typeof preset==\"string\"?parseValue(preset):preset.title?{...parseValue(preset.color),keyword:preset.title}:parseValue(preset.color)).concat(selectedColors).filter(Boolean).slice(-27),[presetColors,selectedColors]),addPreset=useCallback(color=>{color?.valid&&(presets.some(preset=>id(preset[colorSpace])===id(color[colorSpace]))||setSelectedColors(arr=>arr.concat(color)));},[colorSpace,presets]);return {presets,addPreset}},ColorControl=({name,value:initialValue,onChange,onFocus,onBlur,presetColors,startOpen=!1})=>{let throttledOnChange=useCallback(throttle(onChange,200),[onChange]),{value,realValue,updateValue,color,colorSpace,cycleColorSpace}=useColorInput(initialValue,throttledOnChange),{presets,addPreset}=usePresets(presetColors,color,colorSpace),Picker=ColorPicker[colorSpace];return React.createElement(Wrapper,null,React.createElement(PickerTooltip,{startOpen,closeOnOutsideClick:!0,onVisibleChange:()=>addPreset(color),tooltip:React.createElement(TooltipContent,null,React.createElement(Picker,{color:realValue===\"transparent\"?\"#000000\":realValue,onChange:updateValue,onFocus,onBlur}),presets.length>0&&React.createElement(Swatches,null,presets.map((preset,index)=>React.createElement(WithTooltip,{key:`${preset.value}-${index}`,hasChrome:!1,tooltip:React.createElement(Note,{note:preset.keyword||preset.value})},React.createElement(Swatch,{value:preset[colorSpace],active:color&&id(preset[colorSpace])===id(color[colorSpace]),onClick:()=>updateValue(preset.value)})))))},React.createElement(Swatch,{value:realValue,style:{margin:4}})),React.createElement(Input,{id:getControlId(name),value,onChange:e=>updateValue(e.target.value),onFocus:e=>e.target.select(),placeholder:\"Choose color...\"}),value?React.createElement(ToggleIcon,{icon:\"markup\",onClick:cycleColorSpace}):null)},Color_default=ColorControl;\n\nexport { ColorControl, Color_default as default };\n", "import { useRef } from \"react\";\n\n// Saves incoming handler to the ref in order to avoid \"useCallback hell\"\nexport function useEventCallback<T>(handler?: (value: T) => void): (value: T) => void {\n  const callbackRef = useRef(handler);\n  const fn = useRef((value: T) => {\n    callbackRef.current && callbackRef.current(value);\n  });\n  callbackRef.current = handler;\n\n  return fn.current;\n}\n", "// Clamps a value between an upper and lower bound.\n// We use ternary operators because it makes the minified code\n// 2 times shorter then `Math.min(Math.max(a,b),c)`\nexport const clamp = (number: number, min = 0, max = 1): number => {\n  return number > max ? max : number < min ? min : number;\n};\n", "import React, { useRef, useMemo, useEffect } from \"react\";\n\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\nimport { clamp } from \"../../utils/clamp\";\n\nexport interface Interaction {\n  left: number;\n  top: number;\n}\n\n// Check if an event was triggered by touch\nconst isTouch = (event: MouseEvent | TouchEvent): event is TouchEvent => \"touches\" in event;\n\n// Finds a proper touch point by its identifier\nconst getTouchPoint = (touches: TouchList, touchId: null | number): Touch => {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === touchId) return touches[i];\n  }\n  return touches[0];\n};\n\n// Finds the proper window object to fix iframe embedding issues\nconst getParentWindow = (node?: HTMLDivElement | null): Window => {\n  return (node && node.ownerDocument.defaultView) || self;\n};\n\n// Returns a relative position of the pointer inside the node's bounding box\nconst getRelativePosition = (\n  node: HTMLDivElement,\n  event: MouseEvent | TouchEvent,\n  touchId: null | number\n): Interaction => {\n  const rect = node.getBoundingClientRect();\n\n  // Get user's pointer position from `touches` array if it's a `TouchEvent`\n  const pointer = isTouch(event) ? getTouchPoint(event.touches, touchId) : (event as MouseEvent);\n\n  return {\n    left: clamp((pointer.pageX - (rect.left + getParentWindow(node).pageXOffset)) / rect.width),\n    top: clamp((pointer.pageY - (rect.top + getParentWindow(node).pageYOffset)) / rect.height),\n  };\n};\n\n// Browsers introduced an intervention, making touch events passive by default.\n// This workaround removes `preventDefault` call from the touch handlers.\n// https://github.com/facebook/react/issues/19651\nconst preventDefaultMove = (event: MouseEvent | TouchEvent): void => {\n  !isTouch(event) && event.preventDefault();\n};\n\n// Prevent mobile browsers from handling mouse events (conflicting with touch ones).\n// If we detected a touch interaction before, we prefer reacting to touch events only.\nconst isInvalid = (event: MouseEvent | TouchEvent, hasTouch: boolean): boolean => {\n  return hasTouch && !isTouch(event);\n};\n\ninterface Props {\n  onMove: (interaction: Interaction) => void;\n  onKey: (offset: Interaction) => void;\n  children: React.ReactNode;\n}\n\nconst InteractiveBase = ({ onMove, onKey, ...rest }: Props) => {\n  const container = useRef<HTMLDivElement>(null);\n  const onMoveCallback = useEventCallback<Interaction>(onMove);\n  const onKeyCallback = useEventCallback<Interaction>(onKey);\n  const touchId = useRef<null | number>(null);\n  const hasTouch = useRef(false);\n\n  const [handleMoveStart, handleKeyDown, toggleDocumentEvents] = useMemo(() => {\n    const handleMoveStart = ({ nativeEvent }: React.MouseEvent | React.TouchEvent) => {\n      const el = container.current;\n      if (!el) return;\n\n      // Prevent text selection\n      preventDefaultMove(nativeEvent);\n\n      if (isInvalid(nativeEvent, hasTouch.current) || !el) return;\n\n      if (isTouch(nativeEvent)) {\n        hasTouch.current = true;\n        const changedTouches = nativeEvent.changedTouches || [];\n        if (changedTouches.length) touchId.current = changedTouches[0].identifier;\n      }\n\n      el.focus();\n      onMoveCallback(getRelativePosition(el, nativeEvent, touchId.current));\n      toggleDocumentEvents(true);\n    };\n\n    const handleMove = (event: MouseEvent | TouchEvent) => {\n      // Prevent text selection\n      preventDefaultMove(event);\n\n      // If user moves the pointer outside of the window or iframe bounds and release it there,\n      // `mouseup`/`touchend` won't be fired. In order to stop the picker from following the cursor\n      // after the user has moved the mouse/finger back to the document, we check `event.buttons`\n      // and `event.touches`. It allows us to detect that the user is just moving his pointer\n      // without pressing it down\n      const isDown = isTouch(event) ? event.touches.length > 0 : event.buttons > 0;\n\n      if (isDown && container.current) {\n        onMoveCallback(getRelativePosition(container.current, event, touchId.current));\n      } else {\n        toggleDocumentEvents(false);\n      }\n    };\n\n    const handleMoveEnd = () => toggleDocumentEvents(false);\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n      const keyCode = event.which || event.keyCode;\n\n      // Ignore all keys except arrow ones\n      if (keyCode < 37 || keyCode > 40) return;\n      // Do not scroll page by arrow keys when document is focused on the element\n      event.preventDefault();\n      // Send relative offset to the parent component.\n      // We use codes (37←, 38↑, 39→, 40↓) instead of keys ('ArrowRight', 'ArrowDown', etc)\n      // to reduce the size of the library\n      onKeyCallback({\n        left: keyCode === 39 ? 0.05 : keyCode === 37 ? -0.05 : 0,\n        top: keyCode === 40 ? 0.05 : keyCode === 38 ? -0.05 : 0,\n      });\n    };\n\n    function toggleDocumentEvents(state?: boolean) {\n      const touch = hasTouch.current;\n      const el = container.current;\n      const parentWindow = getParentWindow(el);\n\n      // Add or remove additional pointer event listeners\n      const toggleEvent = state ? parentWindow.addEventListener : parentWindow.removeEventListener;\n      toggleEvent(touch ? \"touchmove\" : \"mousemove\", handleMove);\n      toggleEvent(touch ? \"touchend\" : \"mouseup\", handleMoveEnd);\n    }\n\n    return [handleMoveStart, handleKeyDown, toggleDocumentEvents];\n  }, [onKeyCallback, onMoveCallback]);\n\n  // Remove window event listeners before unmounting\n  useEffect(() => toggleDocumentEvents, [toggleDocumentEvents]);\n\n  return (\n    <div\n      {...rest}\n      onTouchStart={handleMoveStart}\n      onMouseDown={handleMoveStart}\n      className=\"react-colorful__interactive\"\n      ref={container}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"slider\"\n    />\n  );\n};\n\nexport const Interactive = React.memo(InteractiveBase);\n", "export const formatClassName = (names: unknown[]): string => names.filter(Boolean).join(\" \");\n", "import React from \"react\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props {\n  className?: string;\n  top?: number;\n  left: number;\n  color: string;\n}\n\nexport const Pointer = ({ className, color, left, top = 0.5 }: Props): JSX.Element => {\n  const nodeClassName = formatClassName([\"react-colorful__pointer\", className]);\n\n  const style = {\n    top: `${top * 100}%`,\n    left: `${left * 100}%`,\n  };\n\n  return (\n    <div className={nodeClassName} style={style}>\n      <div className=\"react-colorful__pointer-fill\" style={{ backgroundColor: color }} />\n    </div>\n  );\n};\n", "export const round = (number: number, digits = 0, base = Math.pow(10, digits)): number => {\n  return Math.round(base * number) / base;\n};\n", "import { round } from \"./round\";\nimport { RgbaColor, RgbColor, HslaColor, HslColor, HsvaColor, HsvColor } from \"../types\";\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\n\nexport const hexToRgba = (hex: string): RgbaColor => {\n  if (hex[0] === \"#\") hex = hex.substring(1);\n\n  if (hex.length < 6) {\n    return {\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: hex.length === 4 ? round(parseInt(hex[3] + hex[3], 16) / 255, 2) : 1,\n    };\n  }\n\n  return {\n    r: parseInt(hex.substring(0, 2), 16),\n    g: parseInt(hex.substring(2, 4), 16),\n    b: parseInt(hex.substring(4, 6), 16),\n    a: hex.length === 8 ? round(parseInt(hex.substring(6, 8), 16) / 255, 2) : 1,\n  };\n};\n\nexport const parseHue = (value: string, unit = \"deg\"): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : 100 - l) / 100;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * 100 : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\n\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / 100;\n\n  return {\n    h: round(h),\n    s: round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: round(hh / 2),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  return `hsl(${h}, ${s}%, ${l}%)`;\n};\n\nexport const hsvaToHsvString = (hsva: HsvaColor): string => {\n  const { h, s, v } = roundHsva(hsva);\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = (hsva: HsvaColor): string => {\n  const { h, s, v, a } = roundHsva(hsva);\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  h = (h / 360) * 6;\n  s = s / 100;\n  v = v / 100;\n\n  const hh = Math.floor(h),\n    b = v * (1 - s),\n    c = v * (1 - (h - hh) * s),\n    d = v * (1 - (1 - h + hh) * s),\n    module = hh % 6;\n\n  return {\n    r: round([v, c, b, b, d, v][module] * 255),\n    g: round([d, v, v, c, b, b][module] * 255),\n    b: round([b, b, d, v, v, c][module] * 255),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher = /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return roundHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\n\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\nconst format = (number: number) => {\n  const hex = number.toString(16);\n  return hex.length < 2 ? \"0\" + hex : hex;\n};\n\nexport const rgbaToHex = ({ r, g, b, a }: RgbaColor): string => {\n  const alphaHex = a < 1 ? format(round(a * 255)) : \"\";\n  return \"#\" + format(r) + format(g) + format(b) + alphaHex;\n};\n\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? (delta / max) * 100 : 0),\n    v: round((max / 255) * 100),\n    a,\n  };\n};\n\nexport const roundHsva = (hsva: HsvaColor): HsvaColor => ({\n  h: round(hsva.h),\n  s: round(hsva.s),\n  v: round(hsva.v),\n  a: round(hsva.a, 2),\n});\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\n\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\n\nexport const hsvaToHsv = (hsva: HsvaColor): HsvColor => {\n  const { h, s, v } = roundHsva(hsva);\n  return { h, s, v };\n};\n", "import React from \"react\";\n\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\n\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { formatClassName } from \"../../utils/format\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  className?: string;\n  hue: number;\n  onChange: (newHue: { h: number }) => void;\n}\n\nconst HueBase = ({ className, hue, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({ h: 360 * interaction.left });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Hue measured in degrees of the color circle ranging from 0 to 360\n    onChange({\n      h: clamp(hue + offset.left * 360, 0, 360),\n    });\n  };\n\n  const nodeClassName = formatClassName([\"react-colorful__hue\", className]);\n\n  return (\n    <div className={nodeClassName}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Hue\"\n        aria-valuenow={round(hue)}\n        aria-valuemax=\"360\"\n        aria-valuemin=\"0\"\n      >\n        <Pointer\n          className=\"react-colorful__hue-pointer\"\n          left={hue / 360}\n          color={hsvaToHslString({ h: hue, s: 100, v: 100, a: 1 })}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Hue = React.memo(HueBase);\n", "import React from \"react\";\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\nimport { HsvaColor } from \"../../types\";\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  hsva: HsvaColor;\n  onChange: (newColor: { s: number; v: number }) => void;\n}\n\nconst SaturationBase = ({ hsva, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({\n      s: interaction.left * 100,\n      v: 100 - interaction.top * 100,\n    });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Saturation and brightness always fit into [0, 100] range\n    onChange({\n      s: clamp(hsva.s + offset.left * 100, 0, 100),\n      v: clamp(hsva.v - offset.top * 100, 0, 100),\n    });\n  };\n\n  const containerStyle = {\n    backgroundColor: hsvaToHslString({ h: hsva.h, s: 100, v: 100, a: 1 }),\n  };\n\n  return (\n    <div className=\"react-colorful__saturation\" style={containerStyle}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Color\"\n        aria-valuetext={`Saturation ${round(hsva.s)}%, Brightness ${round(hsva.v)}%`}\n      >\n        <Pointer\n          className=\"react-colorful__saturation-pointer\"\n          top={1 - hsva.v / 100}\n          left={hsva.s / 100}\n          color={hsvaToHslString(hsva)}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Saturation = React.memo(SaturationBase);\n", "import { hexToRgba } from \"./convert\";\nimport { ObjectColor } from \"../types\";\n\nexport const equalColorObjects = (first: ObjectColor, second: ObjectColor): boolean => {\n  if (first === second) return true;\n\n  for (const prop in first) {\n    // The following allows for a type-safe calling of this function (first & second have to be HSL, HSV, or RGB)\n    // with type-unsafe iterating over object keys. TS does not allow this without an index (`[key: string]: number`)\n    // on an object to define how iteration is normally done. To ensure extra keys are not allowed on our types,\n    // we must cast our object to unknown (as RGB demands `r` be a key, while `Record<string, x>` does not care if\n    // there is or not), and then as a type TS can iterate over.\n    if (\n      ((first as unknown) as Record<string, number>)[prop] !==\n      ((second as unknown) as Record<string, number>)[prop]\n    )\n      return false;\n  }\n\n  return true;\n};\n\nexport const equalColorString = (first: string, second: string): boolean => {\n  return first.replace(/\\s/g, \"\") === second.replace(/\\s/g, \"\");\n};\n\nexport const equalHex = (first: string, second: string): boolean => {\n  if (first.toLowerCase() === second.toLowerCase()) return true;\n\n  // To compare colors like `#FFF` and `ffffff` we convert them into RGB objects\n  return equalColorObjects(hexToRgba(first), hexToRgba(second));\n};\n", "import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { ColorModel, AnyColor, HsvaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { useEventCallback } from \"./useEventCallback\";\n\nexport function useColorManipulation<T extends AnyColor>(\n  colorModel: ColorModel<T>,\n  color: T,\n  onChange?: (color: T) => void\n): [HsvaColor, (color: Partial<HsvaColor>) => void] {\n  // Save onChange callback in the ref for avoiding \"useCallback hell\"\n  const onChangeCallback = useEventCallback<T>(onChange);\n\n  // No matter which color model is used (HEX, RGB(A) or HSL(A)),\n  // all internal calculations are based on HSVA model\n  const [hsva, updateHsva] = useState<HsvaColor>(() => colorModel.toHsva(color));\n\n  // By using this ref we're able to prevent extra updates\n  // and the effects recursion during the color conversion\n  const cache = useRef({ color, hsva });\n\n  // Update local HSVA-value if `color` property value is changed,\n  // but only if that's not the same color that we just sent to the parent\n  useEffect(() => {\n    if (!colorModel.equal(color, cache.current.color)) {\n      const newHsva = colorModel.toHsva(color);\n      cache.current = { hsva: newHsva, color };\n      updateHsva(newHsva);\n    }\n  }, [color, colorModel]);\n\n  // Trigger `onChange` callback only if an updated color is different from cached one;\n  // save the new color to the ref to prevent unnecessary updates\n  useEffect(() => {\n    let newColor;\n    if (\n      !equalColorObjects(hsva, cache.current.hsva) &&\n      !colorModel.equal((newColor = colorModel.fromHsva(hsva)), cache.current.color)\n    ) {\n      cache.current = { hsva, color: newColor };\n      onChangeCallback(newColor);\n    }\n  }, [hsva, colorModel, onChangeCallback]);\n\n  // Merge the current HSVA color object with updated params.\n  // For example, when a child component sends `h` or `s` only\n  const handleChange = useCallback((params: Partial<HsvaColor>) => {\n    updateHsva((current) => Object.assign({}, current, params));\n  }, []);\n\n  return [hsva, handleChange];\n}\n", "declare const __webpack_nonce__: string | undefined;\nlet nonce: string | undefined;\n\n/**\n * Returns a nonce hash included by Webpack or the one defined manually by developer.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n * https://webpack.js.org/guides/csp/\n */\nexport const getNonce = (): string | undefined => {\n  if (nonce) return nonce;\n  if (typeof __webpack_nonce__ !== \"undefined\") return __webpack_nonce__;\n  return undefined;\n};\n\n/**\n * Signs the style tag with a base64-encoded string (nonce) to conforms to Content Security Policies.\n * This function has to be invoked before any picker is rendered if you aren't using Webpack for CSP.\n */\nexport const setNonce = (hash: string): void => {\n  nonce = hash;\n};\n", "import { useLayoutEffect, useEffect } from \"react\";\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n", "import { RefObject } from \"react\";\n\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { getNonce } from \"../utils/nonce\";\n\n// Bundler is configured to load this as a processed minified CSS-string\nimport styles from \"../css/styles.css\";\n\nconst styleElementMap: Map<Document, HTMLStyleElement> = new Map();\n\n/**\n * Injects CSS code into the document's <head>\n */\nexport const useStyleSheet = (nodeRef: RefObject<HTMLDivElement>): void => {\n  useIsomorphicLayoutEffect(() => {\n    const parentDocument = nodeRef.current ? nodeRef.current.ownerDocument : document;\n\n    if (typeof parentDocument !== \"undefined\" && !styleElementMap.has(parentDocument)) {\n      const styleElement = parentDocument.createElement(\"style\");\n      styleElement.innerHTML = styles;\n      styleElementMap.set(parentDocument, styleElement);\n\n      // Conform to CSP rules by setting `nonce` attribute to the inline styles\n      const nonce = getNonce();\n      if (nonce) styleElement.setAttribute(\"nonce\", nonce);\n\n      parentDocument.head.appendChild(styleElement);\n    }\n  }, []);\n};\n", "import React, { useRef } from \"react\";\n\nimport { Hue } from \"./Hue\";\nimport { Saturation } from \"./Saturation\";\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\";\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\";\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>;\n}\n\nexport const ColorPicker = <T extends AnyColor>({\n  className,\n  colorModel,\n  color = colorModel.defaultColor,\n  onChange,\n  ...rest\n}: Props<T>): JSX.Element => {\n  const nodeRef = useRef<HTMLDivElement>(null);\n  useStyleSheet(nodeRef);\n\n  const [hsva, updateHsva] = useColorManipulation<T>(colorModel, color, onChange);\n\n  const nodeClassName = formatClassName([\"react-colorful\", className]);\n\n  return (\n    <div {...rest} ref={nodeRef} className={nodeClassName}>\n      <Saturation hsva={hsva} onChange={updateHsva} />\n      <Hue hue={hsva.h} onChange={updateHsva} className=\"react-colorful__last-control\" />\n    </div>\n  );\n};\n", "import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalHex } from \"../utils/compare\";\nimport { hexToHsva, hsvaToHex } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"000\",\n  toHsva: hexToHsva,\n  fromHsva: ({ h, s, v }) => hsvaToHex({ h, s, v, a: 1 }),\n  equal: equalHex,\n};\n\nexport const HexColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\n\nimport { hsvaToHslaString } from \"../../utils/convert\";\nimport { formatClassName } from \"../../utils/format\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\nimport { HsvaColor } from \"../../types\";\n\ninterface Props {\n  className?: string;\n  hsva: HsvaColor;\n  onChange: (newAlpha: { a: number }) => void;\n}\n\nexport const Alpha = ({ className, hsva, onChange }: Props): JSX.Element => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({ a: interaction.left });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Alpha always fit into [0, 1] range\n    onChange({ a: clamp(hsva.a + offset.left) });\n  };\n\n  // We use `Object.assign` instead of the spread operator\n  // to prevent adding the polyfill (about 150 bytes gzipped)\n  const colorFrom = hsvaToHslaString(Object.assign({}, hsva, { a: 0 }));\n  const colorTo = hsvaToHslaString(Object.assign({}, hsva, { a: 1 }));\n\n  const gradientStyle = {\n    backgroundImage: `linear-gradient(90deg, ${colorFrom}, ${colorTo})`,\n  };\n\n  const nodeClassName = formatClassName([\"react-colorful__alpha\", className]);\n  const ariaValue = round(hsva.a * 100);\n\n  return (\n    <div className={nodeClassName}>\n      <div className=\"react-colorful__alpha-gradient\" style={gradientStyle} />\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Alpha\"\n        aria-valuetext={`${ariaValue}%`}\n        aria-valuenow={ariaValue}\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        <Pointer\n          className=\"react-colorful__alpha-pointer\"\n          left={hsva.a}\n          color={hsvaToHslaString(hsva)}\n        />\n      </Interactive>\n    </div>\n  );\n};\n", "import React, { useRef } from \"react\";\n\nimport { Hue } from \"./Hue\";\nimport { Saturation } from \"./Saturation\";\nimport { Alpha } from \"./Alpha\";\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\";\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\";\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>;\n}\n\nexport const AlphaColorPicker = <T extends AnyColor>({\n  className,\n  colorModel,\n  color = colorModel.defaultColor,\n  onChange,\n  ...rest\n}: Props<T>): JSX.Element => {\n  const nodeRef = useRef<HTMLDivElement>(null);\n  useStyleSheet(nodeRef);\n\n  const [hsva, updateHsva] = useColorManipulation<T>(colorModel, color, onChange);\n\n  const nodeClassName = formatClassName([\"react-colorful\", className]);\n\n  return (\n    <div {...rest} ref={nodeRef} className={nodeClassName}>\n      <Saturation hsva={hsva} onChange={updateHsva} />\n      <Hue hue={hsva.h} onChange={updateHsva} />\n      <Alpha hsva={hsva} onChange={updateHsva} className=\"react-colorful__last-control\" />\n    </div>\n  );\n};\n", "import React from \"react\";\n\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalHex } from \"../utils/compare\";\nimport { hexToHsva, hsvaToHex } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"0001\",\n  toHsva: hexToHsva,\n  fromHsva: hsvaToHex,\n  equal: equalHex,\n};\n\nexport const HexAlphaColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\nimport { ColorModel, ColorPickerBaseProps, HslaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { hslaToHsva, hsvaToHsla } from \"../utils/convert\";\n\nconst colorModel: ColorModel<HslaColor> = {\n  defaultColor: { h: 0, s: 0, l: 0, a: 1 },\n  toHsva: hslaToHsva,\n  fromHsva: hsvaToHsla,\n  equal: equalColorObjects,\n};\n\nexport const HslaColorPicker = (props: Partial<ColorPickerBaseProps<HslaColor>>): JSX.Element => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalColorString } from \"../utils/compare\";\nimport { hslaStringToHsva, hsvaToHslaString } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"hsla(0, 0%, 0%, 1)\",\n  toHsva: hslaStringToHsva,\n  fromHsva: hsvaToHslaString,\n  equal: equalColorString,\n};\n\nexport const HslaStringColorPicker = (\n  props: Partial<ColorPickerBaseProps<string>>\n): JSX.Element => <AlphaColorPicker {...props} colorModel={colorModel} />;\n", "import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps, HslColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { hslaToHsva, hsvaToHsla, hslaToHsl } from \"../utils/convert\";\n\nconst colorModel: ColorModel<HslColor> = {\n  defaultColor: { h: 0, s: 0, l: 0 },\n  toHsva: ({ h, s, l }) => hslaToHsva({ h, s, l, a: 1 }),\n  fromHsva: (hsva) => hslaToHsl(hsvaToHsla(hsva)),\n  equal: equalColorObjects,\n};\n\nexport const HslColorPicker = (props: Partial<ColorPickerBaseProps<HslColor>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalColorString } from \"../utils/compare\";\nimport { hslStringToHsva, hsvaToHslString } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"hsl(0, 0%, 0%)\",\n  toHsva: hslStringToHsva,\n  fromHsva: hsvaToHslString,\n  equal: equalColorString,\n};\n\nexport const HslStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\nimport { ColorModel, ColorPickerBaseProps, HsvaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { roundHsva } from \"../utils/convert\";\n\nconst colorModel: ColorModel<HsvaColor> = {\n  defaultColor: { h: 0, s: 0, v: 0, a: 1 },\n  toHsva: (hsva) => hsva,\n  fromHsva: roundHsva,\n  equal: equalColorObjects,\n};\n\nexport const HsvaColorPicker = (props: Partial<ColorPickerBaseProps<HsvaColor>>): JSX.Element => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalColorString } from \"../utils/compare\";\nimport { hsvaStringToHsva, hsvaToHsvaString } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"hsva(0, 0%, 0%, 1)\",\n  toHsva: hsvaStringToHsva,\n  fromHsva: hsvaToHsvaString,\n  equal: equalColorString,\n};\n\nexport const HsvaStringColorPicker = (\n  props: Partial<ColorPickerBaseProps<string>>\n): JSX.Element => <AlphaColorPicker {...props} colorModel={colorModel} />;\n", "import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps, HsvColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { hsvaToHsv } from \"../utils/convert\";\n\nconst colorModel: ColorModel<HsvColor> = {\n  defaultColor: { h: 0, s: 0, v: 0 },\n  toHsva: ({ h, s, v }) => ({ h, s, v, a: 1 }),\n  fromHsva: hsvaToHsv,\n  equal: equalColorObjects,\n};\n\nexport const HsvColorPicker = (props: Partial<ColorPickerBaseProps<HsvColor>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalColorString } from \"../utils/compare\";\nimport { hsvStringToHsva, hsvaToHsvString } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"hsv(0, 0%, 0%)\",\n  toHsva: hsvStringToHsva,\n  fromHsva: hsvaToHsvString,\n  equal: equalColorString,\n};\n\nexport const HsvStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\nimport { ColorModel, ColorPickerBaseProps, RgbaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { rgbaToHsva, hsvaToRgba } from \"../utils/convert\";\n\nconst colorModel: ColorModel<RgbaColor> = {\n  defaultColor: { r: 0, g: 0, b: 0, a: 1 },\n  toHsva: rgbaToHsva,\n  fromHsva: hsvaToRgba,\n  equal: equalColorObjects,\n};\n\nexport const RgbaColorPicker = (props: Partial<ColorPickerBaseProps<RgbaColor>>): JSX.Element => (\n  <AlphaColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { AlphaColorPicker } from \"./common/AlphaColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalColorString } from \"../utils/compare\";\nimport { rgbaStringToHsva, hsvaToRgbaString } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"rgba(0, 0, 0, 1)\",\n  toHsva: rgbaStringToHsva,\n  fromHsva: hsvaToRgbaString,\n  equal: equalColorString,\n};\n\nexport const RgbaStringColorPicker = (\n  props: Partial<ColorPickerBaseProps<string>>\n): JSX.Element => <AlphaColorPicker {...props} colorModel={colorModel} />;\n", "import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps, RgbColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { rgbaToHsva, hsvaToRgba, rgbaToRgb } from \"../utils/convert\";\n\nconst colorModel: ColorModel<RgbColor> = {\n  defaultColor: { r: 0, g: 0, b: 0 },\n  toHsva: ({ r, g, b }) => rgbaToHsva({ r, g, b, a: 1 }),\n  fromHsva: (hsva) => rgbaToRgb(hsvaToRgba(hsva)),\n  equal: equalColorObjects,\n};\n\nexport const RgbColorPicker = (props: Partial<ColorPickerBaseProps<RgbColor>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n", "import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalColorString } from \"../utils/compare\";\nimport { rgbStringToHsva, hsvaToRgbString } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"rgb(0, 0, 0)\",\n  toHsva: rgbStringToHsva,\n  fromHsva: hsvaToRgbString,\n  equal: equalColorString,\n};\n\nexport const RgbStringColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n", "const matcher = /^#?([0-9A-F]{3,8})$/i;\n\nexport const validHex = (value: string, alpha?: boolean): boolean => {\n  const match = matcher.exec(value);\n  const length = match ? match[1].length : 0;\n\n  return (\n    length === 3 || // '#rgb' format\n    length === 6 || // '#rrggbb' format\n    (!!alpha && length === 4) || // '#rgba' format\n    (!!alpha && length === 8) // '#rrggbbaa' format\n  );\n};\n", "import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\nimport { ColorInputBaseProps } from \"../../types\";\n\ninterface Props extends ColorInputBaseProps {\n  /** Blocks typing invalid characters and limits string length */\n  escape: (value: string) => string;\n  /** Checks that value is valid color string */\n  validate: (value: string) => boolean;\n  /** Processes value before displaying it in the input */\n  format?: (value: string) => string;\n  /** Processes value before sending it in `onChange` */\n  process?: (value: string) => string;\n}\n\nexport const ColorInput = (props: Props): JSX.Element => {\n  const { color = \"\", onChange, onBlur, escape, validate, format, process, ...rest } = props;\n  const [value, setValue] = useState(() => escape(color));\n  const onChangeCallback = useEventCallback<string>(onChange);\n  const onBlurCallback = useEventCallback<React.FocusEvent<HTMLInputElement>>(onBlur);\n\n  // Trigger `onChange` handler only if the input value is a valid color\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const inputValue = escape(e.target.value);\n      setValue(inputValue);\n      if (validate(inputValue)) onChangeCallback(process ? process(inputValue) : inputValue);\n    },\n    [escape, process, validate, onChangeCallback]\n  );\n\n  // Take the color from props if the last typed color (in local state) is not valid\n  const handleBlur = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      if (!validate(e.target.value)) setValue(escape(color));\n      onBlurCallback(e);\n    },\n    [color, escape, validate, onBlurCallback]\n  );\n\n  // Update the local state when `color` property value is changed\n  useEffect(() => {\n    setValue(escape(color));\n  }, [color, escape]);\n\n  return (\n    <input\n      {...rest}\n      value={format ? format(value) : value}\n      spellCheck=\"false\" // the element should not be checked for spelling errors\n      onChange={handleChange}\n      onBlur={handleBlur}\n    />\n  );\n};\n", "import React, { useCallback } from \"react\";\nimport { ColorInputBaseProps } from \"../types\";\n\nimport { validHex } from \"../utils/validate\";\nimport { ColorInput } from \"./common/ColorInput\";\n\ninterface HexColorInputProps extends ColorInputBaseProps {\n  /** Enables `#` prefix displaying */\n  prefixed?: boolean;\n  /** Allows `#rgba` and `#rrggbbaa` color formats */\n  alpha?: boolean;\n}\n\n/** Adds \"#\" symbol to the beginning of the string */\nconst prefix = (value: string) => \"#\" + value;\n\nexport const HexColorInput = (props: HexColorInputProps): JSX.Element => {\n  const { prefixed, alpha, ...rest } = props;\n\n  /** Escapes all non-hexadecimal characters including \"#\" */\n  const escape = useCallback(\n    (value: string) => value.replace(/([^0-9A-F]+)/gi, \"\").substring(0, alpha ? 8 : 6),\n    [alpha]\n  );\n\n  /** Validates hexadecimal strings */\n  const validate = useCallback((value: string) => validHex(value, alpha), [alpha]);\n\n  return (\n    <ColorInput\n      {...rest}\n      escape={escape}\n      format={prefixed ? prefix : undefined}\n      process={prefix}\n      validate={validate}\n    />\n  );\n};\n"],
  "mappings": "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",
  "names": ["convert", "r", "g", "b", "h", "s", "l", "v", "c", "w", "k", "m", "y", "x", "z", "a", "i", "f", "p", "q", "t", "n", "y2", "x2", "z2", "i", "convert", "i", "import_react", "useEventCallback", "handler", "callbackRef", "useRef", "fn", "value", "current", "clamp", "number", "min", "max", "isTouch", "event", "getParentWindow", "node", "ownerDocument", "defaultView", "self", "getRelativePosition", "touchId", "rect", "getBoundingClientRect", "pointer", "touches", "i", "length", "identifier", "left", "pageX", "pageXOffset", "width", "top", "pageY", "pageYOffset", "height", "preventDefaultMove", "preventDefault", "Interactive", "React", "memo", "o", "onMove", "onKey", "rest", "container", "onMoveCallback", "onKeyCallback", "hasTouch", "x", "useMemo", "handleMove", "buttons", "toggleDocumentEvents", "handleMoveEnd", "state", "touch", "parentWindow", "toggleEvent", "addEventListener", "removeEventListener", "e", "nativeEvent", "el", "changedTouches", "focus", "keyCode", "which", "handleMoveStart", "handleKeyDown", "useEffect", "onTouchStart", "onMouseDown", "className", "ref", "onKeyDown", "tabIndex", "role", "formatClassName", "names", "filter", "Boolean", "join", "Pointer", "r", "color", "nodeClassName", "style", "backgroundColor", "round", "digits", "base", "Math", "pow", "angleUnits", "grad", "turn", "rad", "PI", "hexToHsva", "hex", "rgbaToHsva", "hexToRgba", "substring", "parseInt", "g", "b", "a", "parseHue", "unit", "Number", "hslaStringToHsva", "hslString", "match", "exec", "hslaToHsva", "h", "s", "l", "v", "current", "hslaToHsva", "e", "s", "l", "h", "v", "a", "hsvaToHex", "hsva", "rgbaToHex", "hsvaToRgba", "hsvaToHsla", "hh", "round", "hsvaToHslString", "r", "hsvaToHslaString", "Math", "floor", "b", "c", "d", "module", "g", "current", "rgbaStringToHsva", "rgbaString", "match", "exec", "rgbaToHsva", "r", "Number", "g", "b", "a", "h", "s", "v", "current", "format", "number", "hex", "toString", "length", "rgbaToHex", "e", "r", "g", "b", "a", "alphaHex", "round", "rgbaToHsva", "max", "Math", "delta", "min", "hh", "h", "s", "v", "current", "Hue", "React", "memo", "r", "hue", "onChange", "nodeClassName", "formatClassName", "className", "Interactive", "onMove", "interaction", "h", "left", "onKey", "offset", "clamp", "aria-label", "aria-valuenow", "round", "aria-valuemax", "aria-valuemin", "Pointer", "color", "hsvaToHslString", "s", "v", "a", "Saturation", "hsva", "containerStyle", "backgroundColor", "style", "top", "aria-valuetext", "equalColorObjects", "first", "second", "prop", "equalColorString", "replace", "equalHex", "toLowerCase", "hexToRgba", "useColorManipulation", "colorModel", "onChangeCallback", "useEventCallback", "useState", "toHsva", "updateHsva", "cache", "useRef", "useEffect", "equal", "newHsva", "newColor", "fromHsva", "handleChange", "useCallback", "params", "Object", "assign", "nonce", "useIsomorphicLayoutEffect", "window", "useLayoutEffect", "getNonce", "__webpack_nonce__", "handleChange", "styleElementMap", "Map", "useStyleSheet", "nodeRef", "useIsomorphicLayoutEffect", "parentDocument", "current", "ownerDocument", "document", "has", "styleElement", "createElement", "innerHTML", "set", "nonce", "getNonce", "setAttribute", "head", "appendChild", "ColorPicker", "t", "className", "colorModel", "color", "defaultColor", "onChange", "rest", "useRef", "useColorManipulation", "hsva", "updateHsva", "nodeClassName", "formatClassName", "React", "ref", "Saturation", "Hue", "hue", "h", "toHsva", "hexToHsva", "fromHsva", "e", "hsvaToHex", "s", "v", "a", "equal", "equalHex", "HexColorPicker", "props", "Alpha", "r", "gradientStyle", "backgroundImage", "hsvaToHslaString", "Object", "assign", "ariaValue", "round", "style", "Interactive", "onMove", "interaction", "left", "onKey", "offset", "clamp", "aria-label", "aria-valuetext", "aria-valuenow", "aria-valuemin", "aria-valuemax", "Pointer", "AlphaColorPicker", "handleChange", "colorModel", "defaultColor", "toHsva", "hslaStringToHsva", "fromHsva", "hsvaToHslaString", "equal", "equalColorString", "HslaStringColorPicker", "props", "React", "AlphaColorPicker", "handleChange", "colorModel", "defaultColor", "toHsva", "rgbaStringToHsva", "fromHsva", "hsva", "hsvaToRgba", "r", "g", "b", "a", "equal", "equalColorString", "RgbaStringColorPicker", "props", "React", "AlphaColorPicker", "React", "x", "y", "z", "a", "r", "g", "b", "h", "s", "l", "convert", "v", "throttle", "e"]
}
